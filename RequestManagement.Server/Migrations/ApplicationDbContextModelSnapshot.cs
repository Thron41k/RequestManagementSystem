// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DefectGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DefectGroupId");

                    b.ToTable("Defects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefectGroupId = 1,
                            Name = "Трещина корпуса"
                        },
                        new
                        {
                            Id = 2,
                            DefectGroupId = 2,
                            Name = "Короткое замыкание"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefectGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Механические повреждения"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Электрические неисправности"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Иванов Иван Иванович",
                            Position = "Водитель",
                            ShortName = "Иванов И.И."
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Петров Петр Петрович",
                            Position = "Водитель",
                            ShortName = "Петров П.П."
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "КАМАЗ 53215-15",
                            StateNumber = "Н 507 СН"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DefectId")
                        .HasColumnType("integer");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DefectId");

                    b.HasIndex("DriverId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("StockId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 4, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            DefectId = 1,
                            DriverId = 1,
                            EquipmentId = 1,
                            Quantity = 5m,
                            StockId = 1
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Name = "Аккумулятор 6СТ-190",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            UnitOfMeasure = "шт"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConsumedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ReceivedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 70m,
                            NomenclatureId = 1,
                            ReceivedQuantity = 0m,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 10m,
                            NomenclatureId = 2,
                            ReceivedQuantity = 0m,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 40m,
                            NomenclatureId = 1,
                            ReceivedQuantity = 0m,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 4,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 20m,
                            NomenclatureId = 2,
                            ReceivedQuantity = 0m,
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.DefectGroup", "DefectGroup")
                        .WithMany("Defects")
                        .HasForeignKey("DefectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefectGroup");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Expense", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Defect", "Defect")
                        .WithMany()
                        .HasForeignKey("DefectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Defect");

                    b.Navigation("Driver");

                    b.Navigation("Equipment");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Stock", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany("Stocks")
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany("Stocks")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Navigation("Defects");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
