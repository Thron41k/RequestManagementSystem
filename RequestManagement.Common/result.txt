//IAuthService.cs
using RequestManagement.Common.Models;
using RequestManagement.Common.Models.Enums;

namespace RequestManagement.Common.Interfaces;

/// <summary>
/// Интерфейс сервиса авторизации
/// </summary>
public interface IAuthService
{
    /// <summary>
    /// Аутентифицирует пользователя по логину и паролю
    /// </summary>
    /// <param name="login">Логин пользователя</param>
    /// <param name="password">Пароль пользователя</param>
    /// <returns>Модель пользователя при успешной аутентификации или null, если аутентификация не удалась</returns>
    Task<User> AuthenticateAsync(string login, string password);

    /// <summary>
    /// Проверяет, имеет ли пользователь права на выполнение действия
    /// </summary>
    /// <param name="userId">Идентификатор пользователя</param>
    /// <param name="requiredRole">Требуемая роль для действия</param>
    /// <returns>Признак наличия прав</returns>
    Task<bool> AuthorizeAsync(int userId, UserRole requiredRole);
}

//IDefectService.cs
using RequestManagement.Common.Models;

namespace RequestManagement.Common.Interfaces;

public interface IDefectService
{
    Task<List<DefectGroup>> GetAllDefectGroupsAsync(string filter = "");
    Task<int> CreateDefectGroupAsync(DefectGroup defectGroup);
    Task<bool> UpdateDefectGroupAsync(DefectGroup defectGroup);
    Task<bool> DeleteDefectGroupAsync(int id);

    Task<List<Defect>> GetAllDefectsAsync(string filter = "");
    Task<int> CreateDefectAsync(Defect defect);
    Task<bool> UpdateDefectAsync(Defect defect);
    Task<bool> DeleteDefectAsync(int id);
}

//IDriverService.cs
using RequestManagement.Common.Models;

namespace RequestManagement.Common.Interfaces;

public interface IDriverService
{
    Task<List<Driver>> GetAllDriversAsync(string filter = "");
    Task<int> CreateDriverAsync(Driver driver);
    Task<bool> UpdateDriverAsync(Driver driver);
    Task<bool> DeleteDriverAsync(int id);
}

//IEquipmentService.cs
using RequestManagement.Common.Models;

namespace RequestManagement.Common.Interfaces;

public interface IEquipmentService
{
    Task<int> CreateEquipmentAsync(Equipment equipment);
    Task<bool> UpdateEquipmentAsync(Equipment equipment);
    Task<bool> DeleteEquipmentAsync(int id);
    Task<List<Equipment>> GetAllEquipmentAsync(string filter = "");
}

//INomenclatureService.cs
using RequestManagement.Common.Models;

namespace RequestManagement.Common.Interfaces;

public interface INomenclatureService
{
    Task<List<Nomenclature>> GetAllNomenclaturesAsync(string filter = "");
    Task<int> CreateNomenclatureAsync(Nomenclature nomenclature);
    Task<bool> UpdateNomenclatureAsync(Nomenclature nomenclature);
    Task<bool> DeleteNomenclatureAsync(int id);
}

//IRequestService.cs
using RequestManagement.Common.Models;

namespace RequestManagement.Common.Interfaces;

public interface IRequestService
{
    Task<int> CreateEquipmentAsync(Equipment equipment);
    Task<bool> UpdateEquipmentAsync(Equipment equipment);
    Task<bool> DeleteEquipmentAsync(int id);
    Task<List<Equipment>> GetAllEquipmentAsync(string filter = "");

    Task<List<Driver>> GetAllDriversAsync(string filter = "");
    Task<int> CreateDriverAsync(Driver driver);
    Task<bool> UpdateDriverAsync(Driver driver);
    Task<bool> DeleteDriverAsync(int id);

    Task<List<DefectGroup>> GetAllDefectGroupsAsync(string filter = "");
    Task<int> CreateDefectGroupAsync(DefectGroup driver);
    Task<bool> UpdateDefectGroupAsync(DefectGroup driver);
    Task<bool> DeleteDefectGroupAsync(int id);

    Task<List<Defect>> GetAllDefectsAsync(string filter = "");
    Task<int> CreateDefectAsync(Defect driver);
    Task<bool> UpdateDefectAsync(Defect driver);
    Task<bool> DeleteDefectAsync(int id);

    Task<List<Warehouse>> GetAllWarehousesAsync(string filter = "");
    Task<int> CreateWarehouseAsync(Warehouse warehouse);
    Task<bool> UpdateWarehouseAsync(Warehouse warehouse);
    Task<bool> DeleteWarehouseAsync(int id);

    Task<List<Nomenclature>> GetAllNomenclaturesAsync(string filter = "");
    Task<int> CreateNomenclatureAsync(Nomenclature nomenclature);
    Task<bool> UpdateNomenclatureAsync(Nomenclature nomenclature);
    Task<bool> DeleteNomenclatureAsync(int id);
}

//IStockService.cs
using RequestManagement.Common.Models;

namespace RequestManagement.Common.Interfaces;

public interface IStockService
{
    Task<int> CreateStockAsync(Stock stock);
    Task<bool> UpdateStockAsync(Stock stock);
    Task<bool> DeleteStockAsync(int id);
    Task<List<Stock>> GetAllStocksAsync(int warehouseId,
        string filter = "",
        int initialQuantityFilterType = 0,
        double initialQuantityFilter = 0,
        int receivedQuantityFilterType = 0,
        double receivedQuantityFilter = 0,
        int consumedQuantityFilterType = 0,
        double consumedQuantityFilter = 0,
        int finalQuantityFilterType = 0,
        double finalQuantityFilter = 0
        );
}

//IUserService.cs
using RequestManagement.Common.Models;
using RequestManagement.Common.Models.Enums;

namespace RequestManagement.Common.Interfaces;

/// <summary>
/// Интерфейс сервиса для работы с пользователями
/// </summary>
public interface IUserService
{
    /// <summary>
    /// Создает нового пользователя
    /// </summary>
    /// <param name="user">Модель пользователя для создания</param>
    /// <returns>Идентификатор созданного пользователя</returns>
    Task<int> CreateUserAsync(User user);

    /// <summary>
    /// Обновляет данные пользователя
    /// </summary>
    /// <param name="user">Обновленная модель пользователя</param>
    /// <returns>Признак успешного обновления</returns>
    Task<bool> UpdateUserAsync(User user);

    /// <summary>
    /// Удаляет пользователя по идентификатору
    /// </summary>
    /// <param name="userId">Идентификатор пользователя</param>
    /// <returns>Признак успешного удаления</returns>
    Task<bool> DeleteUserAsync(int userId);

    /// <summary>
    /// Получает пользователя по идентификатору
    /// </summary>
    /// <param name="userId">Идентификатор пользователя</param>
    /// <returns>Модель пользователя или null, если пользователь не найден</returns>
    Task<User> GetUserByIdAsync(int userId);

    /// <summary>
    /// Получает пользователя по логину
    /// </summary>
    /// <param name="login">Логин пользователя</param>
    /// <returns>Модель пользователя или null, если пользователь не найден</returns>
    Task<User> GetUserByLoginAsync(string login);

    /// <summary>
    /// Проверяет, имеет ли пользователь указанную роль
    /// </summary>
    /// <param name="userId">Идентификатор пользователя</param>
    /// <param name="role">Роль для проверки</param>
    /// <returns>Признак соответствия роли</returns>
    Task<bool> HasRoleAsync(int userId, UserRole role);
}

//IWarehouseService.cs
using RequestManagement.Common.Models;

namespace RequestManagement.Common.Interfaces;

public interface IWarehouseService
{
    Task<List<Warehouse>> GetAllWarehousesAsync(string filter = "");
    Task<int> CreateWarehouseAsync(Warehouse warehouse);
    Task<bool> UpdateWarehouseAsync(Warehouse warehouse);
    Task<bool> DeleteWarehouseAsync(int id);
}

//Defect.cs
using RequestManagement.Common.Models.Interfaces;

namespace RequestManagement.Common.Models;

public class Defect : IEntity
{
    public int Id { get; set; }
    public string Name { get; set; } = string.Empty;
    public int DefectGroupId { get; set; }      // Группа дефекта (внешний ключ)
    public DefectGroup DefectGroup { get; set; }
}

//DefectGroup.cs
using RequestManagement.Common.Models.Interfaces;

namespace RequestManagement.Common.Models;

public class DefectGroup : IEntity
{
    public int Id { get; set; }
    public string Name { get; set; } = string.Empty;
    public List<Defect> Defects { get; set; } = [];
}

//Driver.cs
using RequestManagement.Common.Models.Interfaces;

namespace RequestManagement.Common.Models;

public class Driver : IEntity
{
    public int Id { get; set; }
    public string FullName { get; set; } = string.Empty;
    public string ShortName { get; set; } = string.Empty;
    public string Position { get; set; } = string.Empty;
}

//Equipment.cs
using RequestManagement.Common.Models.Interfaces;

namespace RequestManagement.Common.Models;

/// <summary>
/// Модель единицы техники (назначения) для заявки
/// </summary>
public class Equipment : IEntity
{
    /// <summary>
    /// Уникальный идентификатор единицы техники
    /// </summary>
    public int Id { get; set; }

    /// <summary>
    /// Название единицы техники
    /// </summary>
    public string Name { get; set; } = string.Empty;

    /// <summary>
    /// Государственный номер (может отсутствовать)
    /// </summary>
    public string? StateNumber { get; set; } = string.Empty;
}

//Helpers.cs
namespace RequestManagement.Common.Models;

public static class Helpers
{
    public record QuantityFilter(decimal Value, ComparisonOperator Operator)
    {
        private static QuantityFilter GreaterThan(decimal value) => new(value, ComparisonOperator.GreaterThan);
        private static QuantityFilter EqualTo(decimal value) => new(value, ComparisonOperator.EqualTo);
        private static QuantityFilter LessThan(decimal value) => new(value, ComparisonOperator.LessThan);
        public static QuantityFilter? GetQuantityFilter(decimal value, int type) => type switch { 1 => EqualTo(value), 2 => GreaterThan(value), 3 => LessThan(value), _ => null };
    }

    public enum ComparisonOperator
    {
        GreaterThan,
        EqualTo,
        LessThan
    }
}

//Nomenclature.cs
using RequestManagement.Common.Models.Interfaces;

namespace RequestManagement.Common.Models;

public class Nomenclature : IEntity
{
    public int Id { get; set; }
    public string Code { get; set; } = string.Empty;
    public string Name { get; set; } = string.Empty;
    public string Article { get; set; } = string.Empty;
    public string UnitOfMeasure { get; set; } = string.Empty;
    public List<Stock> Stocks { get; set; } = []; // Связь один-ко-многим
}

//Stock.cs
using RequestManagement.Common.Models.Interfaces;

namespace RequestManagement.Common.Models;

public class Stock : IEntity
{
    public int Id { get; set; }
    public int WarehouseId { get; set; }
    public Warehouse Warehouse { get; set; } = null!; // Внешний ключ на таблицу Warehouse
    public int NomenclatureId { get; set; }
    public Nomenclature Nomenclature { get; set; } = null!; // Внешний ключ на таблицу Nomenclature
    public decimal InitialQuantity { get; set; } // Начальное количество
    public decimal ReceivedQuantity { get; set; } // Количество поступления
    public decimal ConsumedQuantity { get; set; }
    public decimal FinalQuantity => InitialQuantity + ReceivedQuantity - ConsumedQuantity;
}

//User.cs
using RequestManagement.Common.Models.Enums;
using RequestManagement.Common.Models.Interfaces;

namespace RequestManagement.Common.Models;

/// <summary>
/// Модель пользователя системы
/// </summary>
public class User : IEntity
{
    /// <summary>
    /// Уникальный идентификатор пользователя
    /// </summary>
    public int Id { get; set; }

    /// <summary>
    /// Логин пользователя
    /// </summary>
    public string Login { get; set; }

    /// <summary>
    /// Пароль пользователя (хранится в зашифрованном виде)
    /// </summary>
    public string Password { get; set; }

    /// <summary>
    /// Роль пользователя в системе
    /// </summary>
    public UserRole Role { get; set; }
}

//Warehouse.cs
using RequestManagement.Common.Models.Interfaces;

namespace RequestManagement.Common.Models;

public class Warehouse : IEntity
{
    public int Id { get; set; }
    public string Name { get; set; } = string.Empty;
    // Другие поля склада, если нужно
    public List<Stock> Stocks { get; set; } = []; // Связь один-ко-многим
}

//project.assets.json
{
  "version": 3,
  "targets": {
    "net8.0": {}
  },
  "libraries": {},
  "projectFileDependencyGroups": {
    "net8.0": []
  },
  "packageFolders": {
    "C:\\Users\\Thron\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {},
    "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
      "projectName": "RequestManagement.Common",
      "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
      "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
        "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
      ],
      "configFilePaths": [
        "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net8.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "C:\\Program Files\\dotnet\\library-packs": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "projectReferences": {}
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      }
    },
    "frameworks": {
      "net8.0": {
        "targetAlias": "net8.0",
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}

//RequestManagement.Common.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//UserRole.cs
namespace RequestManagement.Common.Models.Enums;

/// <summary>
/// Перечисление ролей пользователей
/// </summary>
public enum UserRole
{
    /// <summary>
    /// Администратор с полными правами
    /// </summary>
    Administrator = 0,

    /// <summary>
    /// Пользователь с ограниченными правами
    /// </summary>
    User = 1,

    /// <summary>
    /// Наблюдатель с правами только на чтение
    /// </summary>
    Observer = 2
}

//IEntity.cs
namespace RequestManagement.Common.Models.Interfaces
{
    public interface IEntity
    {
        public int Id { get; set; }
    }
}


//RequestManagement.Common.deps.json
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "RequestManagement.Common/1.0.0": {
        "runtime": {
          "RequestManagement.Common.dll": {}
        }
      }
    }
  },
  "libraries": {
    "RequestManagement.Common/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}

//.NETCoreApp,Version=v8.0.AssemblyAttributes.cs
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]


//RequestManagement.Common.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RequestManagement.Common")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("RequestManagement.Common")]
[assembly: System.Reflection.AssemblyTitleAttribute("RequestManagement.Common")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Создано классом WriteCodeFragment MSBuild.



//RequestManagement.Common.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//RequestManagement.Common.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//appsettings.Development.json
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  }
}


//appsettings.json
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "EndpointDefaults": {
      "Protocols": "Http2"
    }
  },
  "ConnectionStrings": {
    "DefaultConnection": "Host=localhost;Port=5433;Database=RequestManagement;Username=postgres;Password=Rektalus32281!"
  },
  "Jwt": {
    "Key": "Bkt1T0k2hm4EPFhlx9sujqOKNLvZruaR", // Секретный ключ (должен быть длиннее 16 символов)
    "Issuer": "RequestManagementServer",
    "Audience": "RequestManagementClient"
  }
}


//Program.cs
using Microsoft.EntityFrameworkCore;
using RequestManagement.Server.Data;
using RequestManagement.Server.Services;
using RequestManagement.Common.Interfaces;
using Microsoft.IdentityModel.Tokens;
using System.Text;
using Microsoft.AspNetCore.Authentication.JwtBearer;

var builder = WebApplication.CreateBuilder(args);

// ����������� ��������� ��
builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultConnection")));

// ����������� ��������
builder.Services.AddScoped<IRequestService, RequestService>();
builder.Services.AddScoped<IStockService, StockService>();
builder.Services.AddScoped<IUserService, UserService>();
builder.Services.AddScoped<IAuthService, AuthService>();

// ��������� JWT
var key = Encoding.UTF8.GetBytes(builder.Configuration["Jwt:Key"]); // ���� ������ ���� ������� 32 �����
builder.Services.AddAuthorization();

builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
    .AddJwtBearer(options =>
    {
        options.TokenValidationParameters = new TokenValidationParameters
        {
            ValidateIssuer = true,
            ValidateAudience = true,
            ValidateLifetime = true,
            ValidateIssuerSigningKey = true,
            ValidIssuer = builder.Configuration["Jwt:Issuer"],
            ValidAudience = builder.Configuration["Jwt:Audience"],
            IssuerSigningKey = new SymmetricSecurityKey(key)
        };
    });

// ���������� gRPC
builder.Services.AddGrpc();

var app = builder.Build();

// ��������� ��������� ��������� ��������
app.UseRouting();
app.UseAuthentication();
app.UseAuthorization();

app.MapGrpcService<RequestManagement.Server.Controllers.RequestController>();
app.MapGrpcService<RequestManagement.Server.Controllers.StockController>();
app.MapGrpcService<RequestManagement.Server.Controllers.AuthController>();

app.Run();

//AuthController.cs
using Grpc.Core;
using Microsoft.Extensions.Logging;
using RequestManagement.Common.Interfaces;
using RequestManagement.Common.Models;
using System.Threading.Tasks;
using Microsoft.IdentityModel.Tokens;
using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;
using System.Text;
using Microsoft.Extensions.Configuration;
using RequestManagement.Common.Models.Enums;

namespace RequestManagement.Server.Controllers
{
    /// <summary>
    /// gRPC-контроллер для аутентификации
    /// </summary>
    public class AuthController : AuthService.AuthServiceBase
    {
        private readonly IAuthService _authService;
        private readonly ILogger<AuthController> _logger;
        private readonly IConfiguration _configuration;

        public AuthController(IAuthService authService, ILogger<AuthController> logger, IConfiguration configuration)
        {
            _authService = authService;
            _logger = logger;
            _configuration = configuration;
        }

        /// <summary>
        /// Аутентифицирует пользователя и возвращает JWT-токен
        /// </summary>
        public override async Task<AuthenticateResponse> Authenticate(AuthenticateRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Authenticating user with login: {Login}", request.Login);

            var user = await _authService.AuthenticateAsync(request.Login, request.Password);
            if (user == null)
            {
                return new AuthenticateResponse
                {
                    UserId = 0,
                    Login = "",
                    Role = 0,
                    Token = ""
                };
            }

            // Генерация JWT-токена
            var token = GenerateJwtToken(user);

            return new AuthenticateResponse
            {
                UserId = user.Id,
                Login = user.Login,
                Role = (int)user.Role,
                Token = token
            };
        }

        /// <summary>
        /// Проверяет права доступа пользователя
        /// </summary>
        public override async Task<AuthorizeResponse> Authorize(AuthorizeRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Authorizing user {UserId} for role {Role}", request.UserId, request.RequiredRole);

            bool isAuthorized = await _authService.AuthorizeAsync(request.UserId, (UserRole)request.RequiredRole);
            return new AuthorizeResponse { IsAuthorized = isAuthorized };
        }

        /// <summary>
        /// Генерирует JWT-токен для пользователя
        /// </summary>
        private string GenerateJwtToken(User user)
        {
            var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration["Jwt:Key"]));
            var credentials = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);

            var claims = new[]
            {
                new Claim(JwtRegisteredClaimNames.Sub, user.Id.ToString()),
                new Claim(JwtRegisteredClaimNames.UniqueName, user.Login),
                new Claim(ClaimTypes.Role, user.Role.ToString()),
                new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString())
            };

            var token = new JwtSecurityToken(
                issuer: _configuration["Jwt:Issuer"],
                audience: _configuration["Jwt:Audience"],
                claims: claims,
                expires: DateTime.Now.AddHours(1), // Токен действителен 1 час
                signingCredentials: credentials
            );

            return new JwtSecurityTokenHandler().WriteToken(token);
        }
    }
}

//RequestController.cs
using Grpc.Core;
using RequestManagement.Common.Interfaces;
using RequestManagement.Common.Models;
using Microsoft.Extensions.Logging;
using Microsoft.EntityFrameworkCore;
using RequestManagement.Server.Services;

namespace RequestManagement.Server.Controllers
{
    /// <summary>
    /// gRPC-контроллер для работы с оборудованием
    /// </summary>
    public class RequestController(IRequestService requestService, ILogger<RequestController> logger)
        : RequestService.RequestServiceBase
    {
        private readonly IRequestService _requestService = requestService ?? throw new ArgumentNullException(nameof(requestService));
        private readonly ILogger<RequestController> _logger = logger ?? throw new ArgumentNullException(nameof(logger));

        /// <summary>
        /// Получает список всех единиц оборудования
        /// </summary>
        public override async Task<GetAllEquipmentResponse> GetAllEquipment(GetAllEquipmentRequest request, ServerCallContext context)
        {
            var user = context.GetHttpContext().User;
            if (!user.Identity.IsAuthenticated)
            {
                throw new RpcException(new Status(StatusCode.Unauthenticated, "User is not authenticated"));
            }

            _logger.LogInformation("Getting all equipment");

            var equipmentList = await _requestService.GetAllEquipmentAsync(request.Filter);
            var response = new GetAllEquipmentResponse();
            response.Equipment.AddRange(equipmentList.Select(e => new Equipment
            {
                Id = e.Id,
                Name = e.Name,
                LicensePlate = e.StateNumber ?? ""
            }));

            return response;
        }

        /// <summary>
        /// Создает новую единицу оборудования
        /// </summary>
        public override async Task<CreateEquipmentResponse> CreateEquipment(CreateEquipmentRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Creating new equipment with name: {Name}", request.Name);

            var equipment = new RequestManagement.Common.Models.Equipment
            {
                Name = request.Name,
                StateNumber = request.LicensePlate
            };

            var id = await _requestService.CreateEquipmentAsync(equipment);
            return new CreateEquipmentResponse { Id = id };
        }

        /// <summary>
        /// Обновляет существующую единицу оборудования
        /// </summary>
        public override async Task<UpdateEquipmentResponse> UpdateEquipment(UpdateEquipmentRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Updating equipment with ID: {Id}", request.Id);

            var equipment = new RequestManagement.Common.Models.Equipment
            {
                Id = request.Id,
                Name = request.Name,
                StateNumber = request.LicensePlate
            };

            var success = await _requestService.UpdateEquipmentAsync(equipment);
            return new UpdateEquipmentResponse { Success = success };
        }

        /// <summary>
        /// Удаляет единицу оборудования
        /// </summary>
        public override async Task<DeleteEquipmentResponse> DeleteEquipment(DeleteEquipmentRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Deleting equipment with ID: {Id}", request.Id);

            var success = await _requestService.DeleteEquipmentAsync(request.Id);
            return new DeleteEquipmentResponse { Success = success };
        }

        public override async Task<GetAllDriversResponse> GetAllDrivers(GetAllDriversRequest request, ServerCallContext context)
        {
            var user = context.GetHttpContext().User;
            if (user.Identity is { IsAuthenticated: false })
            {
                throw new RpcException(new Status(StatusCode.Unauthenticated, "User is not authenticated"));
            }

            _logger.LogInformation("Getting all drivers by filter");

            var equipmentList = await _requestService.GetAllDriversAsync(request.Filter);
            var response = new GetAllDriversResponse();
            response.Drivers.AddRange(equipmentList.Select(e => new Driver
            {
                Id = e.Id,
                FullName = e.FullName,
                ShortName = e.ShortName,
                Position = e.Position
            }));

            return response;
        }

        public override async Task<CreateDriverResponse> CreateDriver(CreateDriverRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Creating new driver with full name and position: {Name} - {Position}", request.Driver.FullName, request.Driver.Position);

            var driver = new RequestManagement.Common.Models.Driver
            {
                FullName = request.Driver.FullName,
                ShortName = request.Driver.ShortName,
                Position = request.Driver.Position
            };

            var id = await _requestService.CreateDriverAsync(driver);
            return new CreateDriverResponse { Id = id };
        }

        public override async Task<UpdateDriverResponse> UpdateDriver(UpdateDriverRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Updating driver with ID: {Id}", request.Driver.Id);

            var driver = new RequestManagement.Common.Models.Driver
            {
                Id = request.Driver.Id,
                FullName = request.Driver.FullName,
                ShortName = request.Driver.ShortName,
                Position = request.Driver.Position
            };

            var success = await _requestService.UpdateDriverAsync(driver);
            return new UpdateDriverResponse { Success = success };
        }

        public override async Task<DeleteDriverResponse> DeleteDriver(DeleteDriverRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Deleting driver with ID: {Id}", request.Id);

            var success = await _requestService.DeleteDriverAsync(request.Id);
            return new DeleteDriverResponse { Success = success };
        }

        public override async Task<GetAllDefectGroupsResponse> GetAllDefectGroups(GetAllDefectGroupsRequest request, ServerCallContext context)
        {
            var user = context.GetHttpContext().User;
            if (user.Identity is { IsAuthenticated: false })
            {
                throw new RpcException(new Status(StatusCode.Unauthenticated, "User is not authenticated"));
            }

            _logger.LogInformation("Getting all drivers by filter");

            var defectGroupList = await _requestService.GetAllDefectGroupsAsync(request.Filter);
            var response = new GetAllDefectGroupsResponse();
            response.DefectGroup.AddRange(defectGroupList.Select(e => new DefectGroup
            {
                Id = e.Id,
                Name = e.Name,
            }));

            return response;
        }
        public override async Task<CreateDefectGroupResponse> CreateDefectGroup(CreateDefectGroupRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Creating new defectGroup with full name: {Name}", request.DefectGroup.Name);

            var defectGroup = new Common.Models.DefectGroup
            {
                Name = request.DefectGroup.Name,
            };

            var id = await _requestService.CreateDefectGroupAsync(defectGroup);
            return new CreateDefectGroupResponse { Id = id };
        }
        public override async Task<UpdateDefectGroupResponse> UpdateDefectGroup(UpdateDefectGroupRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Updating defectGroup with ID: {Id}", request.DefectGroup.Id);

            var defectGroup = new Common.Models.DefectGroup
            {
                Id = request.DefectGroup.Id,
                Name = request.DefectGroup.Name,
            };

            var success = await _requestService.UpdateDefectGroupAsync(defectGroup);
            return new UpdateDefectGroupResponse { Success = success };
        }
        public override async Task<DeleteDefectGroupResponse> DeleteDefectGroup(DeleteDefectGroupRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Deleting defectGroup with ID: {Id}", request.Id);

            var success = await _requestService.DeleteDefectGroupAsync(request.Id);
            return new DeleteDefectGroupResponse { Success = success };
        }

        public override async Task<GetAllDefectsResponse> GetAllDefects(GetAllDefectsRequest request, ServerCallContext context)
        {
            var user = context.GetHttpContext().User;
            if (user.Identity is { IsAuthenticated: false })
            {
                throw new RpcException(new Status(StatusCode.Unauthenticated, "User is not authenticated"));
            }

            _logger.LogInformation("Getting all defects by filter");

            var defectList = await _requestService.GetAllDefectsAsync(request.Filter);
            var response = new GetAllDefectsResponse();
            response.Defect.AddRange(defectList.Select(e => new Defect
            {
                Id = e.Id,
                Name = e.Name,
                DefectGroupId = e.DefectGroupId
            }));

            return response;
        }

        public override async Task<CreateDefectResponse> CreateDefect(CreateDefectRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Creating new defect with name: {Name}", request.Defect.Name);

            var defect = new Common.Models.Defect
            {
                Name = request.Defect.Name,
                DefectGroupId = request.Defect.DefectGroupId
            };

            var id = await _requestService.CreateDefectAsync(defect);
            return new CreateDefectResponse { Id = id };
        }
        public override async Task<UpdateDefectResponse> UpdateDefect(UpdateDefectRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Updating defect with ID: {Id}", request.Defect.Id);

            var defect = new Common.Models.Defect
            {
                Id = request.Defect.Id,
                Name = request.Defect.Name,
                DefectGroupId = request.Defect.DefectGroupId
            };

            var success = await _requestService.UpdateDefectAsync(defect);
            return new UpdateDefectResponse { Success = success };
        }

        public override async Task<DeleteDefectResponse> DeleteDefect(DeleteDefectRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Deleting defect with ID: {Id}", request.Id);

            var success = await _requestService.DeleteDefectAsync(request.Id);
            return new DeleteDefectResponse { Success = success };
        }

        public override async Task<GetAllWarehousesResponse> GetAllWarehouses(GetAllWarehousesRequest request, ServerCallContext context)
        {
            var user = context.GetHttpContext().User;
            if (user.Identity is { IsAuthenticated: false })
            {
                throw new RpcException(new Status(StatusCode.Unauthenticated, "User is not authenticated"));
            }

            logger.LogInformation("Getting all warehouses by filter");

            var warehouseList = await requestService.GetAllWarehousesAsync(request.Filter);
            var response = new GetAllWarehousesResponse();
            response.Warehouse.AddRange(warehouseList.Select(e => new Warehouse
            {
                Id = e.Id,
                Name = e.Name
            }));

            return response;
        }
        public override async Task<CreateWarehouseResponse> CreateWarehouse(CreateWarehouseRequest request, ServerCallContext context)
        {
            logger.LogInformation("Creating new warehouse with name: {Name}", request.Warehouse.Name);

            var warehouse = new RequestManagement.Common.Models.Warehouse
            {
                Name = request.Warehouse.Name,
            };

            var id = await requestService.CreateWarehouseAsync(warehouse);
            return new CreateWarehouseResponse { Id = id };
        }

        public override async Task<UpdateWarehouseResponse> UpdateWarehouse(UpdateWarehouseRequest request, ServerCallContext context)
        {
            logger.LogInformation("Updating warehouse with ID: {Id}", request.Warehouse.Id);

            var warehouse = new RequestManagement.Common.Models.Warehouse
            {
                Id = request.Warehouse.Id,
                Name = request.Warehouse.Name,
            };

            var success = await requestService.UpdateWarehouseAsync(warehouse);
            return new UpdateWarehouseResponse { Success = success };
        }

        public override async Task<DeleteWarehouseResponse> DeleteWarehouse(DeleteWarehouseRequest request, ServerCallContext context)
        {
            logger.LogInformation("Deleting warehouse with ID: {Id}", request.Id);

            var success = await requestService.DeleteWarehouseAsync(request.Id);
            return new DeleteWarehouseResponse { Success = success };
        }

        public override async Task<GetAllNomenclaturesResponse> GetAllNomenclatures(GetAllNomenclaturesRequest request, ServerCallContext context)
        {
            var user = context.GetHttpContext().User;
            if (user.Identity is { IsAuthenticated: false })
            {
                throw new RpcException(new Status(StatusCode.Unauthenticated, "User is not authenticated"));
            }

            logger.LogInformation("Getting all nomenclatures by filter");

            var nomenclatureList = await requestService.GetAllNomenclaturesAsync(request.Filter);
            var response = new GetAllNomenclaturesResponse();
            response.Nomenclature.AddRange(nomenclatureList.Select(e => new Nomenclature
            {
                Id = e.Id,
                Name = e.Name,
                Code = e.Code,
                UnitOfMeasure = e.UnitOfMeasure,
                Article = e.Article
            }));

            return response;
        }
        public override async Task<CreateNomenclatureResponse> CreateNomenclature(CreateNomenclatureRequest request, ServerCallContext context)
        {
            logger.LogInformation("Creating new nomenclature with name: {Name}", request.Nomenclature.Name);

            var nomenclature = new RequestManagement.Common.Models.Nomenclature
            {
                Name = request.Nomenclature.Name,
                Code = request.Nomenclature.Code,
                UnitOfMeasure = request.Nomenclature.UnitOfMeasure,
                Article = request.Nomenclature.Article
            };

            var id = await requestService.CreateNomenclatureAsync(nomenclature);
            return new CreateNomenclatureResponse { Id = id };
        }

        public override async Task<UpdateNomenclatureResponse> UpdateNomenclature(UpdateNomenclatureRequest request, ServerCallContext context)
        {
            logger.LogInformation("Updating nomenclature with ID: {Id}", request.Nomenclature.Id);

            var nomenclature = new RequestManagement.Common.Models.Nomenclature
            {
                Id = request.Nomenclature.Id,
                Name = request.Nomenclature.Name,
                Code = request.Nomenclature.Code,
                UnitOfMeasure = request.Nomenclature.UnitOfMeasure,
                Article = request.Nomenclature.Article
            };

            var success = await requestService.UpdateNomenclatureAsync(nomenclature);
            return new UpdateNomenclatureResponse { Success = success };
        }

        public override async Task<DeleteNomenclatureResponse> DeleteNomenclature(DeleteNomenclatureRequest request, ServerCallContext context)
        {
            logger.LogInformation("Deleting nomenclature with ID: {Id}", request.Id);

            var success = await requestService.DeleteNomenclatureAsync(request.Id);
            return new DeleteNomenclatureResponse { Success = success };
        }
    }
}

//StockController.cs
using Grpc.Core;
using RequestManagement.Common.Interfaces;
using RequestManagement.Common.Models;

namespace RequestManagement.Server.Controllers
{
    public class StockController(IStockService requestService, ILogger<RequestController> logger) : StockService.StockServiceBase
    {
        private readonly IStockService _requestService = requestService ?? throw new ArgumentNullException(nameof(requestService));
        private readonly ILogger<RequestController> _logger = logger ?? throw new ArgumentNullException(nameof(logger));
        public override async Task<GetAllStocksResponse> GetAllStock(GetAllStocksRequest request, ServerCallContext context)
        {
            var user = context.GetHttpContext().User;
            if (user.Identity is { IsAuthenticated: false })
            {
                throw new RpcException(new Status(StatusCode.Unauthenticated, "User is not authenticated"));
            }

            _logger.LogInformation("Getting all stock");

            var stockList = await _requestService.GetAllStocksAsync(
                request.WarehouseId, 
                request.Filter,
                request.InitialQuantityFilterType,
                request.InitialQuantity,
                request.ReceivedQuantityFilterType,
                request.ReceivedQuantity,
                request.ConsumedQuantityFilterType,
                request.ConsumedQuantity,
                request.FinalQuantityFilterType,
                request.FinalQuantity
                );
            var response = new GetAllStocksResponse();
            response.Stocks.AddRange(stockList.Select(e => new Stock
            {
                Id = e.Id,
                WarehouseId = e.WarehouseId,
                NomenclatureId = e.NomenclatureId,
                InitialQuantity = (double)e.InitialQuantity,
                ReceivedQuantity = (double)e.ReceivedQuantity,
                ConsumedQuantity = (double)e.ConsumedQuantity,
                Nomenclature = new StockNomenclature{Code = e.Nomenclature.Code,Article = e.Nomenclature.Article, Name = e.Nomenclature.Name, UnitOfMeasure = e.Nomenclature.UnitOfMeasure},
            }));

            return response;
        }
        public override async Task<CreateStockResponse> CreateStock(CreateStockRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Creating new stock");

            var stock = new Common.Models.Stock
            {
                WarehouseId = request.WarehouseId,
                NomenclatureId = request.NomenclatureId,
                InitialQuantity = (decimal)request.InitialQuantity
            };
            var id = await _requestService.CreateStockAsync(stock);
            return new CreateStockResponse { Id = id };
        }

        public override async Task<UpdateStockResponse> UpdateStock(UpdateStockRequest request, ServerCallContext context)
        {
            _logger.LogInformation("Updating stock");
            var stock = new RequestManagement.Common.Models.Stock
            {
                Id = request.Id,
                NomenclatureId = request.NomenclatureId,
                InitialQuantity = (decimal)request.InitialQuantity
            };
            var success = await requestService.UpdateStockAsync(stock);
            return new UpdateStockResponse { Success = success };
        }

        public override async Task<DeleteStockResponse> DeleteStock(DeleteStockRequest request, ServerCallContext context)
        {
            logger.LogInformation("Deleting stock with ID: {Id}", request.Id);
            var success = await requestService.DeleteStockAsync(request.Id);
            return new DeleteStockResponse { Success = success };
        }
    }
}


//ApplicationDbContext.cs
using Microsoft.EntityFrameworkCore;
using RequestManagement.Common.Models;
using BCrypt.Net;
using RequestManagement.Common.Models.Enums;

namespace RequestManagement.Server.Data
{
    public class ApplicationDbContext : DbContext
    {
        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
            : base(options)
        {
        }

        public DbSet<User> Users { get; set; }
        public DbSet<Equipment> Equipments { get; set; }
        public DbSet<Warehouse> Warehouses { get; set; }
        public DbSet<Nomenclature> Nomenclature { get; set; }
        public DbSet<DefectGroup> DefectGroups { get; set; }
        public DbSet<Defect> Defects { get; set; }
        public DbSet<Driver> Drivers { get; set; }
        public DbSet<Stock> Stocks { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {

            modelBuilder.Entity<Stock>(entity =>
            {
                entity.HasKey(s => s.Id);
                entity.Property(s => s.InitialQuantity).HasColumnType("decimal(18,2)");
                entity.Property(s => s.ReceivedQuantity).HasColumnType("decimal(18,2)");
                entity.Property(s => s.ConsumedQuantity).HasColumnType("decimal(18,2)");

                entity.HasOne(s => s.Warehouse)
                    .WithMany(w => w.Stocks)
                    .HasForeignKey(s => s.WarehouseId)
                    .OnDelete(DeleteBehavior.Restrict); // Запрет удаления склада, если есть запасы

                entity.HasOne(s => s.Nomenclature)
                    .WithMany(n => n.Stocks)
                    .HasForeignKey(s => s.NomenclatureId)
                    .OnDelete(DeleteBehavior.Restrict); // Запрет удаления номенклатуры, если есть запасы
            });
            // Отношения для DefectGroup и Defect
            modelBuilder.Entity<DefectGroup>()
                .HasMany(dg => dg.Defects)
                .WithOne(d => d.DefectGroup)
                .HasForeignKey(d => d.DefectGroupId)
                .OnDelete(DeleteBehavior.Cascade);

            // Начальные данные для Users
            modelBuilder.Entity<User>().HasData(
                new User
                {
                    Id = 1,
                    Login = "admin",
                    Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                    Role = UserRole.Administrator
                }
            );

            // Начальные данные для Warehouses
            modelBuilder.Entity<Warehouse>().HasData(
                new Warehouse { Id = 1, Name = "Основной склад" },
                new Warehouse { Id = 2, Name = "Резервный склад" }
            );

            // Начальные данные для Nomenclature
            modelBuilder.Entity<Nomenclature>().HasData(
                new Nomenclature
                {
                    Id = 1,
                    Code = "ТКР001",
                    Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                    Article = "7406.1118013",
                    UnitOfMeasure = "шт",
                },
                new Nomenclature
                {
                    Id = 2,
                    Code = "АКБ001",
                    Name = "Аккумулятор 6СТ-190",
                    Article = "6СТ-190",
                    UnitOfMeasure = "шт",
                },
                new Nomenclature
                {
                    Id = 3,
                    Code = "АКБ002",
                    Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                    Article = "6СТ-200",
                    UnitOfMeasure = "шт",
                }
            );
            modelBuilder.Entity<Stock>().HasData(
                new Stock
                {
                    Id = 1,
                    NomenclatureId = 1,
                    WarehouseId = 1,
                    InitialQuantity = 70,
                    ReceivedQuantity = 0,
                    ConsumedQuantity = 0
                },
                new Stock
                {
                    Id = 2,
                    NomenclatureId = 2,
                    WarehouseId = 1,
                    InitialQuantity = 10,
                    ReceivedQuantity = 0,
                    ConsumedQuantity = 0
                },
            new Stock
            {
                Id = 3,
                NomenclatureId = 1,
                WarehouseId = 2,
                InitialQuantity = 40,
                ReceivedQuantity = 0,
                ConsumedQuantity = 0
            },
            new Stock
            {
                Id = 4,
                NomenclatureId = 2,
                WarehouseId = 2,
                InitialQuantity = 20,
                ReceivedQuantity = 0,
                ConsumedQuantity = 0
            }
            );

            // Начальные данные для Drivers
            modelBuilder.Entity<Driver>().HasData(
                new Driver
                {
                    Id = 1,
                    FullName = "Иванов Иван Иванович",
                    ShortName = "Иванов И.И.",
                    Position = "Водитель"
                },
                new Driver
                {
                    Id = 2,
                    FullName = "Петров Петр Петрович",
                    ShortName = "Петров П.П.",
                    Position = "Водитель"
                }
            );

            // Начальные данные для Equipment
            modelBuilder.Entity<Equipment>().HasData(
                new Equipment
                {
                    Id = 1,
                    Name = "КАМАЗ 53215-15",
                    StateNumber = "Н 507 СН"
                }
            );

            // Начальные данные для DefectGroups
            modelBuilder.Entity<DefectGroup>().HasData(
                new DefectGroup { Id = 1, Name = "Механические повреждения" },
                new DefectGroup { Id = 2, Name = "Электрические неисправности" }
            );

            // Начальные данные для Defects
            modelBuilder.Entity<Defect>().HasData(
                new Defect { Id = 1, Name = "Трещина корпуса", DefectGroupId = 1 },
                new Defect { Id = 2, Name = "Короткое замыкание", DefectGroupId = 2 }
            );

            // Индексы
            modelBuilder.Entity<User>()
                .HasIndex(u => u.Login)
                .IsUnique();
        }
    }
}

//20250401091232_Initial.cs
using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Equipments",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: false),
                    StateNumber = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Equipments", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Login = table.Column<string>(type: "text", nullable: false),
                    Password = table.Column<string>(type: "text", nullable: false),
                    Role = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Requests",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Number = table.Column<string>(type: "text", nullable: false),
                    CreationDate = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    DueDate = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    Comment = table.Column<string>(type: "text", nullable: true),
                    ExecutionComment = table.Column<string>(type: "text", nullable: true),
                    Status = table.Column<int>(type: "integer", nullable: false),
                    EquipmentId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Requests", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Requests_Equipments_EquipmentId",
                        column: x => x.EquipmentId,
                        principalTable: "Equipments",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "Items",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: false),
                    Article = table.Column<string>(type: "text", nullable: false),
                    Quantity = table.Column<int>(type: "integer", nullable: false),
                    Note = table.Column<string>(type: "text", nullable: true),
                    Status = table.Column<int>(type: "integer", nullable: false),
                    RequestId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Items", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Items_Requests_RequestId",
                        column: x => x.RequestId,
                        principalTable: "Requests",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "Login", "Password", "Role" },
                values: new object[] { 1, "admin", "$2a$11$OYodlvyV7aKmnyJRb/C6JO6Lc4drw06z8UReFQl2xhp4ejxyW67IS", 0 });

            migrationBuilder.CreateIndex(
                name: "IX_Items_RequestId",
                table: "Items",
                column: "RequestId");

            migrationBuilder.CreateIndex(
                name: "IX_Requests_EquipmentId",
                table: "Requests",
                column: "EquipmentId");

            migrationBuilder.CreateIndex(
                name: "IX_Requests_Number",
                table: "Requests",
                column: "Number");

            migrationBuilder.CreateIndex(
                name: "IX_Users_Login",
                table: "Users",
                column: "Login",
                unique: true);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Items");

            migrationBuilder.DropTable(
                name: "Users");

            migrationBuilder.DropTable(
                name: "Requests");

            migrationBuilder.DropTable(
                name: "Equipments");
        }
    }
}


//20250401091232_Initial.Designer.cs
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250401091232_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ExecutionComment")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$OYodlvyV7aKmnyJRb/C6JO6Lc4drw06z8UReFQl2xhp4ejxyW67IS",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250401092850_Fixed.cs
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class Fixed : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {

        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {

        }
    }
}


//20250401092850_Fixed.Designer.cs
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250401092850_Fixed")]
    partial class Fixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ExecutionComment")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$OYodlvyV7aKmnyJRb/C6JO6Lc4drw06z8UReFQl2xhp4ejxyW67IS",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250403082055_add_new_table.cs
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class add_new_table : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropIndex(
                name: "IX_Requests_Number",
                table: "Requests");

            migrationBuilder.CreateTable(
                name: "Warehouses",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Warehouses", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Nomenclature",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Code = table.Column<string>(type: "text", nullable: false),
                    Name = table.Column<string>(type: "text", nullable: false),
                    Article = table.Column<string>(type: "text", nullable: false),
                    UnitOfMeasure = table.Column<string>(type: "text", nullable: false),
                    QuantityInStock = table.Column<int>(type: "integer", nullable: false),
                    WarehouseId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Nomenclature", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Nomenclature_Warehouses_WarehouseId",
                        column: x => x.WarehouseId,
                        principalTable: "Warehouses",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "NomenclatureAnalogs",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    MainNomenclatureId = table.Column<int>(type: "integer", nullable: false),
                    AnalogNomenclatureId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NomenclatureAnalogs", x => x.Id);
                    table.ForeignKey(
                        name: "FK_NomenclatureAnalogs_Nomenclature_AnalogNomenclatureId",
                        column: x => x.AnalogNomenclatureId,
                        principalTable: "Nomenclature",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_NomenclatureAnalogs_Nomenclature_MainNomenclatureId",
                        column: x => x.MainNomenclatureId,
                        principalTable: "Nomenclature",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                column: "Password",
                value: "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM");

            migrationBuilder.InsertData(
                table: "Warehouses",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { 1, "Основной склад" },
                    { 2, "Резервный склад" }
                });

            migrationBuilder.InsertData(
                table: "Nomenclature",
                columns: new[] { "Id", "Article", "Code", "Name", "QuantityInStock", "UnitOfMeasure", "WarehouseId" },
                values: new object[,]
                {
                    { 1, "7406.1118013", "ТКР001", "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2", 5, "шт", 1 },
                    { 2, "6СТ-190", "АКБ001", "Аккумулятор 6СТ-190", 10, "шт", 1 },
                    { 3, "6СТ-200", "АКБ002", "Аккумулятор 6СТ-200 (аналог 6СТ-190)", 3, "шт", 2 }
                });

            migrationBuilder.InsertData(
                table: "NomenclatureAnalogs",
                columns: new[] { "Id", "AnalogNomenclatureId", "MainNomenclatureId" },
                values: new object[] { 1, 3, 2 });

            migrationBuilder.CreateIndex(
                name: "IX_Requests_Number",
                table: "Requests",
                column: "Number",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Nomenclature_WarehouseId",
                table: "Nomenclature",
                column: "WarehouseId");

            migrationBuilder.CreateIndex(
                name: "IX_NomenclatureAnalogs_AnalogNomenclatureId",
                table: "NomenclatureAnalogs",
                column: "AnalogNomenclatureId");

            migrationBuilder.CreateIndex(
                name: "IX_NomenclatureAnalogs_MainNomenclatureId",
                table: "NomenclatureAnalogs",
                column: "MainNomenclatureId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "NomenclatureAnalogs");

            migrationBuilder.DropTable(
                name: "Nomenclature");

            migrationBuilder.DropTable(
                name: "Warehouses");

            migrationBuilder.DropIndex(
                name: "IX_Requests_Number",
                table: "Requests");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                column: "Password",
                value: "$2a$11$OYodlvyV7aKmnyJRb/C6JO6Lc4drw06z8UReFQl2xhp4ejxyW67IS");

            migrationBuilder.CreateIndex(
                name: "IX_Requests_Number",
                table: "Requests",
                column: "Number");
        }
    }
}


//20250403082055_add_new_table.Designer.cs
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250403082055_add_new_table")]
    partial class add_new_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("integer");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            QuantityInStock = 5,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Name = "Аккумулятор 6СТ-190",
                            QuantityInStock = 10,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            QuantityInStock = 3,
                            UnitOfMeasure = "шт",
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalogNomenclatureId")
                        .HasColumnType("integer");

                    b.Property<int>("MainNomenclatureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnalogNomenclatureId");

                    b.HasIndex("MainNomenclatureId");

                    b.ToTable("NomenclatureAnalogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalogNomenclatureId = 3,
                            MainNomenclatureId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ExecutionComment")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "AnalogNomenclature")
                        .WithMany()
                        .HasForeignKey("AnalogNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "MainNomenclature")
                        .WithMany()
                        .HasForeignKey("MainNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnalogNomenclature");

                    b.Navigation("MainNomenclature");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250403102800_test1.cs
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class test1 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Article",
                table: "Items");

            migrationBuilder.DropColumn(
                name: "Name",
                table: "Items");

            migrationBuilder.AlterColumn<string>(
                name: "Note",
                table: "Items",
                type: "text",
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "text",
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "NomenclatureId",
                table: "Items",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.CreateIndex(
                name: "IX_Items_NomenclatureId",
                table: "Items",
                column: "NomenclatureId");

            migrationBuilder.AddForeignKey(
                name: "FK_Items_Nomenclature_NomenclatureId",
                table: "Items",
                column: "NomenclatureId",
                principalTable: "Nomenclature",
                principalColumn: "Id",
                onDelete: ReferentialAction.Restrict);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Items_Nomenclature_NomenclatureId",
                table: "Items");

            migrationBuilder.DropIndex(
                name: "IX_Items_NomenclatureId",
                table: "Items");

            migrationBuilder.DropColumn(
                name: "NomenclatureId",
                table: "Items");

            migrationBuilder.AlterColumn<string>(
                name: "Note",
                table: "Items",
                type: "text",
                nullable: true,
                oldClrType: typeof(string),
                oldType: "text");

            migrationBuilder.AddColumn<string>(
                name: "Article",
                table: "Items",
                type: "text",
                nullable: false,
                defaultValue: "");

            migrationBuilder.AddColumn<string>(
                name: "Name",
                table: "Items",
                type: "text",
                nullable: false,
                defaultValue: "");
        }
    }
}


//20250403102800_test1.Designer.cs
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250403102800_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("RequestId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("integer");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            QuantityInStock = 5,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Name = "Аккумулятор 6СТ-190",
                            QuantityInStock = 10,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            QuantityInStock = 3,
                            UnitOfMeasure = "шт",
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalogNomenclatureId")
                        .HasColumnType("integer");

                    b.Property<int>("MainNomenclatureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnalogNomenclatureId");

                    b.HasIndex("MainNomenclatureId");

                    b.ToTable("NomenclatureAnalogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalogNomenclatureId = 3,
                            MainNomenclatureId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ExecutionComment")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "AnalogNomenclature")
                        .WithMany()
                        .HasForeignKey("AnalogNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "MainNomenclature")
                        .WithMany()
                        .HasForeignKey("MainNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnalogNomenclature");

                    b.Navigation("MainNomenclature");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250403105010_еуые2.cs
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class еуые2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.RenameColumn(
                name: "QuantityInStock",
                table: "Nomenclature",
                newName: "Receipt");

            migrationBuilder.AddColumn<int>(
                name: "Consumption",
                table: "Nomenclature",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinalQuantity",
                table: "Nomenclature",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InitialQuantity",
                table: "Nomenclature",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "Consumption", "FinalQuantity", "InitialQuantity", "Receipt" },
                values: new object[] { 0, 5, 5, 0 });

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "Consumption", "FinalQuantity", "InitialQuantity", "Receipt" },
                values: new object[] { 0, 10, 10, 0 });

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "Consumption", "FinalQuantity", "InitialQuantity", "Receipt" },
                values: new object[] { 0, 3, 3, 0 });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                column: "Password",
                value: "$2a$11$SvaHGKIn2WlVpaLAOtF7YOM3O6mIQcatVLVDPlUVSnd5GFILMkPIq");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Consumption",
                table: "Nomenclature");

            migrationBuilder.DropColumn(
                name: "FinalQuantity",
                table: "Nomenclature");

            migrationBuilder.DropColumn(
                name: "InitialQuantity",
                table: "Nomenclature");

            migrationBuilder.RenameColumn(
                name: "Receipt",
                table: "Nomenclature",
                newName: "QuantityInStock");

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 1,
                column: "QuantityInStock",
                value: 5);

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 2,
                column: "QuantityInStock",
                value: 10);

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 3,
                column: "QuantityInStock",
                value: 3);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                column: "Password",
                value: "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM");
        }
    }
}


//20250403105010_еуые2.Designer.cs
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250403105010_еуые2")]
    partial class еуые2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("RequestId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Consumption")
                        .HasColumnType("integer");

                    b.Property<int>("FinalQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("InitialQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Receipt")
                        .HasColumnType("integer");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Consumption = 0,
                            FinalQuantity = 5,
                            InitialQuantity = 5,
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Consumption = 0,
                            FinalQuantity = 10,
                            InitialQuantity = 10,
                            Name = "Аккумулятор 6СТ-190",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Consumption = 0,
                            FinalQuantity = 3,
                            InitialQuantity = 3,
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalogNomenclatureId")
                        .HasColumnType("integer");

                    b.Property<int>("MainNomenclatureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnalogNomenclatureId");

                    b.HasIndex("MainNomenclatureId");

                    b.ToTable("NomenclatureAnalogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalogNomenclatureId = 3,
                            MainNomenclatureId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ExecutionComment")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$SvaHGKIn2WlVpaLAOtF7YOM3O6mIQcatVLVDPlUVSnd5GFILMkPIq",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "AnalogNomenclature")
                        .WithMany()
                        .HasForeignKey("AnalogNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "MainNomenclature")
                        .WithMany()
                        .HasForeignKey("MainNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnalogNomenclature");

                    b.Navigation("MainNomenclature");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250403105021_test2.cs
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class test2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {

        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {

        }
    }
}


//20250403105021_test2.Designer.cs
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250403105021_test2")]
    partial class test2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("RequestId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Consumption")
                        .HasColumnType("integer");

                    b.Property<int>("FinalQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("InitialQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Receipt")
                        .HasColumnType("integer");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Consumption = 0,
                            FinalQuantity = 5,
                            InitialQuantity = 5,
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Consumption = 0,
                            FinalQuantity = 10,
                            InitialQuantity = 10,
                            Name = "Аккумулятор 6СТ-190",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Consumption = 0,
                            FinalQuantity = 3,
                            InitialQuantity = 3,
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalogNomenclatureId")
                        .HasColumnType("integer");

                    b.Property<int>("MainNomenclatureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnalogNomenclatureId");

                    b.HasIndex("MainNomenclatureId");

                    b.ToTable("NomenclatureAnalogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalogNomenclatureId = 3,
                            MainNomenclatureId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ExecutionComment")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$SvaHGKIn2WlVpaLAOtF7YOM3O6mIQcatVLVDPlUVSnd5GFILMkPIq",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "AnalogNomenclature")
                        .WithMany()
                        .HasForeignKey("AnalogNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "MainNomenclature")
                        .WithMany()
                        .HasForeignKey("MainNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnalogNomenclature");

                    b.Navigation("MainNomenclature");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250403115848_еуые3.cs
using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class еуые3 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "DefectGroups",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DefectGroups", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Drivers",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    FullName = table.Column<string>(type: "text", nullable: false),
                    ShortName = table.Column<string>(type: "text", nullable: false),
                    Position = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Drivers", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Defects",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: false),
                    DefectGroupId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Defects", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Defects_DefectGroups_DefectGroupId",
                        column: x => x.DefectGroupId,
                        principalTable: "DefectGroups",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Consumptions",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Number = table.Column<string>(type: "text", nullable: false),
                    Date = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    WarehouseId = table.Column<int>(type: "integer", nullable: false),
                    EquipmentId = table.Column<int>(type: "integer", nullable: false),
                    DriverId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Consumptions", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Consumptions_Drivers_DriverId",
                        column: x => x.DriverId,
                        principalTable: "Drivers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Consumptions_Equipments_EquipmentId",
                        column: x => x.EquipmentId,
                        principalTable: "Equipments",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Consumptions_Warehouses_WarehouseId",
                        column: x => x.WarehouseId,
                        principalTable: "Warehouses",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ConsumptionItems",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    NomenclatureId = table.Column<int>(type: "integer", nullable: false),
                    Quantity = table.Column<int>(type: "integer", nullable: false),
                    DefectId = table.Column<int>(type: "integer", nullable: false),
                    ConsumptionId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ConsumptionItems", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ConsumptionItems_Consumptions_ConsumptionId",
                        column: x => x.ConsumptionId,
                        principalTable: "Consumptions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ConsumptionItems_Defects_DefectId",
                        column: x => x.DefectId,
                        principalTable: "Defects",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ConsumptionItems_Nomenclature_NomenclatureId",
                        column: x => x.NomenclatureId,
                        principalTable: "Nomenclature",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.InsertData(
                table: "DefectGroups",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { 1, "Механические повреждения" },
                    { 2, "Электрические неисправности" }
                });

            migrationBuilder.InsertData(
                table: "Drivers",
                columns: new[] { "Id", "FullName", "Position", "ShortName" },
                values: new object[,]
                {
                    { 1, "Иванов Иван Иванович", "Водитель", "Иванов И.И." },
                    { 2, "Петров Петр Петрович", "Водитель", "Петров П.П." }
                });

            migrationBuilder.InsertData(
                table: "Equipments",
                columns: new[] { "Id", "Name", "StateNumber" },
                values: new object[] { 1, "КАМАЗ 53215-15", "Н 507 СН" });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                column: "Password",
                value: "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM");

            migrationBuilder.InsertData(
                table: "Consumptions",
                columns: new[] { "Id", "Date", "DriverId", "EquipmentId", "Number", "WarehouseId" },
                values: new object[] { 1, new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Utc), 1, 1, "РСХ0001", 1 });

            migrationBuilder.InsertData(
                table: "Defects",
                columns: new[] { "Id", "DefectGroupId", "Name" },
                values: new object[,]
                {
                    { 1, 1, "Трещина корпуса" },
                    { 2, 2, "Короткое замыкание" }
                });

            migrationBuilder.InsertData(
                table: "ConsumptionItems",
                columns: new[] { "Id", "ConsumptionId", "DefectId", "NomenclatureId", "Quantity" },
                values: new object[] { 1, 1, 2, 2, 1 });

            migrationBuilder.CreateIndex(
                name: "IX_ConsumptionItems_ConsumptionId",
                table: "ConsumptionItems",
                column: "ConsumptionId");

            migrationBuilder.CreateIndex(
                name: "IX_ConsumptionItems_DefectId",
                table: "ConsumptionItems",
                column: "DefectId");

            migrationBuilder.CreateIndex(
                name: "IX_ConsumptionItems_NomenclatureId",
                table: "ConsumptionItems",
                column: "NomenclatureId");

            migrationBuilder.CreateIndex(
                name: "IX_Consumptions_DriverId",
                table: "Consumptions",
                column: "DriverId");

            migrationBuilder.CreateIndex(
                name: "IX_Consumptions_EquipmentId",
                table: "Consumptions",
                column: "EquipmentId");

            migrationBuilder.CreateIndex(
                name: "IX_Consumptions_Number",
                table: "Consumptions",
                column: "Number",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Consumptions_WarehouseId",
                table: "Consumptions",
                column: "WarehouseId");

            migrationBuilder.CreateIndex(
                name: "IX_Defects_DefectGroupId",
                table: "Defects",
                column: "DefectGroupId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ConsumptionItems");

            migrationBuilder.DropTable(
                name: "Consumptions");

            migrationBuilder.DropTable(
                name: "Defects");

            migrationBuilder.DropTable(
                name: "Drivers");

            migrationBuilder.DropTable(
                name: "DefectGroups");

            migrationBuilder.DeleteData(
                table: "Equipments",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                column: "Password",
                value: "$2a$11$SvaHGKIn2WlVpaLAOtF7YOM3O6mIQcatVLVDPlUVSnd5GFILMkPIq");
        }
    }
}


//20250403115848_еуые3.Designer.cs
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250403115848_еуые3")]
    partial class еуые3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Consumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("WarehouseId");

                    b.ToTable("Consumptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            DriverId = 1,
                            EquipmentId = 1,
                            Number = "РСХ0001",
                            WarehouseId = 1
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.ConsumptionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsumptionId")
                        .HasColumnType("integer");

                    b.Property<int>("DefectId")
                        .HasColumnType("integer");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConsumptionId");

                    b.HasIndex("DefectId");

                    b.HasIndex("NomenclatureId");

                    b.ToTable("ConsumptionItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumptionId = 1,
                            DefectId = 2,
                            NomenclatureId = 2,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DefectGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DefectGroupId");

                    b.ToTable("Defects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefectGroupId = 1,
                            Name = "Трещина корпуса"
                        },
                        new
                        {
                            Id = 2,
                            DefectGroupId = 2,
                            Name = "Короткое замыкание"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefectGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Механические повреждения"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Электрические неисправности"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Иванов Иван Иванович",
                            Position = "Водитель",
                            ShortName = "Иванов И.И."
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Петров Петр Петрович",
                            Position = "Водитель",
                            ShortName = "Петров П.П."
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "КАМАЗ 53215-15",
                            StateNumber = "Н 507 СН"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("RequestId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Consumption")
                        .HasColumnType("integer");

                    b.Property<int>("FinalQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("InitialQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Receipt")
                        .HasColumnType("integer");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Consumption = 0,
                            FinalQuantity = 5,
                            InitialQuantity = 5,
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Consumption = 0,
                            FinalQuantity = 10,
                            InitialQuantity = 10,
                            Name = "Аккумулятор 6СТ-190",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Consumption = 0,
                            FinalQuantity = 3,
                            InitialQuantity = 3,
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            Receipt = 0,
                            UnitOfMeasure = "шт",
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalogNomenclatureId")
                        .HasColumnType("integer");

                    b.Property<int>("MainNomenclatureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnalogNomenclatureId");

                    b.HasIndex("MainNomenclatureId");

                    b.ToTable("NomenclatureAnalogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalogNomenclatureId = 3,
                            MainNomenclatureId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("ExecutionComment")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Consumption", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Equipment");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.ConsumptionItem", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Consumption", "Consumption")
                        .WithMany("Items")
                        .HasForeignKey("ConsumptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Defect", "Defect")
                        .WithMany()
                        .HasForeignKey("DefectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Consumption");

                    b.Navigation("Defect");

                    b.Navigation("Nomenclature");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.DefectGroup", "DefectGroup")
                        .WithMany("Defects")
                        .HasForeignKey("DefectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefectGroup");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Item", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "AnalogNomenclature")
                        .WithMany()
                        .HasForeignKey("AnalogNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "MainNomenclature")
                        .WithMany()
                        .HasForeignKey("MainNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnalogNomenclature");

                    b.Navigation("MainNomenclature");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Consumption", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Navigation("Defects");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Request", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250410113543_InProgress_1.cs
using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class InProgress_1 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Nomenclature_Warehouses_WarehouseId",
                table: "Nomenclature");

            migrationBuilder.DropTable(
                name: "Items");

            migrationBuilder.DropTable(
                name: "Requests");

            migrationBuilder.DropIndex(
                name: "IX_Nomenclature_WarehouseId",
                table: "Nomenclature");

            migrationBuilder.DropColumn(
                name: "Consumption",
                table: "Nomenclature");

            migrationBuilder.DropColumn(
                name: "FinalQuantity",
                table: "Nomenclature");

            migrationBuilder.DropColumn(
                name: "InitialQuantity",
                table: "Nomenclature");

            migrationBuilder.DropColumn(
                name: "Receipt",
                table: "Nomenclature");

            migrationBuilder.DropColumn(
                name: "WarehouseId",
                table: "Nomenclature");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<int>(
                name: "Consumption",
                table: "Nomenclature",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinalQuantity",
                table: "Nomenclature",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InitialQuantity",
                table: "Nomenclature",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Receipt",
                table: "Nomenclature",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "WarehouseId",
                table: "Nomenclature",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.CreateTable(
                name: "Requests",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    EquipmentId = table.Column<int>(type: "integer", nullable: false),
                    Comment = table.Column<string>(type: "text", nullable: true),
                    CreationDate = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    DueDate = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    ExecutionComment = table.Column<string>(type: "text", nullable: true),
                    Number = table.Column<string>(type: "text", nullable: false),
                    Status = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Requests", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Requests_Equipments_EquipmentId",
                        column: x => x.EquipmentId,
                        principalTable: "Equipments",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "Items",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    NomenclatureId = table.Column<int>(type: "integer", nullable: false),
                    RequestId = table.Column<int>(type: "integer", nullable: false),
                    Note = table.Column<string>(type: "text", nullable: false),
                    Quantity = table.Column<int>(type: "integer", nullable: false),
                    Status = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Items", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Items_Nomenclature_NomenclatureId",
                        column: x => x.NomenclatureId,
                        principalTable: "Nomenclature",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Items_Requests_RequestId",
                        column: x => x.RequestId,
                        principalTable: "Requests",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "Consumption", "FinalQuantity", "InitialQuantity", "Receipt", "WarehouseId" },
                values: new object[] { 0, 5, 5, 0, 1 });

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "Consumption", "FinalQuantity", "InitialQuantity", "Receipt", "WarehouseId" },
                values: new object[] { 0, 10, 10, 0, 1 });

            migrationBuilder.UpdateData(
                table: "Nomenclature",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "Consumption", "FinalQuantity", "InitialQuantity", "Receipt", "WarehouseId" },
                values: new object[] { 0, 3, 3, 0, 2 });

            migrationBuilder.CreateIndex(
                name: "IX_Nomenclature_WarehouseId",
                table: "Nomenclature",
                column: "WarehouseId");

            migrationBuilder.CreateIndex(
                name: "IX_Items_NomenclatureId",
                table: "Items",
                column: "NomenclatureId");

            migrationBuilder.CreateIndex(
                name: "IX_Items_RequestId",
                table: "Items",
                column: "RequestId");

            migrationBuilder.CreateIndex(
                name: "IX_Requests_EquipmentId",
                table: "Requests",
                column: "EquipmentId");

            migrationBuilder.CreateIndex(
                name: "IX_Requests_Number",
                table: "Requests",
                column: "Number",
                unique: true);

            migrationBuilder.AddForeignKey(
                name: "FK_Nomenclature_Warehouses_WarehouseId",
                table: "Nomenclature",
                column: "WarehouseId",
                principalTable: "Warehouses",
                principalColumn: "Id",
                onDelete: ReferentialAction.Restrict);
        }
    }
}


//20250410113543_InProgress_1.Designer.cs
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250410113543_InProgress_1")]
    partial class InProgress_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Consumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("WarehouseId");

                    b.ToTable("Consumptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            DriverId = 1,
                            EquipmentId = 1,
                            Number = "РСХ0001",
                            WarehouseId = 1
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.ConsumptionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsumptionId")
                        .HasColumnType("integer");

                    b.Property<int>("DefectId")
                        .HasColumnType("integer");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConsumptionId");

                    b.HasIndex("DefectId");

                    b.HasIndex("NomenclatureId");

                    b.ToTable("ConsumptionItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumptionId = 1,
                            DefectId = 2,
                            NomenclatureId = 2,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DefectGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DefectGroupId");

                    b.ToTable("Defects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefectGroupId = 1,
                            Name = "Трещина корпуса"
                        },
                        new
                        {
                            Id = 2,
                            DefectGroupId = 2,
                            Name = "Короткое замыкание"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefectGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Механические повреждения"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Электрические неисправности"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Иванов Иван Иванович",
                            Position = "Водитель",
                            ShortName = "Иванов И.И."
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Петров Петр Петрович",
                            Position = "Водитель",
                            ShortName = "Петров П.П."
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "КАМАЗ 53215-15",
                            StateNumber = "Н 507 СН"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Name = "Аккумулятор 6СТ-190",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            UnitOfMeasure = "шт"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalogNomenclatureId")
                        .HasColumnType("integer");

                    b.Property<int>("MainNomenclatureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnalogNomenclatureId");

                    b.HasIndex("MainNomenclatureId");

                    b.ToTable("NomenclatureAnalogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalogNomenclatureId = 3,
                            MainNomenclatureId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Consumption", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Equipment");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.ConsumptionItem", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Consumption", "Consumption")
                        .WithMany("Items")
                        .HasForeignKey("ConsumptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Defect", "Defect")
                        .WithMany()
                        .HasForeignKey("DefectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Consumption");

                    b.Navigation("Defect");

                    b.Navigation("Nomenclature");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.DefectGroup", "DefectGroup")
                        .WithMany("Defects")
                        .HasForeignKey("DefectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefectGroup");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.NomenclatureAnalog", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "AnalogNomenclature")
                        .WithMany()
                        .HasForeignKey("AnalogNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "MainNomenclature")
                        .WithMany()
                        .HasForeignKey("MainNomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnalogNomenclature");

                    b.Navigation("MainNomenclature");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Consumption", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Navigation("Defects");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250411033846_InProgress_2.cs
using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class InProgress_2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ConsumptionItems");

            migrationBuilder.DropTable(
                name: "NomenclatureAnalogs");

            migrationBuilder.DropTable(
                name: "Consumptions");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Consumptions",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    DriverId = table.Column<int>(type: "integer", nullable: false),
                    EquipmentId = table.Column<int>(type: "integer", nullable: false),
                    WarehouseId = table.Column<int>(type: "integer", nullable: false),
                    Date = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    Number = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Consumptions", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Consumptions_Drivers_DriverId",
                        column: x => x.DriverId,
                        principalTable: "Drivers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Consumptions_Equipments_EquipmentId",
                        column: x => x.EquipmentId,
                        principalTable: "Equipments",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Consumptions_Warehouses_WarehouseId",
                        column: x => x.WarehouseId,
                        principalTable: "Warehouses",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "NomenclatureAnalogs",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    AnalogNomenclatureId = table.Column<int>(type: "integer", nullable: false),
                    MainNomenclatureId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NomenclatureAnalogs", x => x.Id);
                    table.ForeignKey(
                        name: "FK_NomenclatureAnalogs_Nomenclature_AnalogNomenclatureId",
                        column: x => x.AnalogNomenclatureId,
                        principalTable: "Nomenclature",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_NomenclatureAnalogs_Nomenclature_MainNomenclatureId",
                        column: x => x.MainNomenclatureId,
                        principalTable: "Nomenclature",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ConsumptionItems",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    ConsumptionId = table.Column<int>(type: "integer", nullable: false),
                    DefectId = table.Column<int>(type: "integer", nullable: false),
                    NomenclatureId = table.Column<int>(type: "integer", nullable: false),
                    Quantity = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ConsumptionItems", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ConsumptionItems_Consumptions_ConsumptionId",
                        column: x => x.ConsumptionId,
                        principalTable: "Consumptions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ConsumptionItems_Defects_DefectId",
                        column: x => x.DefectId,
                        principalTable: "Defects",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ConsumptionItems_Nomenclature_NomenclatureId",
                        column: x => x.NomenclatureId,
                        principalTable: "Nomenclature",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.InsertData(
                table: "Consumptions",
                columns: new[] { "Id", "Date", "DriverId", "EquipmentId", "Number", "WarehouseId" },
                values: new object[] { 1, new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Utc), 1, 1, "РСХ0001", 1 });

            migrationBuilder.InsertData(
                table: "NomenclatureAnalogs",
                columns: new[] { "Id", "AnalogNomenclatureId", "MainNomenclatureId" },
                values: new object[] { 1, 3, 2 });

            migrationBuilder.InsertData(
                table: "ConsumptionItems",
                columns: new[] { "Id", "ConsumptionId", "DefectId", "NomenclatureId", "Quantity" },
                values: new object[] { 1, 1, 2, 2, 1 });

            migrationBuilder.CreateIndex(
                name: "IX_ConsumptionItems_ConsumptionId",
                table: "ConsumptionItems",
                column: "ConsumptionId");

            migrationBuilder.CreateIndex(
                name: "IX_ConsumptionItems_DefectId",
                table: "ConsumptionItems",
                column: "DefectId");

            migrationBuilder.CreateIndex(
                name: "IX_ConsumptionItems_NomenclatureId",
                table: "ConsumptionItems",
                column: "NomenclatureId");

            migrationBuilder.CreateIndex(
                name: "IX_Consumptions_DriverId",
                table: "Consumptions",
                column: "DriverId");

            migrationBuilder.CreateIndex(
                name: "IX_Consumptions_EquipmentId",
                table: "Consumptions",
                column: "EquipmentId");

            migrationBuilder.CreateIndex(
                name: "IX_Consumptions_Number",
                table: "Consumptions",
                column: "Number",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Consumptions_WarehouseId",
                table: "Consumptions",
                column: "WarehouseId");

            migrationBuilder.CreateIndex(
                name: "IX_NomenclatureAnalogs_AnalogNomenclatureId",
                table: "NomenclatureAnalogs",
                column: "AnalogNomenclatureId");

            migrationBuilder.CreateIndex(
                name: "IX_NomenclatureAnalogs_MainNomenclatureId",
                table: "NomenclatureAnalogs",
                column: "MainNomenclatureId");
        }
    }
}


//20250411033846_InProgress_2.Designer.cs
// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250411033846_InProgress_2")]
    partial class InProgress_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DefectGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DefectGroupId");

                    b.ToTable("Defects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefectGroupId = 1,
                            Name = "Трещина корпуса"
                        },
                        new
                        {
                            Id = 2,
                            DefectGroupId = 2,
                            Name = "Короткое замыкание"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefectGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Механические повреждения"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Электрические неисправности"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Иванов Иван Иванович",
                            Position = "Водитель",
                            ShortName = "Иванов И.И."
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Петров Петр Петрович",
                            Position = "Водитель",
                            ShortName = "Петров П.П."
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "КАМАЗ 53215-15",
                            StateNumber = "Н 507 СН"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Name = "Аккумулятор 6СТ-190",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            UnitOfMeasure = "шт"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.DefectGroup", "DefectGroup")
                        .WithMany("Defects")
                        .HasForeignKey("DefectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefectGroup");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Navigation("Defects");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250411035904_InProgress_3.cs
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class InProgress_3 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Stocks",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    WarehouseId = table.Column<int>(type: "integer", nullable: false),
                    NomenclatureId = table.Column<int>(type: "integer", nullable: false),
                    InitialQuantity = table.Column<decimal>(type: "numeric(18,2)", nullable: false),
                    ReceivedQuantity = table.Column<decimal>(type: "numeric(18,2)", nullable: false),
                    ConsumedQuantity = table.Column<decimal>(type: "numeric(18,2)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Stocks", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Stocks_Nomenclature_NomenclatureId",
                        column: x => x.NomenclatureId,
                        principalTable: "Nomenclature",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Stocks_Warehouses_WarehouseId",
                        column: x => x.WarehouseId,
                        principalTable: "Warehouses",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateIndex(
                name: "IX_Stocks_NomenclatureId",
                table: "Stocks",
                column: "NomenclatureId");

            migrationBuilder.CreateIndex(
                name: "IX_Stocks_WarehouseId",
                table: "Stocks",
                column: "WarehouseId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Stocks");
        }
    }
}


//20250411035904_InProgress_3.Designer.cs
// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250411035904_InProgress_3")]
    partial class InProgress_3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DefectGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DefectGroupId");

                    b.ToTable("Defects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefectGroupId = 1,
                            Name = "Трещина корпуса"
                        },
                        new
                        {
                            Id = 2,
                            DefectGroupId = 2,
                            Name = "Короткое замыкание"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefectGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Механические повреждения"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Электрические неисправности"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Иванов Иван Иванович",
                            Position = "Водитель",
                            ShortName = "Иванов И.И."
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Петров Петр Петрович",
                            Position = "Водитель",
                            ShortName = "Петров П.П."
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "КАМАЗ 53215-15",
                            StateNumber = "Н 507 СН"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Name = "Аккумулятор 6СТ-190",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            UnitOfMeasure = "шт"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConsumedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ReceivedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.DefectGroup", "DefectGroup")
                        .WithMany("Defects")
                        .HasForeignKey("DefectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefectGroup");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Stock", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany("Stocks")
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany("Stocks")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Navigation("Defects");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}


//20250412041531_InProgress_4.cs
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace RequestManagement.Server.Migrations
{
    /// <inheritdoc />
    public partial class InProgress_4 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.InsertData(
                table: "Stocks",
                columns: new[] { "Id", "ConsumedQuantity", "InitialQuantity", "NomenclatureId", "ReceivedQuantity", "WarehouseId" },
                values: new object[,]
                {
                    { 1, 0m, 70m, 1, 0m, 1 },
                    { 2, 0m, 10m, 2, 0m, 1 },
                    { 3, 0m, 40m, 1, 0m, 2 },
                    { 4, 0m, 20m, 2, 0m, 2 }
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Stocks",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "Stocks",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.DeleteData(
                table: "Stocks",
                keyColumn: "Id",
                keyValue: 3);

            migrationBuilder.DeleteData(
                table: "Stocks",
                keyColumn: "Id",
                keyValue: 4);
        }
    }
}


//20250412041531_InProgress_4.Designer.cs
// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250412041531_InProgress_4")]
    partial class InProgress_4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DefectGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DefectGroupId");

                    b.ToTable("Defects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefectGroupId = 1,
                            Name = "Трещина корпуса"
                        },
                        new
                        {
                            Id = 2,
                            DefectGroupId = 2,
                            Name = "Короткое замыкание"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefectGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Механические повреждения"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Электрические неисправности"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Иванов Иван Иванович",
                            Position = "Водитель",
                            ShortName = "Иванов И.И."
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Петров Петр Петрович",
                            Position = "Водитель",
                            ShortName = "Петров П.П."
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "КАМАЗ 53215-15",
                            StateNumber = "Н 507 СН"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Name = "Аккумулятор 6СТ-190",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            UnitOfMeasure = "шт"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConsumedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ReceivedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 70m,
                            NomenclatureId = 1,
                            ReceivedQuantity = 0m,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 10m,
                            NomenclatureId = 2,
                            ReceivedQuantity = 0m,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 40m,
                            NomenclatureId = 1,
                            ReceivedQuantity = 0m,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 4,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 20m,
                            NomenclatureId = 2,
                            ReceivedQuantity = 0m,
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.DefectGroup", "DefectGroup")
                        .WithMany("Defects")
                        .HasForeignKey("DefectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefectGroup");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Stock", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany("Stocks")
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany("Stocks")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Navigation("Defects");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}


//ApplicationDbContextModelSnapshot.cs
// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RequestManagement.Server.Data;

#nullable disable

namespace RequestManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DefectGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DefectGroupId");

                    b.ToTable("Defects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefectGroupId = 1,
                            Name = "Трещина корпуса"
                        },
                        new
                        {
                            Id = 2,
                            DefectGroupId = 2,
                            Name = "Короткое замыкание"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefectGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Механические повреждения"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Электрические неисправности"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Иванов Иван Иванович",
                            Position = "Водитель",
                            ShortName = "Иванов И.И."
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Петров Петр Петрович",
                            Position = "Водитель",
                            ShortName = "Петров П.П."
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "КАМАЗ 53215-15",
                            StateNumber = "Н 507 СН"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Nomenclature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Article = "7406.1118013",
                            Code = "ТКР001",
                            Name = "Турбокомпрессор ТКР 7С-6 левый КАМАЗ Евро 2",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 2,
                            Article = "6СТ-190",
                            Code = "АКБ001",
                            Name = "Аккумулятор 6СТ-190",
                            UnitOfMeasure = "шт"
                        },
                        new
                        {
                            Id = 3,
                            Article = "6СТ-200",
                            Code = "АКБ002",
                            Name = "Аккумулятор 6СТ-200 (аналог 6СТ-190)",
                            UnitOfMeasure = "шт"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConsumedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ReceivedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 70m,
                            NomenclatureId = 1,
                            ReceivedQuantity = 0m,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 10m,
                            NomenclatureId = 2,
                            ReceivedQuantity = 0m,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 40m,
                            NomenclatureId = 1,
                            ReceivedQuantity = 0m,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 4,
                            ConsumedQuantity = 0m,
                            InitialQuantity = 20m,
                            NomenclatureId = 2,
                            ReceivedQuantity = 0m,
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "$2a$11$abcdefghijk123456789u.lX7Qz5Z9K8zM8zM8zM8zM8zM8zM8zM8zM",
                            Role = 0
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основной склад"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Резервный склад"
                        });
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Defect", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.DefectGroup", "DefectGroup")
                        .WithMany("Defects")
                        .HasForeignKey("DefectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefectGroup");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Stock", b =>
                {
                    b.HasOne("RequestManagement.Common.Models.Nomenclature", "Nomenclature")
                        .WithMany("Stocks")
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RequestManagement.Common.Models.Warehouse", "Warehouse")
                        .WithMany("Stocks")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.DefectGroup", b =>
                {
                    b.Navigation("Defects");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Nomenclature", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("RequestManagement.Common.Models.Warehouse", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}


//project.assets.json
{
  "version": 3,
  "targets": {
    "net8.0": {
      "BCrypt.Net-Next/4.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "related": ".xml"
          }
        }
      },
      "Google.Protobuf/3.30.2": {
        "type": "package",
        "compile": {
          "lib/net5.0/Google.Protobuf.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.AspNetCore/2.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Protobuf": "3.27.0",
          "Grpc.AspNetCore.Server.ClientFactory": "2.70.0",
          "Grpc.Tools": "2.70.0"
        },
        "compile": {
          "lib/net8.0/_._": {}
        },
        "runtime": {
          "lib/net8.0/_._": {}
        }
      },
      "Grpc.AspNetCore.Server/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Net.Common": "2.70.0"
        },
        "compile": {
          "lib/net8.0/Grpc.AspNetCore.Server.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.dll": {
            "related": ".pdb;.xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.AspNetCore.Server": "2.70.0",
          "Grpc.Net.ClientFactory": "2.70.0"
        },
        "compile": {
          "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll": {
            "related": ".pdb;.xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Grpc.Core.Api/2.70.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.Client/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Net.Common": "2.70.0",
          "Microsoft.Extensions.Logging.Abstractions": "6.0.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.ClientFactory/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Net.Client": "2.70.0",
          "Microsoft.Extensions.Http": "6.0.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.ClientFactory.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.ClientFactory.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.Common/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Core.Api": "2.70.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Tools/2.71.0": {
        "type": "package",
        "build": {
          "build/Grpc.Tools.props": {},
          "build/Grpc.Tools.targets": {}
        }
      },
      "Humanizer.Core/2.14.1": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Humanizer.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Bcl.Memory/9.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Bcl.Memory.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Bcl.Memory.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Build.Framework/17.8.3": {
        "type": "package",
        "compile": {
          "ref/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/_._": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Microsoft.Build.Locator/1.7.8": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {}
        },
        "runtime": {
          "lib/net6.0/Microsoft.Build.Locator.dll": {}
        },
        "build": {
          "build/_._": {}
        }
      },
      "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
        "type": "package",
        "build": {
          "buildTransitive/Microsoft.CodeAnalysis.Analyzers.props": {},
          "buildTransitive/Microsoft.CodeAnalysis.Analyzers.targets": {}
        }
      },
      "Microsoft.CodeAnalysis.Common/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.CodeAnalysis.Analyzers": "3.3.4",
          "System.Collections.Immutable": "7.0.0",
          "System.Reflection.Metadata": "7.0.0",
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.CodeAnalysis.Common": "[4.8.0]"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.CodeAnalysis.CSharp": "[4.8.0]",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "Microsoft.CodeAnalysis.Workspaces.Common": "[4.8.0]"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "System.Composition": "7.0.0",
          "System.IO.Pipelines": "7.0.0",
          "System.Threading.Channels": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Build.Framework": "16.10.0",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "Microsoft.CodeAnalysis.Workspaces.Common": "[4.8.0]",
          "System.Text.Json": "7.0.3"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.runtimeconfig.json;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll": {
            "related": ".pdb;.runtimeconfig.json;.xml"
          },
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll": {
            "related": ".BuildHost.pdb;.BuildHost.runtimeconfig.json;.BuildHost.xml;.pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.3",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.EntityFrameworkCore.props": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {
        "type": "package"
      },
      "Microsoft.EntityFrameworkCore.Design/9.0.3": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.Build.Locator": "1.7.8",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.CSharp.Workspaces": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.MSBuild": "4.8.0",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyModel": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3",
          "Mono.TextTemplating": "3.0.0",
          "System.Text.Json": "9.0.3"
        },
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/net8.0/Microsoft.EntityFrameworkCore.Design.props": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Tools/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Design": "9.0.3"
        }
      },
      "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyModel/9.0.3": {
        "type": "package",
        "dependencies": {
          "System.Text.Encodings.Web": "9.0.3",
          "System.Text.Json": "9.0.3"
        },
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Http/6.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "6.0.0",
          "Microsoft.Extensions.Logging": "6.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "6.0.0",
          "Microsoft.Extensions.Options": "6.0.0"
        },
        "compile": {
          "lib/netstandard2.0/Microsoft.Extensions.Http.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.Extensions.Http.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Extensions.Logging/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "System.Diagnostics.DiagnosticSource": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Microsoft.Extensions.Options/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Options.targets": {}
        }
      },
      "Microsoft.Extensions.Primitives/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.7.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.7.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.7.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "7.1.2",
          "Microsoft.IdentityModel.Tokens": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.7.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Bcl.Memory": "9.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.IdentityModel.Logging": "8.7.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "related": ".xml"
          }
        }
      },
      "Mono.TextTemplating/3.0.0": {
        "type": "package",
        "dependencies": {
          "System.CodeDom": "6.0.0"
        },
        "compile": {
          "lib/net6.0/_._": {}
        },
        "runtime": {
          "lib/net6.0/Mono.TextTemplating.dll": {}
        },
        "build": {
          "buildTransitive/Mono.TextTemplating.targets": {}
        }
      },
      "Npgsql/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Npgsql.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "related": ".xml"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "[9.0.1, 10.0.0)",
          "Microsoft.EntityFrameworkCore.Relational": "[9.0.1, 10.0.0)",
          "Npgsql": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "related": ".xml"
          }
        }
      },
      "System.CodeDom/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Collections.Immutable/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Collections.Immutable.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Convention": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0",
          "System.Composition.TypedParts": "7.0.0"
        },
        "compile": {
          "lib/netcoreapp2.0/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.0/_._": {}
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.AttributedModel/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.AttributedModel.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Convention/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Convention.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Hosting/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.Runtime": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Hosting.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Runtime/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Runtime.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.TypedParts/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.TypedParts.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "contentFiles": {
          "contentFiles/any/any/_._": {
            "buildAction": "None",
            "codeLanguage": "any",
            "copyToOutput": false
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.7.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "compile": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "related": ".xml"
          }
        }
      },
      "System.IO.Pipelines/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.Reflection.Metadata/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Collections.Immutable": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Reflection.Metadata.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Text.Encodings.Web/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "assetType": "runtime",
            "rid": "browser"
          }
        }
      },
      "System.Text.Json/9.0.3": {
        "type": "package",
        "dependencies": {
          "System.IO.Pipelines": "9.0.3",
          "System.Text.Encodings.Web": "9.0.3"
        },
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/System.Text.Json.targets": {}
        }
      },
      "System.Threading.Channels/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Threading.Channels.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "RequestManagement.Common/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v8.0",
        "compile": {
          "bin/placeholder/RequestManagement.Common.dll": {}
        },
        "runtime": {
          "bin/placeholder/RequestManagement.Common.dll": {}
        }
      }
    }
  },
  "libraries": {
    "BCrypt.Net-Next/4.0.3": {
      "sha512": "W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "type": "package",
      "path": "bcrypt.net-next/4.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "bcrypt.net-next.4.0.3.nupkg.sha512",
        "bcrypt.net-next.nuspec",
        "ico.png",
        "lib/net20/BCrypt.Net-Next.dll",
        "lib/net20/BCrypt.Net-Next.xml",
        "lib/net35/BCrypt.Net-Next.dll",
        "lib/net35/BCrypt.Net-Next.xml",
        "lib/net462/BCrypt.Net-Next.dll",
        "lib/net462/BCrypt.Net-Next.xml",
        "lib/net472/BCrypt.Net-Next.dll",
        "lib/net472/BCrypt.Net-Next.xml",
        "lib/net48/BCrypt.Net-Next.dll",
        "lib/net48/BCrypt.Net-Next.xml",
        "lib/net5.0/BCrypt.Net-Next.dll",
        "lib/net5.0/BCrypt.Net-Next.xml",
        "lib/net6.0/BCrypt.Net-Next.dll",
        "lib/net6.0/BCrypt.Net-Next.xml",
        "lib/netstandard2.0/BCrypt.Net-Next.dll",
        "lib/netstandard2.0/BCrypt.Net-Next.xml",
        "lib/netstandard2.1/BCrypt.Net-Next.dll",
        "lib/netstandard2.1/BCrypt.Net-Next.xml",
        "readme.md"
      ]
    },
    "Google.Protobuf/3.30.2": {
      "sha512": "Y2aOVLIt75yeeEWigg9V9YnjsEm53sADtLGq0gLhwaXpk3iu8tYSoauolyhenagA2sWno2TQ2WujI0HQd6s1Vw==",
      "type": "package",
      "path": "google.protobuf/3.30.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "google.protobuf.3.30.2.nupkg.sha512",
        "google.protobuf.nuspec",
        "lib/net45/Google.Protobuf.dll",
        "lib/net45/Google.Protobuf.pdb",
        "lib/net45/Google.Protobuf.xml",
        "lib/net5.0/Google.Protobuf.dll",
        "lib/net5.0/Google.Protobuf.pdb",
        "lib/net5.0/Google.Protobuf.xml",
        "lib/netstandard1.1/Google.Protobuf.dll",
        "lib/netstandard1.1/Google.Protobuf.pdb",
        "lib/netstandard1.1/Google.Protobuf.xml",
        "lib/netstandard2.0/Google.Protobuf.dll",
        "lib/netstandard2.0/Google.Protobuf.pdb",
        "lib/netstandard2.0/Google.Protobuf.xml"
      ]
    },
    "Grpc.AspNetCore/2.70.0": {
      "sha512": "s29ST5F2/PZLzOnfqfeDn0emAZajBtYnV9G7hkbK8Eu9+XphoL3KfiEsg2eBsx7P9YYQXcksDbE+CbHApMZeJA==",
      "type": "package",
      "path": "grpc.aspnetcore/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.aspnetcore.2.70.0.nupkg.sha512",
        "grpc.aspnetcore.nuspec",
        "lib/net6.0/_._",
        "lib/net7.0/_._",
        "lib/net8.0/_._",
        "lib/net9.0/_._",
        "packageIcon.png"
      ]
    },
    "Grpc.AspNetCore.Server/2.70.0": {
      "sha512": "9d6JuMLSxwOX4zERV7HBwq1XL8DD48a6FSoxD5dDXrCz/o0HqMXE2+lRcXHckOlz1JCesznW8XMMJdsU1FfY7w==",
      "type": "package",
      "path": "grpc.aspnetcore.server/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.aspnetcore.server.2.70.0.nupkg.sha512",
        "grpc.aspnetcore.server.nuspec",
        "lib/net6.0/Grpc.AspNetCore.Server.dll",
        "lib/net6.0/Grpc.AspNetCore.Server.pdb",
        "lib/net6.0/Grpc.AspNetCore.Server.xml",
        "lib/net7.0/Grpc.AspNetCore.Server.dll",
        "lib/net7.0/Grpc.AspNetCore.Server.pdb",
        "lib/net7.0/Grpc.AspNetCore.Server.xml",
        "lib/net8.0/Grpc.AspNetCore.Server.dll",
        "lib/net8.0/Grpc.AspNetCore.Server.pdb",
        "lib/net8.0/Grpc.AspNetCore.Server.xml",
        "lib/net9.0/Grpc.AspNetCore.Server.dll",
        "lib/net9.0/Grpc.AspNetCore.Server.pdb",
        "lib/net9.0/Grpc.AspNetCore.Server.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
      "sha512": "k4GrvUAgVWm7DyhnV55MHdX4bQSpZVEQmlZO3bdSmGZ+z6Hx+CwDlhqiReczCm6qbzSUbS1YW0t7z7UEObTwKA==",
      "type": "package",
      "path": "grpc.aspnetcore.server.clientfactory/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "grpc.aspnetcore.server.clientfactory.2.70.0.nupkg.sha512",
        "grpc.aspnetcore.server.clientfactory.nuspec",
        "lib/net6.0/Grpc.AspNetCore.Server.ClientFactory.dll",
        "lib/net6.0/Grpc.AspNetCore.Server.ClientFactory.pdb",
        "lib/net6.0/Grpc.AspNetCore.Server.ClientFactory.xml",
        "lib/net7.0/Grpc.AspNetCore.Server.ClientFactory.dll",
        "lib/net7.0/Grpc.AspNetCore.Server.ClientFactory.pdb",
        "lib/net7.0/Grpc.AspNetCore.Server.ClientFactory.xml",
        "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll",
        "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.pdb",
        "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.xml",
        "lib/net9.0/Grpc.AspNetCore.Server.ClientFactory.dll",
        "lib/net9.0/Grpc.AspNetCore.Server.ClientFactory.pdb",
        "lib/net9.0/Grpc.AspNetCore.Server.ClientFactory.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Core.Api/2.70.0": {
      "sha512": "66UotvWcSIq41oiQhLWcQACyKPM4umxXNiht5DQTLZJfNwEswWOcS7Z0xIEHyNIBE7ZpjotH22bEjTkvhPxmVw==",
      "type": "package",
      "path": "grpc.core.api/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.core.api.2.70.0.nupkg.sha512",
        "grpc.core.api.nuspec",
        "lib/net462/Grpc.Core.Api.dll",
        "lib/net462/Grpc.Core.Api.pdb",
        "lib/net462/Grpc.Core.Api.xml",
        "lib/netstandard2.0/Grpc.Core.Api.dll",
        "lib/netstandard2.0/Grpc.Core.Api.pdb",
        "lib/netstandard2.0/Grpc.Core.Api.xml",
        "lib/netstandard2.1/Grpc.Core.Api.dll",
        "lib/netstandard2.1/Grpc.Core.Api.pdb",
        "lib/netstandard2.1/Grpc.Core.Api.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.Client/2.70.0": {
      "sha512": "xNv0FFCVJa5S1beUtye82WFCxKThuE1jbN8DO1x1Rj8VSIWXLBUmfSID5a1fGzsU2R/EMfwPoWclJ2RMfQuGXw==",
      "type": "package",
      "path": "grpc.net.client/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.net.client.2.70.0.nupkg.sha512",
        "grpc.net.client.nuspec",
        "lib/net462/Grpc.Net.Client.dll",
        "lib/net462/Grpc.Net.Client.pdb",
        "lib/net462/Grpc.Net.Client.xml",
        "lib/net6.0/Grpc.Net.Client.dll",
        "lib/net6.0/Grpc.Net.Client.pdb",
        "lib/net6.0/Grpc.Net.Client.xml",
        "lib/net7.0/Grpc.Net.Client.dll",
        "lib/net7.0/Grpc.Net.Client.pdb",
        "lib/net7.0/Grpc.Net.Client.xml",
        "lib/net8.0/Grpc.Net.Client.dll",
        "lib/net8.0/Grpc.Net.Client.pdb",
        "lib/net8.0/Grpc.Net.Client.xml",
        "lib/netstandard2.0/Grpc.Net.Client.dll",
        "lib/netstandard2.0/Grpc.Net.Client.pdb",
        "lib/netstandard2.0/Grpc.Net.Client.xml",
        "lib/netstandard2.1/Grpc.Net.Client.dll",
        "lib/netstandard2.1/Grpc.Net.Client.pdb",
        "lib/netstandard2.1/Grpc.Net.Client.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.ClientFactory/2.70.0": {
      "sha512": "Qg+93oj/8RdEw3PnLZNNYWnWCWyJYC/ZYZcjeln/pLaxLaPvdXES1peiqSJUI4wLFZ1JwGlbWt8+nM1i2E7ihg==",
      "type": "package",
      "path": "grpc.net.clientfactory/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.net.clientfactory.2.70.0.nupkg.sha512",
        "grpc.net.clientfactory.nuspec",
        "lib/net6.0/Grpc.Net.ClientFactory.dll",
        "lib/net6.0/Grpc.Net.ClientFactory.pdb",
        "lib/net6.0/Grpc.Net.ClientFactory.xml",
        "lib/net7.0/Grpc.Net.ClientFactory.dll",
        "lib/net7.0/Grpc.Net.ClientFactory.pdb",
        "lib/net7.0/Grpc.Net.ClientFactory.xml",
        "lib/net8.0/Grpc.Net.ClientFactory.dll",
        "lib/net8.0/Grpc.Net.ClientFactory.pdb",
        "lib/net8.0/Grpc.Net.ClientFactory.xml",
        "lib/netstandard2.0/Grpc.Net.ClientFactory.dll",
        "lib/netstandard2.0/Grpc.Net.ClientFactory.pdb",
        "lib/netstandard2.0/Grpc.Net.ClientFactory.xml",
        "lib/netstandard2.1/Grpc.Net.ClientFactory.dll",
        "lib/netstandard2.1/Grpc.Net.ClientFactory.pdb",
        "lib/netstandard2.1/Grpc.Net.ClientFactory.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.Common/2.70.0": {
      "sha512": "rBdEUMyCwa+iB8mqC6JKyPbj3SBHHkReJj/yy/XKJI63GcG6w9DJMMGTVcYHqq4Ci2W4m0HT4jt2pFfFscar8g==",
      "type": "package",
      "path": "grpc.net.common/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "grpc.net.common.2.70.0.nupkg.sha512",
        "grpc.net.common.nuspec",
        "lib/net6.0/Grpc.Net.Common.dll",
        "lib/net6.0/Grpc.Net.Common.pdb",
        "lib/net6.0/Grpc.Net.Common.xml",
        "lib/net7.0/Grpc.Net.Common.dll",
        "lib/net7.0/Grpc.Net.Common.pdb",
        "lib/net7.0/Grpc.Net.Common.xml",
        "lib/net8.0/Grpc.Net.Common.dll",
        "lib/net8.0/Grpc.Net.Common.pdb",
        "lib/net8.0/Grpc.Net.Common.xml",
        "lib/netstandard2.0/Grpc.Net.Common.dll",
        "lib/netstandard2.0/Grpc.Net.Common.pdb",
        "lib/netstandard2.0/Grpc.Net.Common.xml",
        "lib/netstandard2.1/Grpc.Net.Common.dll",
        "lib/netstandard2.1/Grpc.Net.Common.pdb",
        "lib/netstandard2.1/Grpc.Net.Common.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Tools/2.71.0": {
      "sha512": "r8zHZm7kHdMrtujnkcuQ0BNDH2969at/8Va1ZzQgVblaQzR7tm8JlA3G+5Z5IFbvvf9PcAr1/VcoSR+g7j4Nyw==",
      "type": "package",
      "path": "grpc.tools/2.71.0",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "build/Grpc.Tools.props",
        "build/Grpc.Tools.targets",
        "build/_grpc/Grpc.CSharp.xml",
        "build/_grpc/_Grpc.Tools.props",
        "build/_grpc/_Grpc.Tools.targets",
        "build/_protobuf/Google.Protobuf.Tools.props",
        "build/_protobuf/Google.Protobuf.Tools.targets",
        "build/_protobuf/Protobuf.CSharp.xml",
        "build/_protobuf/net45/Protobuf.MSBuild.dll",
        "build/_protobuf/net45/Protobuf.MSBuild.pdb",
        "build/_protobuf/netstandard1.3/Protobuf.MSBuild.dll",
        "build/_protobuf/netstandard1.3/Protobuf.MSBuild.pdb",
        "build/native/include/google/protobuf/any.proto",
        "build/native/include/google/protobuf/api.proto",
        "build/native/include/google/protobuf/descriptor.proto",
        "build/native/include/google/protobuf/duration.proto",
        "build/native/include/google/protobuf/empty.proto",
        "build/native/include/google/protobuf/field_mask.proto",
        "build/native/include/google/protobuf/source_context.proto",
        "build/native/include/google/protobuf/struct.proto",
        "build/native/include/google/protobuf/timestamp.proto",
        "build/native/include/google/protobuf/type.proto",
        "build/native/include/google/protobuf/wrappers.proto",
        "grpc.tools.2.71.0.nupkg.sha512",
        "grpc.tools.nuspec",
        "packageIcon.png",
        "tools/linux_arm64/grpc_csharp_plugin",
        "tools/linux_arm64/protoc",
        "tools/linux_x64/grpc_csharp_plugin",
        "tools/linux_x64/protoc",
        "tools/linux_x86/grpc_csharp_plugin",
        "tools/linux_x86/protoc",
        "tools/macosx_x64/grpc_csharp_plugin",
        "tools/macosx_x64/protoc",
        "tools/windows_x64/grpc_csharp_plugin.exe",
        "tools/windows_x64/protoc.exe",
        "tools/windows_x86/grpc_csharp_plugin.exe",
        "tools/windows_x86/protoc.exe"
      ]
    },
    "Humanizer.Core/2.14.1": {
      "sha512": "lQKvtaTDOXnoVJ20ibTuSIOf2i0uO0MPbDhd1jm238I+U/2ZnRENj0cktKZhtchBMtCUSRQ5v4xBCUbKNmyVMw==",
      "type": "package",
      "path": "humanizer.core/2.14.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "humanizer.core.2.14.1.nupkg.sha512",
        "humanizer.core.nuspec",
        "lib/net6.0/Humanizer.dll",
        "lib/net6.0/Humanizer.xml",
        "lib/netstandard1.0/Humanizer.dll",
        "lib/netstandard1.0/Humanizer.xml",
        "lib/netstandard2.0/Humanizer.dll",
        "lib/netstandard2.0/Humanizer.xml",
        "logo.png"
      ]
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
      "sha512": "e19jmWJAQucbPYk3/fihJMDCYfv6CO+Qwp34pOehUSCbaHROw6FZ551SN1D0s9Btl0U/QHfuwFq6Z8Oa2ktE6g==",
      "type": "package",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.14",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll",
        "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.xml",
        "microsoft.aspnetcore.authentication.jwtbearer.8.0.14.nupkg.sha512",
        "microsoft.aspnetcore.authentication.jwtbearer.nuspec"
      ]
    },
    "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
      "sha512": "3aeMZ1N0lJoSyzqiP03hqemtb1BijhsJADdobn/4nsMJ8V1H+CrpuduUe4hlRdx+ikBQju1VGjMD1GJ3Sk05Eg==",
      "type": "package",
      "path": "microsoft.bcl.asyncinterfaces/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Bcl.AsyncInterfaces.targets",
        "buildTransitive/net462/_._",
        "lib/net462/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/net462/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
        "microsoft.bcl.asyncinterfaces.7.0.0.nupkg.sha512",
        "microsoft.bcl.asyncinterfaces.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Bcl.Memory/9.0.0": {
      "sha512": "bTUtGfpGyJnohQzjdXbtc7MqNzkv7CWUSRz54+ucNm0i32rZiIU0VdVPHDBShOl1qhVKRjW8mnEBz3d2vH93tQ==",
      "type": "package",
      "path": "microsoft.bcl.memory/9.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Bcl.Memory.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Bcl.Memory.targets",
        "lib/net462/Microsoft.Bcl.Memory.dll",
        "lib/net462/Microsoft.Bcl.Memory.xml",
        "lib/net8.0/Microsoft.Bcl.Memory.dll",
        "lib/net8.0/Microsoft.Bcl.Memory.xml",
        "lib/net9.0/Microsoft.Bcl.Memory.dll",
        "lib/net9.0/Microsoft.Bcl.Memory.xml",
        "lib/netstandard2.0/Microsoft.Bcl.Memory.dll",
        "lib/netstandard2.0/Microsoft.Bcl.Memory.xml",
        "lib/netstandard2.1/Microsoft.Bcl.Memory.dll",
        "lib/netstandard2.1/Microsoft.Bcl.Memory.xml",
        "microsoft.bcl.memory.9.0.0.nupkg.sha512",
        "microsoft.bcl.memory.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Build.Framework/17.8.3": {
      "sha512": "NrQZJW8TlKVPx72yltGb8SVz3P5mNRk9fNiD/ao8jRSk48WqIIdCn99q4IjlVmPcruuQ+yLdjNQLL8Rb4c916g==",
      "type": "package",
      "path": "microsoft.build.framework/17.8.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "MSBuild-NuGet-Icon.png",
        "README.md",
        "lib/net472/Microsoft.Build.Framework.dll",
        "lib/net472/Microsoft.Build.Framework.pdb",
        "lib/net472/Microsoft.Build.Framework.xml",
        "lib/net8.0/Microsoft.Build.Framework.dll",
        "lib/net8.0/Microsoft.Build.Framework.pdb",
        "lib/net8.0/Microsoft.Build.Framework.xml",
        "microsoft.build.framework.17.8.3.nupkg.sha512",
        "microsoft.build.framework.nuspec",
        "notices/THIRDPARTYNOTICES.txt",
        "ref/net472/Microsoft.Build.Framework.dll",
        "ref/net472/Microsoft.Build.Framework.xml",
        "ref/net8.0/Microsoft.Build.Framework.dll",
        "ref/net8.0/Microsoft.Build.Framework.xml",
        "ref/netstandard2.0/Microsoft.Build.Framework.dll",
        "ref/netstandard2.0/Microsoft.Build.Framework.xml"
      ]
    },
    "Microsoft.Build.Locator/1.7.8": {
      "sha512": "sPy10x527Ph16S2u0yGME4S6ohBKJ69WfjeGG/bvELYeZVmJdKjxgnlL8cJJJLGV/cZIRqSfB12UDB8ICakOog==",
      "type": "package",
      "path": "microsoft.build.locator/1.7.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "MSBuild-NuGet-Icon.png",
        "build/Microsoft.Build.Locator.props",
        "build/Microsoft.Build.Locator.targets",
        "lib/net46/Microsoft.Build.Locator.dll",
        "lib/net6.0/Microsoft.Build.Locator.dll",
        "microsoft.build.locator.1.7.8.nupkg.sha512",
        "microsoft.build.locator.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
      "sha512": "AxkxcPR+rheX0SmvpLVIGLhOUXAKG56a64kV9VQZ4y9gR9ZmPXnqZvHJnmwLSwzrEP6junUF11vuc+aqo5r68g==",
      "type": "package",
      "path": "microsoft.codeanalysis.analyzers/3.3.4",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.txt",
        "analyzers/dotnet/cs/Microsoft.CodeAnalysis.Analyzers.dll",
        "analyzers/dotnet/cs/Microsoft.CodeAnalysis.CSharp.Analyzers.dll",
        "analyzers/dotnet/cs/cs/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/de/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/es/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/fr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/it/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ja/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ko/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pl/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pt-BR/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ru/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/tr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/zh-Hans/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/zh-Hant/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/Microsoft.CodeAnalysis.Analyzers.dll",
        "analyzers/dotnet/vb/Microsoft.CodeAnalysis.VisualBasic.Analyzers.dll",
        "analyzers/dotnet/vb/cs/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/de/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/es/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/fr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/it/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ja/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ko/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/pl/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/pt-BR/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ru/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/tr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/zh-Hans/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/zh-Hant/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "buildTransitive/Microsoft.CodeAnalysis.Analyzers.props",
        "buildTransitive/Microsoft.CodeAnalysis.Analyzers.targets",
        "buildTransitive/config/analysislevel_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_all.globalconfig",
        "buildTransitive/config/analysislevel_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_default.globalconfig",
        "buildTransitive/config/analysislevel_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_none.globalconfig",
        "buildTransitive/config/analysislevel_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_recommended_warnaserror.globalconfig",
        "documentation/Analyzer Configuration.md",
        "documentation/Microsoft.CodeAnalysis.Analyzers.md",
        "documentation/Microsoft.CodeAnalysis.Analyzers.sarif",
        "editorconfig/AllRulesDefault/.editorconfig",
        "editorconfig/AllRulesDisabled/.editorconfig",
        "editorconfig/AllRulesEnabled/.editorconfig",
        "editorconfig/CorrectnessRulesDefault/.editorconfig",
        "editorconfig/CorrectnessRulesEnabled/.editorconfig",
        "editorconfig/DataflowRulesDefault/.editorconfig",
        "editorconfig/DataflowRulesEnabled/.editorconfig",
        "editorconfig/LibraryRulesDefault/.editorconfig",
        "editorconfig/LibraryRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCompatibilityRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCompatibilityRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCorrectnessRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCorrectnessRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDesignRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDesignRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDocumentationRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDocumentationRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisLocalizationRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisLocalizationRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisPerformanceRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisPerformanceRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisReleaseTrackingRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisReleaseTrackingRulesEnabled/.editorconfig",
        "editorconfig/PortedFromFxCopRulesDefault/.editorconfig",
        "editorconfig/PortedFromFxCopRulesEnabled/.editorconfig",
        "microsoft.codeanalysis.analyzers.3.3.4.nupkg.sha512",
        "microsoft.codeanalysis.analyzers.nuspec",
        "rulesets/AllRulesDefault.ruleset",
        "rulesets/AllRulesDisabled.ruleset",
        "rulesets/AllRulesEnabled.ruleset",
        "rulesets/CorrectnessRulesDefault.ruleset",
        "rulesets/CorrectnessRulesEnabled.ruleset",
        "rulesets/DataflowRulesDefault.ruleset",
        "rulesets/DataflowRulesEnabled.ruleset",
        "rulesets/LibraryRulesDefault.ruleset",
        "rulesets/LibraryRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisCompatibilityRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisCompatibilityRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisCorrectnessRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisCorrectnessRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisDesignRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisDesignRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisDocumentationRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisDocumentationRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisLocalizationRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisLocalizationRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisPerformanceRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisPerformanceRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisReleaseTrackingRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisReleaseTrackingRulesEnabled.ruleset",
        "rulesets/PortedFromFxCopRulesDefault.ruleset",
        "rulesets/PortedFromFxCopRulesEnabled.ruleset",
        "tools/install.ps1",
        "tools/uninstall.ps1"
      ]
    },
    "Microsoft.CodeAnalysis.Common/4.8.0": {
      "sha512": "/jR+e/9aT+BApoQJABlVCKnnggGQbvGh7BKq2/wI1LamxC+LbzhcLj4Vj7gXCofl1n4E521YfF9w0WcASGg/KA==",
      "type": "package",
      "path": "microsoft.codeanalysis.common/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "microsoft.codeanalysis.common.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.common.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.CSharp/4.8.0": {
      "sha512": "+3+qfdb/aaGD8PZRCrsdobbzGs1m9u119SkkJt8e/mk3xLJz/udLtS2T6nY27OTXxBBw10HzAbC8Z9w08VyP/g==",
      "type": "package",
      "path": "microsoft.codeanalysis.csharp/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "microsoft.codeanalysis.csharp.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.csharp.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
      "sha512": "3amm4tq4Lo8/BGvg9p3BJh3S9nKq2wqCXfS7138i69TUpo/bD+XvD0hNurpEBtcNZhi1FyutiomKJqVF39ugYA==",
      "type": "package",
      "path": "microsoft.codeanalysis.csharp.workspaces/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "microsoft.codeanalysis.csharp.workspaces.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.csharp.workspaces.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
      "sha512": "LXyV+MJKsKRu3FGJA3OmSk40OUIa/dQCFLOnm5X8MNcujx7hzGu8o+zjXlb/cy5xUdZK2UKYb9YaQ2E8m9QehQ==",
      "type": "package",
      "path": "microsoft.codeanalysis.workspaces.common/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "microsoft.codeanalysis.workspaces.common.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.workspaces.common.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
      "sha512": "IEYreI82QZKklp54yPHxZNG9EKSK6nHEkeuf+0Asie9llgS1gp0V1hw7ODG+QyoB7MuAnNQHmeV1Per/ECpv6A==",
      "type": "package",
      "path": "microsoft.codeanalysis.workspaces.msbuild/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.exe",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net472/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.runtimeconfig.json",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.runtimeconfig.json",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "microsoft.codeanalysis.workspaces.msbuild.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.workspaces.msbuild.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore/9.0.3": {
      "sha512": "ji6fWE8bFWTvqaMue49RSCcAeqlec13hAbitTBZyz/RmYsQDhqM9VkWUoXS1x1mjcsyWjc5EQr2XyuAkwp0eNQ==",
      "type": "package",
      "path": "microsoft.entityframeworkcore/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "buildTransitive/net8.0/Microsoft.EntityFrameworkCore.props",
        "lib/net8.0/Microsoft.EntityFrameworkCore.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.xml",
        "microsoft.entityframeworkcore.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
      "sha512": "HQH7HgwTl6IyasW7t6F2+ihuHLDmf9+8XaS41v8VHN5Z7x5ZMQIiHCbwxme4P5ICAjBG6VsWcjMCoh4fHbEwJg==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.xml",
        "microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.abstractions.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {
      "sha512": "M+iOxejD3HqPV8/KE148wIehHA3cmMF+FgnpiN8CFB7DLokVSKQPPrwtHjcrNYJ/BDEssviEPNok/jtQWxj7xA==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "analyzers/dotnet/cs/Microsoft.EntityFrameworkCore.Analyzers.dll",
        "docs/PACKAGE.md",
        "microsoft.entityframeworkcore.analyzers.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.analyzers.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Design/9.0.3": {
      "sha512": "n5ZrAZ4RFELxYjJxN74lzmFlRrtSpYEYZfZcIJIWPGjSigwJsbya2CnOdjSVDPyfx3rKl9rzbd72D2DNHBJWeA==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.design/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "build/net8.0/Microsoft.EntityFrameworkCore.Design.props",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Design.xml",
        "microsoft.entityframeworkcore.design.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.design.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.3": {
      "sha512": "xsS+5TM7M5f3tCSRaSbzouGCoIgD2zokQxBGXvf9z3DusRztWvT1NNT9XJaY2JoK1qEEDcHah8is6azYmpZhIg==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.relational/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.xml",
        "microsoft.entityframeworkcore.relational.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.relational.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Tools/9.0.3": {
      "sha512": "c2kkyHhkop9WAbBWgm64apzPbzMeu0iKsRW3cn5kxSge0SQNxSlkAOtnO4L9dc8YwCAtFFyAZrxVFekxyvxKwQ==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.tools/9.0.3",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "docs/PACKAGE.md",
        "microsoft.entityframeworkcore.tools.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.tools.nuspec",
        "tools/EntityFrameworkCore.PS2.psd1",
        "tools/EntityFrameworkCore.PS2.psm1",
        "tools/EntityFrameworkCore.psd1",
        "tools/EntityFrameworkCore.psm1",
        "tools/about_EntityFrameworkCore.help.txt",
        "tools/init.ps1",
        "tools/net472/any/ef.exe",
        "tools/net472/win-arm64/ef.exe",
        "tools/net472/win-x86/ef.exe",
        "tools/netcoreapp2.0/any/ef.dll",
        "tools/netcoreapp2.0/any/ef.runtimeconfig.json"
      ]
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
      "sha512": "t8b0R6wtqC4o0hJ+oQkLPydw2MMLEoLEpQXCWbzXAm9NBMOngkDZNcvwF6DxbYdL5SlfZJXbYmiOxKZmwHNgNg==",
      "type": "package",
      "path": "microsoft.extensions.caching.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Caching.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Caching.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "microsoft.extensions.caching.abstractions.9.0.3.nupkg.sha512",
        "microsoft.extensions.caching.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Caching.Memory/9.0.3": {
      "sha512": "TXggBGDDd6r+J7FV09plXpzGmWcknVyoDsHlY2qcCbcAhmb0eH7Q9IkfIZl54/zEedVTa9jPgiPFTxH9WuCGMQ==",
      "type": "package",
      "path": "microsoft.extensions.caching.memory/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Caching.Memory.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Caching.Memory.targets",
        "lib/net462/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net462/Microsoft.Extensions.Caching.Memory.xml",
        "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net8.0/Microsoft.Extensions.Caching.Memory.xml",
        "lib/net9.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net9.0/Microsoft.Extensions.Caching.Memory.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.xml",
        "microsoft.extensions.caching.memory.9.0.3.nupkg.sha512",
        "microsoft.extensions.caching.memory.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.3": {
      "sha512": "q5qlbm6GRUrle2ZZxy9aqS/wWoc+mRD3JeP6rcpiJTh5XcemYkplAcJKq8lU11ZfPom5lfbZZfnQvDqcUhqD5Q==",
      "type": "package",
      "path": "microsoft.extensions.configuration.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "microsoft.extensions.configuration.abstractions.9.0.3.nupkg.sha512",
        "microsoft.extensions.configuration.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection/9.0.3": {
      "sha512": "lDbxJpkl6X8KZGpkAxgrrthQ42YeiR0xjPp7KPx+sCPc3ZbpaIbjzd0QQ+9kDdK2RU2DOl3pc6tQyAgEZY3V0A==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
        "microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
      "sha512": "TfaHPSe39NyL2wxkisRxXK7xvHGZYBZ+dy3r+mqGvnxKgAPdHkMu3QMQZI4pquP6W5FIQBqs8FJpWV8ffCgDqQ==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyModel/9.0.3": {
      "sha512": "194P+NOekDXrPHmM2R8678T4bRfZ2isQXDDAsXKE5qI0QLUnXbwB0upljAkyxk+Kkt1DV1tV+9tHOtHEEh3ksw==",
      "type": "package",
      "path": "microsoft.extensions.dependencymodel/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyModel.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyModel.targets",
        "lib/net462/Microsoft.Extensions.DependencyModel.dll",
        "lib/net462/Microsoft.Extensions.DependencyModel.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyModel.xml",
        "microsoft.extensions.dependencymodel.9.0.3.nupkg.sha512",
        "microsoft.extensions.dependencymodel.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Http/6.0.0": {
      "sha512": "15+pa2G0bAMHbHewaQIdr/y6ag2H3yh4rd9hTXavtWDzQBkvpe2RMqFg8BxDpcQWssmjmBApGPcw93QRz6YcMg==",
      "type": "package",
      "path": "microsoft.extensions.http/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net461/Microsoft.Extensions.Http.dll",
        "lib/net461/Microsoft.Extensions.Http.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Http.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Http.xml",
        "microsoft.extensions.http.6.0.0.nupkg.sha512",
        "microsoft.extensions.http.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging/9.0.3": {
      "sha512": "utIi2R1nm+PCWkvWBf1Ou6LWqg9iLfHU23r8yyU9VCvda4dEs7xbTZSwGa5KuwbpzpgCbHCIuKaFHB3zyFmnGw==",
      "type": "package",
      "path": "microsoft.extensions.logging/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.targets",
        "lib/net462/Microsoft.Extensions.Logging.dll",
        "lib/net462/Microsoft.Extensions.Logging.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.xml",
        "microsoft.extensions.logging.9.0.3.nupkg.sha512",
        "microsoft.extensions.logging.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
      "sha512": "H/MBMLt9A/69Ux4OrV7oCKt3DcMT04o5SCqDolulzQA66TLFEpYYb4qedMs/uwrLtyHXGuDGWKZse/oa8W9AZw==",
      "type": "package",
      "path": "microsoft.extensions.logging.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net462/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512",
        "microsoft.extensions.logging.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Options/9.0.3": {
      "sha512": "xE7MpY70lkw1oiid5y6FbL9dVw8oLfkx8RhSNGN8sSzBlCqGn0SyT3Fqc8tZnDaPIq7Z8R9RTKlS564DS+MV3g==",
      "type": "package",
      "path": "microsoft.extensions.options/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Options.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Options.targets",
        "buildTransitive/net462/Microsoft.Extensions.Options.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Options.targets",
        "lib/net462/Microsoft.Extensions.Options.dll",
        "lib/net462/Microsoft.Extensions.Options.xml",
        "lib/net8.0/Microsoft.Extensions.Options.dll",
        "lib/net8.0/Microsoft.Extensions.Options.xml",
        "lib/net9.0/Microsoft.Extensions.Options.dll",
        "lib/net9.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Options.xml",
        "microsoft.extensions.options.9.0.3.nupkg.sha512",
        "microsoft.extensions.options.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Primitives/9.0.3": {
      "sha512": "yCCJHvBcRyqapMSNzP+kTc57Eaavq2cr5Tmuil6/XVnipQf5xmskxakSQ1enU6S4+fNg3sJ27WcInV64q24JsA==",
      "type": "package",
      "path": "microsoft.extensions.primitives/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Primitives.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Primitives.targets",
        "lib/net462/Microsoft.Extensions.Primitives.dll",
        "lib/net462/Microsoft.Extensions.Primitives.xml",
        "lib/net8.0/Microsoft.Extensions.Primitives.dll",
        "lib/net8.0/Microsoft.Extensions.Primitives.xml",
        "lib/net9.0/Microsoft.Extensions.Primitives.dll",
        "lib/net9.0/Microsoft.Extensions.Primitives.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
        "microsoft.extensions.primitives.9.0.3.nupkg.sha512",
        "microsoft.extensions.primitives.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.IdentityModel.Abstractions/8.7.0": {
      "sha512": "OQd5aVepYvh5evOmBMeAYjMIpEcTf1ZCBZaU7Nh/RlhhdXefjFDJeP1L2F2zeNT1unFr+wUu/h3Ac2Xb4BXU6w==",
      "type": "package",
      "path": "microsoft.identitymodel.abstractions/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net462/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net472/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net472/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net6.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net6.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net8.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net9.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net9.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Abstractions.xml",
        "microsoft.identitymodel.abstractions.8.7.0.nupkg.sha512",
        "microsoft.identitymodel.abstractions.nuspec"
      ]
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
      "sha512": "uzsSAWhNhbrkWbQKBTE8QhzviU6sr3bJ1Bkv7gERlhswfSKOp7HsxTRLTPBpx/whQ/GRRHEwMg8leRIPbMrOgw==",
      "type": "package",
      "path": "microsoft.identitymodel.jsonwebtokens/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net462/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net472/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net472/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net6.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net6.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net9.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net9.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "microsoft.identitymodel.jsonwebtokens.8.7.0.nupkg.sha512",
        "microsoft.identitymodel.jsonwebtokens.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Logging/8.7.0": {
      "sha512": "Bs0TznPAu+nxa9rAVHJ+j3CYECHJkT3tG8AyBfhFYlT5ldsDhoxFT7J+PKxJHLf+ayqWfvDZHHc4639W2FQCxA==",
      "type": "package",
      "path": "microsoft.identitymodel.logging/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Logging.dll",
        "lib/net462/Microsoft.IdentityModel.Logging.xml",
        "lib/net472/Microsoft.IdentityModel.Logging.dll",
        "lib/net472/Microsoft.IdentityModel.Logging.xml",
        "lib/net6.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net6.0/Microsoft.IdentityModel.Logging.xml",
        "lib/net8.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net8.0/Microsoft.IdentityModel.Logging.xml",
        "lib/net9.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net9.0/Microsoft.IdentityModel.Logging.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Logging.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Logging.xml",
        "microsoft.identitymodel.logging.8.7.0.nupkg.sha512",
        "microsoft.identitymodel.logging.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "sha512": "SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "type": "package",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net461/Microsoft.IdentityModel.Protocols.dll",
        "lib/net461/Microsoft.IdentityModel.Protocols.xml",
        "lib/net462/Microsoft.IdentityModel.Protocols.dll",
        "lib/net462/Microsoft.IdentityModel.Protocols.xml",
        "lib/net472/Microsoft.IdentityModel.Protocols.dll",
        "lib/net472/Microsoft.IdentityModel.Protocols.xml",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.xml",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.xml",
        "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512",
        "microsoft.identitymodel.protocols.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "sha512": "6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "type": "package",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net461/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net461/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net462/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net462/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net472/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net472/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512",
        "microsoft.identitymodel.protocols.openidconnect.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Tokens/8.7.0": {
      "sha512": "5Z6voXjRXAnGklhmZd1mKz89UhcF5ZQQZaZc2iKrOuL4Li1UihG2vlJx8IbiFAOIxy/xdbsAm0A+WZEaH5fxng==",
      "type": "package",
      "path": "microsoft.identitymodel.tokens/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Tokens.dll",
        "lib/net462/Microsoft.IdentityModel.Tokens.xml",
        "lib/net472/Microsoft.IdentityModel.Tokens.dll",
        "lib/net472/Microsoft.IdentityModel.Tokens.xml",
        "lib/net6.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net6.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/net8.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net8.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/net9.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net9.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Tokens.xml",
        "microsoft.identitymodel.tokens.8.7.0.nupkg.sha512",
        "microsoft.identitymodel.tokens.nuspec"
      ]
    },
    "Mono.TextTemplating/3.0.0": {
      "sha512": "YqueG52R/Xej4VVbKuRIodjiAhV0HR/XVbLbNrJhCZnzjnSjgMJ/dCdV0akQQxavX6hp/LC6rqLGLcXeQYU7XA==",
      "type": "package",
      "path": "mono.texttemplating/3.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt/LICENSE",
        "buildTransitive/Mono.TextTemplating.targets",
        "lib/net472/Mono.TextTemplating.dll",
        "lib/net6.0/Mono.TextTemplating.dll",
        "lib/netstandard2.0/Mono.TextTemplating.dll",
        "mono.texttemplating.3.0.0.nupkg.sha512",
        "mono.texttemplating.nuspec",
        "readme.md"
      ]
    },
    "Npgsql/9.0.3": {
      "sha512": "tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "type": "package",
      "path": "npgsql/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net6.0/Npgsql.dll",
        "lib/net6.0/Npgsql.xml",
        "lib/net8.0/Npgsql.dll",
        "lib/net8.0/Npgsql.xml",
        "npgsql.9.0.3.nupkg.sha512",
        "npgsql.nuspec",
        "postgresql.png"
      ]
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "sha512": "mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "type": "package",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll",
        "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.xml",
        "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512",
        "npgsql.entityframeworkcore.postgresql.nuspec",
        "postgresql.png"
      ]
    },
    "System.CodeDom/6.0.0": {
      "sha512": "CPc6tWO1LAer3IzfZufDBRL+UZQcj5uS207NHALQzP84Vp/z6wF0Aa0YZImOQY8iStY0A2zI/e3ihKNPfUm8XA==",
      "type": "package",
      "path": "system.codedom/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.CodeDom.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.CodeDom.dll",
        "lib/net461/System.CodeDom.xml",
        "lib/net6.0/System.CodeDom.dll",
        "lib/net6.0/System.CodeDom.xml",
        "lib/netstandard2.0/System.CodeDom.dll",
        "lib/netstandard2.0/System.CodeDom.xml",
        "system.codedom.6.0.0.nupkg.sha512",
        "system.codedom.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Collections.Immutable/7.0.0": {
      "sha512": "dQPcs0U1IKnBdRDBkrCTi1FoajSTBzLcVTpjO4MBCMC7f4pDOIPzgBoX8JjG7X6uZRJ8EBxsi8+DR1JuwjnzOQ==",
      "type": "package",
      "path": "system.collections.immutable/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "README.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Collections.Immutable.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Collections.Immutable.targets",
        "lib/net462/System.Collections.Immutable.dll",
        "lib/net462/System.Collections.Immutable.xml",
        "lib/net6.0/System.Collections.Immutable.dll",
        "lib/net6.0/System.Collections.Immutable.xml",
        "lib/net7.0/System.Collections.Immutable.dll",
        "lib/net7.0/System.Collections.Immutable.xml",
        "lib/netstandard2.0/System.Collections.Immutable.dll",
        "lib/netstandard2.0/System.Collections.Immutable.xml",
        "system.collections.immutable.7.0.0.nupkg.sha512",
        "system.collections.immutable.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition/7.0.0": {
      "sha512": "tRwgcAkDd85O8Aq6zHDANzQaq380cek9lbMg5Qma46u5BZXq/G+XvIYmu+UI+BIIZ9zssXLYrkTykEqxxvhcmg==",
      "type": "package",
      "path": "system.composition/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.targets",
        "lib/net461/_._",
        "lib/netcoreapp2.0/_._",
        "lib/netstandard2.0/_._",
        "system.composition.7.0.0.nupkg.sha512",
        "system.composition.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.AttributedModel/7.0.0": {
      "sha512": "2QzClqjElKxgI1jK1Jztnq44/8DmSuTSGGahXqQ4TdEV0h9s2KikQZIgcEqVzR7OuWDFPGLHIprBJGQEPr8fAQ==",
      "type": "package",
      "path": "system.composition.attributedmodel/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.AttributedModel.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.AttributedModel.targets",
        "lib/net462/System.Composition.AttributedModel.dll",
        "lib/net462/System.Composition.AttributedModel.xml",
        "lib/net6.0/System.Composition.AttributedModel.dll",
        "lib/net6.0/System.Composition.AttributedModel.xml",
        "lib/net7.0/System.Composition.AttributedModel.dll",
        "lib/net7.0/System.Composition.AttributedModel.xml",
        "lib/netstandard2.0/System.Composition.AttributedModel.dll",
        "lib/netstandard2.0/System.Composition.AttributedModel.xml",
        "system.composition.attributedmodel.7.0.0.nupkg.sha512",
        "system.composition.attributedmodel.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Convention/7.0.0": {
      "sha512": "IMhTlpCs4HmlD8B+J8/kWfwX7vrBBOs6xyjSTzBlYSs7W4OET4tlkR/Sg9NG8jkdJH9Mymq0qGdYS1VPqRTBnQ==",
      "type": "package",
      "path": "system.composition.convention/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Convention.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Convention.targets",
        "lib/net462/System.Composition.Convention.dll",
        "lib/net462/System.Composition.Convention.xml",
        "lib/net6.0/System.Composition.Convention.dll",
        "lib/net6.0/System.Composition.Convention.xml",
        "lib/net7.0/System.Composition.Convention.dll",
        "lib/net7.0/System.Composition.Convention.xml",
        "lib/netstandard2.0/System.Composition.Convention.dll",
        "lib/netstandard2.0/System.Composition.Convention.xml",
        "system.composition.convention.7.0.0.nupkg.sha512",
        "system.composition.convention.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Hosting/7.0.0": {
      "sha512": "eB6gwN9S+54jCTBJ5bpwMOVerKeUfGGTYCzz3QgDr1P55Gg/Wb27ShfPIhLMjmZ3MoAKu8uUSv6fcCdYJTN7Bg==",
      "type": "package",
      "path": "system.composition.hosting/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Hosting.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Hosting.targets",
        "lib/net462/System.Composition.Hosting.dll",
        "lib/net462/System.Composition.Hosting.xml",
        "lib/net6.0/System.Composition.Hosting.dll",
        "lib/net6.0/System.Composition.Hosting.xml",
        "lib/net7.0/System.Composition.Hosting.dll",
        "lib/net7.0/System.Composition.Hosting.xml",
        "lib/netstandard2.0/System.Composition.Hosting.dll",
        "lib/netstandard2.0/System.Composition.Hosting.xml",
        "system.composition.hosting.7.0.0.nupkg.sha512",
        "system.composition.hosting.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Runtime/7.0.0": {
      "sha512": "aZJ1Zr5Txe925rbo4742XifEyW0MIni1eiUebmcrP3HwLXZ3IbXUj4MFMUH/RmnJOAQiS401leg/2Sz1MkApDw==",
      "type": "package",
      "path": "system.composition.runtime/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Runtime.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Runtime.targets",
        "lib/net462/System.Composition.Runtime.dll",
        "lib/net462/System.Composition.Runtime.xml",
        "lib/net6.0/System.Composition.Runtime.dll",
        "lib/net6.0/System.Composition.Runtime.xml",
        "lib/net7.0/System.Composition.Runtime.dll",
        "lib/net7.0/System.Composition.Runtime.xml",
        "lib/netstandard2.0/System.Composition.Runtime.dll",
        "lib/netstandard2.0/System.Composition.Runtime.xml",
        "system.composition.runtime.7.0.0.nupkg.sha512",
        "system.composition.runtime.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.TypedParts/7.0.0": {
      "sha512": "ZK0KNPfbtxVceTwh+oHNGUOYV2WNOHReX2AXipuvkURC7s/jPwoWfsu3SnDBDgofqbiWr96geofdQ2erm/KTHg==",
      "type": "package",
      "path": "system.composition.typedparts/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.TypedParts.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.TypedParts.targets",
        "lib/net462/System.Composition.TypedParts.dll",
        "lib/net462/System.Composition.TypedParts.xml",
        "lib/net6.0/System.Composition.TypedParts.dll",
        "lib/net6.0/System.Composition.TypedParts.xml",
        "lib/net7.0/System.Composition.TypedParts.dll",
        "lib/net7.0/System.Composition.TypedParts.xml",
        "lib/netstandard2.0/System.Composition.TypedParts.dll",
        "lib/netstandard2.0/System.Composition.TypedParts.xml",
        "system.composition.typedparts.7.0.0.nupkg.sha512",
        "system.composition.typedparts.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Diagnostics.DiagnosticSource/9.0.3": {
      "sha512": "cBA+28xDW33tSiGht/H8xvr8lnaCrgJ7EdO348AfSGsX4PPJUOULKxny/cc9DVNGExaCrtqagsnm5M2mkWIZ+g==",
      "type": "package",
      "path": "system.diagnostics.diagnosticsource/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Diagnostics.DiagnosticSource.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.DiagnosticSource.targets",
        "content/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "contentFiles/any/net462/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "contentFiles/any/net8.0/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "contentFiles/any/net9.0/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "contentFiles/any/netstandard2.0/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "lib/net462/System.Diagnostics.DiagnosticSource.dll",
        "lib/net462/System.Diagnostics.DiagnosticSource.xml",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.xml",
        "system.diagnostics.diagnosticsource.9.0.3.nupkg.sha512",
        "system.diagnostics.diagnosticsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.IdentityModel.Tokens.Jwt/8.7.0": {
      "sha512": "8dKL3A9pVqYCJIXHd4H2epQqLxSvKeNxGonR0e5g89yMchyvsM/NLuB06otx29BicUd6+LUJZgNZmvYjjPsPGg==",
      "type": "package",
      "path": "system.identitymodel.tokens.jwt/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net462/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net472/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net472/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net6.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net6.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net8.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net9.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net9.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/netstandard2.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/netstandard2.0/System.IdentityModel.Tokens.Jwt.xml",
        "system.identitymodel.tokens.jwt.8.7.0.nupkg.sha512",
        "system.identitymodel.tokens.jwt.nuspec"
      ]
    },
    "System.IO.Pipelines/9.0.3": {
      "sha512": "aP1Qh9llcEmo0qN+VKvVDHFMe5Cqpfb1VjhBO7rjmxCXtLs3IfVSOiNqqLBZ/4Qbcr4J0SDdJq9S7EKAGpnwEA==",
      "type": "package",
      "path": "system.io.pipelines/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.IO.Pipelines.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.IO.Pipelines.targets",
        "lib/net462/System.IO.Pipelines.dll",
        "lib/net462/System.IO.Pipelines.xml",
        "lib/net8.0/System.IO.Pipelines.dll",
        "lib/net8.0/System.IO.Pipelines.xml",
        "lib/net9.0/System.IO.Pipelines.dll",
        "lib/net9.0/System.IO.Pipelines.xml",
        "lib/netstandard2.0/System.IO.Pipelines.dll",
        "lib/netstandard2.0/System.IO.Pipelines.xml",
        "system.io.pipelines.9.0.3.nupkg.sha512",
        "system.io.pipelines.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Reflection.Metadata/7.0.0": {
      "sha512": "MclTG61lsD9sYdpNz9xsKBzjsmsfCtcMZYXz/IUr2zlhaTaABonlr1ESeompTgM+Xk+IwtGYU7/voh3YWB/fWw==",
      "type": "package",
      "path": "system.reflection.metadata/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "README.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Reflection.Metadata.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Reflection.Metadata.targets",
        "lib/net462/System.Reflection.Metadata.dll",
        "lib/net462/System.Reflection.Metadata.xml",
        "lib/net6.0/System.Reflection.Metadata.dll",
        "lib/net6.0/System.Reflection.Metadata.xml",
        "lib/net7.0/System.Reflection.Metadata.dll",
        "lib/net7.0/System.Reflection.Metadata.xml",
        "lib/netstandard2.0/System.Reflection.Metadata.dll",
        "lib/netstandard2.0/System.Reflection.Metadata.xml",
        "system.reflection.metadata.7.0.0.nupkg.sha512",
        "system.reflection.metadata.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "sha512": "/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "type": "package",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
        "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512",
        "system.runtime.compilerservices.unsafe.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Encodings.Web/9.0.3": {
      "sha512": "5L+iI4fBMtGwt4FHLQh40/rgdbxnw6lHaLkR3gbaHG97TohzUv+z/oP03drsTR1lKCLhOkp40cFnHYOQLtpT5A==",
      "type": "package",
      "path": "system.text.encodings.web/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Text.Encodings.Web.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Text.Encodings.Web.targets",
        "lib/net462/System.Text.Encodings.Web.dll",
        "lib/net462/System.Text.Encodings.Web.xml",
        "lib/net8.0/System.Text.Encodings.Web.dll",
        "lib/net8.0/System.Text.Encodings.Web.xml",
        "lib/net9.0/System.Text.Encodings.Web.dll",
        "lib/net9.0/System.Text.Encodings.Web.xml",
        "lib/netstandard2.0/System.Text.Encodings.Web.dll",
        "lib/netstandard2.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net9.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net9.0/System.Text.Encodings.Web.xml",
        "system.text.encodings.web.9.0.3.nupkg.sha512",
        "system.text.encodings.web.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Json/9.0.3": {
      "sha512": "r2JRkLjsYrq5Dpo7+y3Wa73OfirZPdVhxiTJWwZ+oJM7FOAe0LkM3GlH+pgkNRdd1G1kwUbmRCdmh4uoaWwu1g==",
      "type": "package",
      "path": "system.text.json/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "buildTransitive/net461/System.Text.Json.targets",
        "buildTransitive/net462/System.Text.Json.targets",
        "buildTransitive/net8.0/System.Text.Json.targets",
        "buildTransitive/netcoreapp2.0/System.Text.Json.targets",
        "buildTransitive/netstandard2.0/System.Text.Json.targets",
        "lib/net462/System.Text.Json.dll",
        "lib/net462/System.Text.Json.xml",
        "lib/net8.0/System.Text.Json.dll",
        "lib/net8.0/System.Text.Json.xml",
        "lib/net9.0/System.Text.Json.dll",
        "lib/net9.0/System.Text.Json.xml",
        "lib/netstandard2.0/System.Text.Json.dll",
        "lib/netstandard2.0/System.Text.Json.xml",
        "system.text.json.9.0.3.nupkg.sha512",
        "system.text.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Threading.Channels/7.0.0": {
      "sha512": "qmeeYNROMsONF6ndEZcIQ+VxR4Q/TX/7uIVLJqtwIWL7dDWeh0l1UIqgo4wYyjG//5lUNhwkLDSFl+pAWO6oiA==",
      "type": "package",
      "path": "system.threading.channels/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Threading.Channels.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Threading.Channels.targets",
        "lib/net462/System.Threading.Channels.dll",
        "lib/net462/System.Threading.Channels.xml",
        "lib/net6.0/System.Threading.Channels.dll",
        "lib/net6.0/System.Threading.Channels.xml",
        "lib/net7.0/System.Threading.Channels.dll",
        "lib/net7.0/System.Threading.Channels.xml",
        "lib/netstandard2.0/System.Threading.Channels.dll",
        "lib/netstandard2.0/System.Threading.Channels.xml",
        "lib/netstandard2.1/System.Threading.Channels.dll",
        "lib/netstandard2.1/System.Threading.Channels.xml",
        "system.threading.channels.7.0.0.nupkg.sha512",
        "system.threading.channels.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "RequestManagement.Common/1.0.0": {
      "type": "project",
      "path": "../RequestManagement.Common/RequestManagement.Common.csproj",
      "msbuildProject": "../RequestManagement.Common/RequestManagement.Common.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net8.0": [
      "BCrypt.Net-Next >= 4.0.3",
      "Google.Protobuf >= 3.30.2",
      "Grpc.AspNetCore >= 2.70.0",
      "Grpc.Tools >= 2.71.0",
      "Microsoft.AspNetCore.Authentication.JwtBearer >= 8.0.14",
      "Microsoft.EntityFrameworkCore >= 9.0.3",
      "Microsoft.EntityFrameworkCore.Tools >= 9.0.3",
      "Npgsql.EntityFrameworkCore.PostgreSQL >= 9.0.4",
      "RequestManagement.Common >= 1.0.0",
      "System.IdentityModel.Tokens.Jwt >= 8.7.0"
    ]
  },
  "packageFolders": {
    "C:\\Users\\Thron\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {},
    "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
      "projectName": "RequestManagement.Server",
      "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
      "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
        "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
      ],
      "configFilePaths": [
        "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net8.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "C:\\Program Files\\dotnet\\library-packs": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "projectReferences": {
            "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
              "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      }
    },
    "frameworks": {
      "net8.0": {
        "targetAlias": "net8.0",
        "dependencies": {
          "BCrypt.Net-Next": {
            "target": "Package",
            "version": "[4.0.3, )"
          },
          "Google.Protobuf": {
            "target": "Package",
            "version": "[3.30.2, )"
          },
          "Grpc.AspNetCore": {
            "target": "Package",
            "version": "[2.70.0, )"
          },
          "Grpc.Tools": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[2.71.0, )"
          },
          "Microsoft.AspNetCore.Authentication.JwtBearer": {
            "target": "Package",
            "version": "[8.0.14, )"
          },
          "Microsoft.EntityFrameworkCore": {
            "target": "Package",
            "version": "[9.0.3, )"
          },
          "Microsoft.EntityFrameworkCore.Tools": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[9.0.3, )"
          },
          "Npgsql.EntityFrameworkCore.PostgreSQL": {
            "target": "Package",
            "version": "[9.0.4, )"
          },
          "System.IdentityModel.Tokens.Jwt": {
            "target": "Package",
            "version": "[8.7.0, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.AspNetCore.App": {
            "privateAssets": "none"
          },
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}

//RequestManagement.Server.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//launchSettings.json
{
  "$schema": "http://json.schemastore.org/launchsettings.json",
  "profiles": {
    "http": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": false,
      "applicationUrl": "http://localhost:5001",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "https": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": false,
      "applicationUrl": "https://localhost:7245;http://localhost:5154",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}


//auth.proto
syntax = "proto3";

option csharp_namespace = "RequestManagement.Server.Controllers";

package auth;

// Сервис аутентификации
service AuthService {
    rpc Authenticate (AuthenticateRequest) returns (AuthenticateResponse);
    rpc Authorize (AuthorizeRequest) returns (AuthorizeResponse);
}

// Сообщения для запросов и ответов

// Запрос на аутентификацию
message AuthenticateRequest {
    string login = 1;         // Логин пользователя
    string password = 2;      // Пароль пользователя
}

// Ответ на аутентификацию
message AuthenticateResponse {
    int32 user_id = 1;        // ID пользователя (0, если аутентификация не удалась)
    string login = 2;         // Логин пользователя
    int32 role = 3;           // Роль пользователя (enum UserRole)
    string token = 4;         // JWT-токен для дальнейших запросов
}

// Запрос на проверку прав доступа
message AuthorizeRequest {
    int32 user_id = 1;        // ID пользователя
    int32 required_role = 2;  // Требуемая роль (enum UserRole)
}

// Ответ на проверку прав доступа
message AuthorizeResponse {
    bool is_authorized = 1;   // Признак наличия прав
}

//request.proto
syntax = "proto3";

option csharp_namespace = "RequestManagement.Server.Controllers";

service RequestService {
    rpc GetAllEquipment (GetAllEquipmentRequest) returns (GetAllEquipmentResponse);
    rpc CreateEquipment (CreateEquipmentRequest) returns (CreateEquipmentResponse);
    rpc UpdateEquipment (UpdateEquipmentRequest) returns (UpdateEquipmentResponse);
    rpc DeleteEquipment (DeleteEquipmentRequest) returns (DeleteEquipmentResponse);

    rpc GetAllDrivers (GetAllDriversRequest) returns (GetAllDriversResponse);
    rpc CreateDriver (CreateDriverRequest) returns (CreateDriverResponse);
    rpc UpdateDriver (UpdateDriverRequest) returns (UpdateDriverResponse);
    rpc DeleteDriver (DeleteDriverRequest) returns (DeleteDriverResponse);

    rpc GetAllDefectGroups (GetAllDefectGroupsRequest) returns (GetAllDefectGroupsResponse);
    rpc CreateDefectGroup (CreateDefectGroupRequest) returns (CreateDefectGroupResponse);
    rpc UpdateDefectGroup (UpdateDefectGroupRequest) returns (UpdateDefectGroupResponse);
    rpc DeleteDefectGroup (DeleteDefectGroupRequest) returns (DeleteDefectGroupResponse);

    rpc GetAllDefects (GetAllDefectsRequest) returns (GetAllDefectsResponse);
    rpc CreateDefect(CreateDefectRequest) returns (CreateDefectResponse);
    rpc UpdateDefect (UpdateDefectRequest) returns (UpdateDefectResponse);
    rpc DeleteDefect (DeleteDefectRequest) returns (DeleteDefectResponse);

    rpc GetAllWarehouses (GetAllWarehousesRequest) returns (GetAllWarehousesResponse);
    rpc CreateWarehouse(CreateWarehouseRequest) returns (CreateWarehouseResponse);
    rpc UpdateWarehouse (UpdateWarehouseRequest) returns (UpdateWarehouseResponse);
    rpc DeleteWarehouse (DeleteWarehouseRequest) returns (DeleteWarehouseResponse);

    rpc GetAllNomenclatures (GetAllNomenclaturesRequest) returns (GetAllNomenclaturesResponse);
    rpc CreateNomenclature(CreateNomenclatureRequest) returns (CreateNomenclatureResponse);
    rpc UpdateNomenclature (UpdateNomenclatureRequest) returns (UpdateNomenclatureResponse);
    rpc DeleteNomenclature (DeleteNomenclatureRequest) returns (DeleteNomenclatureResponse);
}

// Сообщения для оборудования
message GetAllEquipmentRequest {
    string filter = 1;
}

message GetAllEquipmentResponse {
    repeated Equipment equipment = 1;
}

message CreateEquipmentRequest {
    string name = 1;
    string license_plate = 2;
}

message CreateEquipmentResponse {
    int32 id = 1;
}

message UpdateEquipmentRequest {
    int32 id = 1;
    string name = 2;
    string license_plate = 3;
}

message UpdateEquipmentResponse {
    bool success = 1;
}

message DeleteEquipmentRequest {
    int32 id = 1;
}

message DeleteEquipmentResponse {
    bool success = 1;
}

message Equipment {
    int32 id = 1;
    string name = 2;
    string license_plate = 3;
}

message GetAllDriversRequest {
    string filter = 1; // Фильтр для поиска по имени или должности
}

message GetAllDriversResponse {
    repeated Driver drivers = 1;
}

message CreateDriverRequest {
    Driver driver = 1;
}

message CreateDriverResponse {
    int32 id = 1; // ID созданного водителя
}

message UpdateDriverRequest {
    Driver driver = 1;
}

message UpdateDriverResponse {
    bool success = 1;
}

message DeleteDriverRequest {
    int32 id = 1;
}

message DeleteDriverResponse {
    bool success = 1;
}

message Driver {
    int32 id = 1;
    string full_name = 2;   // Полное ФИО
    string short_name = 3;  // Фамилия с инициалами
    string position = 4;    // Должность
}

message GetAllDefectGroupsRequest {
    string filter = 1;
}

message GetAllDefectGroupsResponse {
    repeated DefectGroup defectGroup = 1;
}

message CreateDefectGroupRequest {
    DefectGroup defectGroup = 1;
}

message CreateDefectGroupResponse {
    int32 id = 1;
}

message UpdateDefectGroupRequest {
    DefectGroup defectGroup = 1;
}

message UpdateDefectGroupResponse {
    bool success = 1;
}

message DeleteDefectGroupRequest {
    int32 id = 1;
}

message DeleteDefectGroupResponse {
    bool success = 1;
}

message DefectGroup {
    int32 id = 1;
    string name = 2;   
}

message GetAllDefectsRequest {
    string filter = 1;
}

message GetAllDefectsResponse {
    repeated Defect defect = 1;
}

message CreateDefectRequest {
    Defect defect = 1;
}

message CreateDefectResponse {
    int32 id = 1;
}

message UpdateDefectRequest {
    Defect defect = 1;
}

message UpdateDefectResponse {
    bool success = 1;
}

message DeleteDefectRequest {
    int32 id = 1;
}

message DeleteDefectResponse {
    bool success = 1;
}

message Defect {
    int32 id = 1;
    string name = 2;
    int32 defectGroupId = 3;
}

message GetAllWarehousesRequest {
    string filter = 1;
}

message GetAllWarehousesResponse {
    repeated Warehouse warehouse = 1;
}

message CreateWarehouseRequest {
    Warehouse warehouse = 1;
}

message CreateWarehouseResponse {
    int32 id = 1;
}

message UpdateWarehouseRequest {
    Warehouse warehouse = 1;
}

message UpdateWarehouseResponse {
    bool success = 1;
}

message DeleteWarehouseRequest {
    int32 id = 1;
}

message DeleteWarehouseResponse {
    bool success = 1;
}

message Warehouse {
    int32 id = 1;
    string name = 2;
}

message GetAllNomenclaturesRequest {
    string filter = 1;
}

message GetAllNomenclaturesResponse {
    repeated Nomenclature nomenclature = 1;
}

message CreateNomenclatureRequest {
    Nomenclature nomenclature = 1;
}

message CreateNomenclatureResponse {
    int32 id = 1;
}

message UpdateNomenclatureRequest {
    Nomenclature nomenclature = 1;
}

message UpdateNomenclatureResponse {
    bool success = 1;
}

message DeleteNomenclatureRequest {
    int32 id = 1;
}

message DeleteNomenclatureResponse {
    bool success = 1;
}

message Nomenclature {
    int32 id = 1;
    string code = 2;
    string name = 3;
    string article = 4;
    string unitOfMeasure = 5;
}

//stock.proto
syntax = "proto3";

option csharp_namespace = "RequestManagement.Server.Controllers";

service StockService {
    rpc GetAllStock (GetAllStocksRequest) returns (GetAllStocksResponse);
    rpc CreateStock (CreateStockRequest) returns (CreateStockResponse);
    rpc UpdateStock (UpdateStockRequest) returns (UpdateStockResponse);
    rpc DeleteStock (DeleteStockRequest) returns (DeleteStockResponse);
}

message GetAllStocksRequest {
    int32 warehouseId = 1;
    string filter = 2;
    int32 initialQuantityFilterType = 3;
    double initialQuantity = 4;
    int32 receivedQuantityFilterType = 5;
    double receivedQuantity = 6;
    int32 consumedQuantityFilterType = 7;
    double consumedQuantity = 8;
    int32 finalQuantityFilterType = 9;
    double finalQuantity = 10;
}

message GetAllStocksResponse {
    repeated Stock stocks = 1;
}

message CreateStockRequest {
    int32 warehouse_id = 1;
    int32 nomenclature_id = 2;
    double initial_quantity = 3;
}

message CreateStockResponse {
    int32 id = 1;
}

message UpdateStockRequest {
    int32 id = 1;
    int32 nomenclature_id = 3;
    double initial_quantity = 4;
}

message UpdateStockResponse {
    bool success = 1;
}

message DeleteStockRequest {
    int32 id = 1;
}

message DeleteStockResponse {
    bool success = 1;
}

message Stock {
    int32 id = 1;
    int32 warehouse_id = 2;
    int32 nomenclature_id = 3;
    double initial_quantity = 4;
    double received_quantity = 5;
    double consumed_quantity = 6;
    StockNomenclature nomenclature = 7;
}

message StockNomenclature {
    string code = 2;
    string name = 3;
    string article = 4;
    string unitOfMeasure = 5;
}

//AuthService.cs
using RequestManagement.Common.Interfaces;
using RequestManagement.Common.Models;
using System;
using System.Threading.Tasks;
using BCrypt.Net;
using RequestManagement.Common.Models.Enums;

namespace RequestManagement.Server.Services
{
    /// <summary>
    /// Сервис авторизации
    /// </summary>
    public class AuthService : IAuthService
    {
        private readonly IUserService _userService;

        public AuthService(IUserService userService)
        {
            _userService = userService ?? throw new ArgumentNullException(nameof(userService));
        }

        /// <summary>
        /// Аутентифицирует пользователя по логину и паролю
        /// </summary>
        public async Task<User> AuthenticateAsync(string login, string password)
        {
            if (string.IsNullOrWhiteSpace(login))
                throw new ArgumentException("Login cannot be null or empty", nameof(login));
            if (string.IsNullOrWhiteSpace(password))
                throw new ArgumentException("Password cannot be null or empty", nameof(password));
            var tmp_pass = BCrypt.Net.BCrypt.HashPassword(password);
            Console.WriteLine(tmp_pass);
            var user = await _userService.GetUserByLoginAsync(login);
            if (user == null || !BCrypt.Net.BCrypt.Verify(password, user.Password))
                return null;

            return user;
        }

        /// <summary>
        /// Проверяет, имеет ли пользователь права на выполнение действия
        /// </summary>
        public async Task<bool> AuthorizeAsync(int userId, UserRole requiredRole)
        {
            return await _userService.HasRoleAsync(userId, requiredRole);
        }
    }
}

//RequestService.cs


using Microsoft.EntityFrameworkCore;
using RequestManagement.Common.Interfaces;
using RequestManagement.Common.Models;
using RequestManagement.Server.Data;

namespace RequestManagement.Server.Services
{
    public class RequestService(ApplicationDbContext dbContext) : IRequestService
    {
        private readonly ApplicationDbContext _dbContext = dbContext ?? throw new ArgumentNullException(nameof(dbContext));

        public async Task<int> CreateEquipmentAsync(Equipment equipment)
        {
            _dbContext.Equipments.Add(equipment);
            await _dbContext.SaveChangesAsync();
            return equipment.Id;
        }

        public async Task<bool> UpdateEquipmentAsync(Equipment equipment)
        {
            var existingEquipment = await _dbContext.Equipments
                .FirstOrDefaultAsync(e => e.Id == equipment.Id);

            if (existingEquipment == null)
                return false;

            existingEquipment.Name = equipment.Name;
            existingEquipment.StateNumber = equipment.StateNumber;

            await _dbContext.SaveChangesAsync();
            return true;
        }

        public async Task<bool> DeleteEquipmentAsync(int id)
        {
            try
            {
                var equipment = await _dbContext.Equipments
                .FirstOrDefaultAsync(e => e.Id == id);

                if (equipment == null)
                    return false;

                _dbContext.Equipments.Remove(equipment);
                await _dbContext.SaveChangesAsync();
                return true;
            }
            catch
            {
                return false;
            }
        }

        public async Task<List<Equipment>> GetAllEquipmentAsync(string filter = "")
        {
            var query = _dbContext.Equipments.AsQueryable();
            if (!string.IsNullOrWhiteSpace(filter))
            {
                var phrases = filter.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                query = phrases.Aggregate(query, (current, phrase) => current.Where(e => e.Name.ToLower().Contains(phrase) || e.StateNumber!.ToLower().Contains(phrase)));
            }
            return await query
                .Select(e => new Equipment
                {
                    Id = e.Id,
                    Name = e.Name,
                    StateNumber = e.StateNumber ?? ""
                })
                .ToListAsync();
        }

        public async Task<List<Driver>> GetAllDriversAsync(string filter = "")
        {
            var query = _dbContext.Drivers.AsQueryable();
            if (!string.IsNullOrWhiteSpace(filter))
            {
                var phrases = filter.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                query = phrases.Aggregate(query, (current, phrase) => current.Where(e => e.FullName.ToLower().Contains(phrase) || e.Position.ToLower().Contains(phrase)));
            }
            return await query
                .Select(e => new Driver
                {
                    Id = e.Id,
                    FullName = e.FullName,
                    ShortName = e.ShortName,
                    Position = e.Position
                })
                .ToListAsync();
        }

        public async Task<int> CreateDriverAsync(Driver driver)
        {
            _dbContext.Drivers.Add(driver);
            await _dbContext.SaveChangesAsync();
            return driver.Id;
        }

        public async Task<bool> UpdateDriverAsync(Driver driver)
        {
            var existDriver = await _dbContext.Drivers
                .FirstOrDefaultAsync(e => e.Id == driver.Id);

            if (existDriver == null)
                return false;

            existDriver.FullName = driver.FullName;
            existDriver.ShortName = driver.ShortName;
            existDriver.Position = driver.Position;

            await _dbContext.SaveChangesAsync();
            return true;
        }

        public async Task<bool> DeleteDriverAsync(int id)
        {
            try
            {
                var driver = await _dbContext.Drivers
                    .FirstOrDefaultAsync(e => e.Id == id);

                if (driver == null)
                    return false;

                _dbContext.Drivers.Remove(driver);
                await _dbContext.SaveChangesAsync();
                return true;
            }
            catch
            {
                return false;
            }
        }

        public async Task<List<DefectGroup>> GetAllDefectGroupsAsync(string filter = "")
        {
            var query = _dbContext.DefectGroups.AsQueryable();
            if (!string.IsNullOrWhiteSpace(filter))
            {
                var phrases = filter.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                query = phrases.Aggregate(query, (current, phrase) => current.Where(e => e.Name.ToLower().Contains(phrase)));
            }
            return await query
                .Select(e => new DefectGroup
                {
                    Id = e.Id,
                    Name = e.Name,
                })
                .ToListAsync();
        }
        public async Task<int> CreateDefectGroupAsync(DefectGroup defectGroup)
        {
            _dbContext.DefectGroups.Add(defectGroup);
            await _dbContext.SaveChangesAsync();
            return defectGroup.Id;
        }
        public async Task<bool> UpdateDefectGroupAsync(DefectGroup defectGroup)
        {
            var existDefectGroup = await _dbContext.DefectGroups
                .FirstOrDefaultAsync(e => e.Id == defectGroup.Id);

            if (existDefectGroup == null)
                return false;

            existDefectGroup.Name = defectGroup.Name;
            await _dbContext.SaveChangesAsync();
            return true;
        }
        public async Task<bool> DeleteDefectGroupAsync(int id)
        {
            try
            {
                var defectGroup = await _dbContext.DefectGroups
                    .FirstOrDefaultAsync(e => e.Id == id);

                if (defectGroup == null)
                    return false;

                _dbContext.DefectGroups.Remove(defectGroup);
                await _dbContext.SaveChangesAsync();
                return true;
            }
            catch
            {
                return false;
            }
        }

        public async Task<List<Defect>> GetAllDefectsAsync(string filter = "")
        {
            var query = _dbContext.Defects.AsQueryable();
            if (!string.IsNullOrWhiteSpace(filter))
            {
                var phrases = filter.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                query = phrases.Aggregate(query, (current, phrase) => current.Where(e => e.Name.ToLower().Contains(phrase) || e.DefectGroup.Name.ToLower().Contains(phrase)));
            }
            return await query
                .Select(e => new Defect
                {
                    Id = e.Id,
                    Name = e.Name,
                    DefectGroupId = e.DefectGroupId
                })
                .ToListAsync();
        }

        public async Task<int> CreateDefectAsync(Defect defect)
        {
            _dbContext.Defects.Add(defect);
            await _dbContext.SaveChangesAsync();
            return defect.Id;
        }
        public async Task<bool> UpdateDefectAsync(Defect defect)
        {
            var existDefect = await _dbContext.Defects
                .FirstOrDefaultAsync(e => e.Id == defect.Id);

            if (existDefect == null)
                return false;

            existDefect.Name = defect.Name;
            existDefect.DefectGroupId = defect.DefectGroupId;
            await _dbContext.SaveChangesAsync();
            return true;
        }

        public async Task<bool> DeleteDefectAsync(int id)
        {
            try
            {
                var defect = await _dbContext.Defects
                    .FirstOrDefaultAsync(e => e.Id == id);

                if (defect == null)
                    return false;

                _dbContext.Defects.Remove(defect);
                await _dbContext.SaveChangesAsync();
                return true;
            }
            catch
            {
                return false;
            }
        }
        public async Task<List<Warehouse>> GetAllWarehousesAsync(string filter = "")
        {
            var query = _dbContext.Warehouses.AsQueryable();
            if (!string.IsNullOrWhiteSpace(filter))
            {
                var phrases = filter.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                query = phrases.Aggregate(query, (current, phrase) => current.Where(e => e.Name.ToLower().Contains(phrase)));
            }
            return await query
                .Select(e => new Warehouse
                {
                    Id = e.Id,
                    Name = e.Name,
                })
                .ToListAsync();
        }

        public async Task<int> CreateWarehouseAsync(Warehouse warehouse)
        {
            _dbContext.Warehouses.Add(warehouse);
            await _dbContext.SaveChangesAsync();
            return warehouse.Id;
        }

        public async Task<bool> UpdateWarehouseAsync(Warehouse warehouse)
        {
            var existWarehouse = await _dbContext.Warehouses
                .FirstOrDefaultAsync(e => e.Id == warehouse.Id);

            if (existWarehouse == null)
                return false;

            existWarehouse.Name = warehouse.Name;
            await _dbContext.SaveChangesAsync();
            return true;
        }

        public async Task<bool> DeleteWarehouseAsync(int id)
        {
            try
            {
                var warehouse = await _dbContext.Warehouses
                    .FirstOrDefaultAsync(e => e.Id == id);

                if (warehouse == null)
                    return false;

                _dbContext.Warehouses.Remove(warehouse);
                await _dbContext.SaveChangesAsync();
                return true;
            }
            catch
            {
                return false;
            }
        }

        public async Task<List<Nomenclature>> GetAllNomenclaturesAsync(string filter = "")
        {
            var query = _dbContext.Nomenclature.AsQueryable();
            if (!string.IsNullOrWhiteSpace(filter))
            {
                var phrases = filter.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                query = phrases.Aggregate(query, (current, phrase) => current.Where(e => e.Name.ToLower().Contains(phrase) || e.Article.ToLower().Contains(phrase) || e.Code.ToLower().Contains(phrase) || e.UnitOfMeasure.ToLower().Contains(phrase)));
            }
            return await query
                .Select(e => new Nomenclature
                {
                    Id = e.Id,
                    Name = e.Name,
                    Article = e.Article,
                    Code = e.Code,
                    UnitOfMeasure = e.UnitOfMeasure
                })
                .ToListAsync();
        }

        public async Task<int> CreateNomenclatureAsync(Nomenclature nomenclature)
        {
            _dbContext.Nomenclature.Add(nomenclature);
            await _dbContext.SaveChangesAsync();
            return nomenclature.Id;
        }

        public async Task<bool> UpdateNomenclatureAsync(Nomenclature nomenclature)
        {
            var existNomenclature = await _dbContext.Nomenclature
                .FirstOrDefaultAsync(e => e.Id == nomenclature.Id);

            if (existNomenclature == null)
                return false;

            existNomenclature.Name = nomenclature.Name;
            existNomenclature.Article = nomenclature.Article;
            existNomenclature.Code = nomenclature.Code;
            existNomenclature.UnitOfMeasure = nomenclature.UnitOfMeasure;
            await _dbContext.SaveChangesAsync();
            return true;
        }

        public async Task<bool> DeleteNomenclatureAsync(int id)
        {
            try
            {
                var nomenclature = await _dbContext.Nomenclature
                    .FirstOrDefaultAsync(e => e.Id == id);

                if (nomenclature == null)
                    return false;

                _dbContext.Nomenclature.Remove(nomenclature);
                await _dbContext.SaveChangesAsync();
                return true;
            }
            catch
            {
                return false;
            }
        }
    }
}

//StockService.cs
using System.Linq.Expressions;
using Microsoft.EntityFrameworkCore;
using RequestManagement.Common.Interfaces;
using RequestManagement.Common.Models;
using RequestManagement.Server.Data;

namespace RequestManagement.Server.Services
{
    public class StockService(ApplicationDbContext dbContext) : IStockService
    {
        private readonly ApplicationDbContext _dbContext = dbContext ?? throw new ArgumentNullException(nameof(dbContext));
        private static IQueryable<Stock> ApplyQuantityFilter(
            IQueryable<Stock> query,
            Expression<Func<Stock, decimal>> quantitySelector,
            Helpers.QuantityFilter? filter)
        {
            if (filter is null) return query;

            return filter.Operator switch
            {
                Helpers.ComparisonOperator.GreaterThan => query.Where(BuildComparisonExpression(quantitySelector, filter.Value, ">")),
                Helpers.ComparisonOperator.EqualTo => query.Where(BuildComparisonExpression(quantitySelector, filter.Value, "==")),
                Helpers.ComparisonOperator.LessThan => query.Where(BuildComparisonExpression(quantitySelector, filter.Value, "<")),
                _ => query // Невозможный случай, если enum ограничен
            };
        }
        private static Expression<Func<Stock, bool>> BuildComparisonExpression(
            Expression<Func<Stock, decimal>> quantitySelector,
            decimal value,
            string comparisonOperator)
        {
            var parameter = quantitySelector.Parameters[0];
            var constant = Expression.Constant(value, typeof(decimal));

            var comparison = comparisonOperator switch
            {
                ">" => Expression.GreaterThan(quantitySelector.Body, constant),
                "==" => Expression.Equal(quantitySelector.Body, constant),
                "<" => Expression.LessThan(quantitySelector.Body, constant),
                _ => throw new ArgumentException("Неподдерживаемый оператор сравнения")
            };

            return Expression.Lambda<Func<Stock, bool>>(comparison, parameter);
        }

        public async Task<List<Stock>> GetAllStocksAsync(
            int warehouseId,
            string filter = "",
            int initialQuantityFilterType = 0,
            double initialQuantity = 0,
            int receivedQuantityFilterType = 0,
            double receivedQuantity = 0,
            int consumedQuantityFilterType = 0,
            double consumedQuantity = 0,
            int finalQuantityFilterType = 0,
            double finalQuantity = 0
            )
        {
            var query = _dbContext.Stocks
                .AsQueryable()
                .Where(s => s.WarehouseId == warehouseId);
            if (!string.IsNullOrWhiteSpace(filter))
            {
                var phrases = filter.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                query = phrases.Aggregate(query, (current, phrase) =>
                    current.Where(s => EF.Functions.ILike(s.Nomenclature.Name, $"%{phrase}%") ||
                                       EF.Functions.ILike(s.Nomenclature.Article, $"%{phrase}%") ||
                                       EF.Functions.ILike(s.Nomenclature.Code, $"%{phrase}%")));
            }
            query = ApplyQuantityFilter(query, s => s.InitialQuantity, Helpers.QuantityFilter.GetQuantityFilter((decimal)initialQuantity,initialQuantityFilterType));
            query = ApplyQuantityFilter(query, s => s.ReceivedQuantity, Helpers.QuantityFilter.GetQuantityFilter((decimal)receivedQuantity, receivedQuantityFilterType));
            query = ApplyQuantityFilter(query, s => s.ConsumedQuantity, Helpers.QuantityFilter.GetQuantityFilter((decimal)consumedQuantity, consumedQuantityFilterType));
            query = ApplyQuantityFilter(query, s => s.InitialQuantity + s.ReceivedQuantity - s.ConsumedQuantity, Helpers.QuantityFilter.GetQuantityFilter((decimal)finalQuantity, finalQuantityFilterType));
            return await query
                .Select(s => new Stock
                {
                    Id = s.Id,
                    NomenclatureId = s.NomenclatureId,
                    WarehouseId = s.WarehouseId,
                    InitialQuantity = s.InitialQuantity,
                    ReceivedQuantity = s.ReceivedQuantity,
                    ConsumedQuantity = s.ConsumedQuantity,
                    Nomenclature = s.Nomenclature
                })
                .ToListAsync();
        }
        public async Task<int> CreateStockAsync(Stock stock)
        {
            _dbContext.Stocks.Add(stock);
            await _dbContext.SaveChangesAsync();
            return stock.Id;
        }

        public async Task<bool> UpdateStockAsync(Stock stock)
        {
            var existingStock = await _dbContext.Stocks.FirstOrDefaultAsync(e => e.Id == stock.Id);
            if (existingStock == null)
                return false;
            existingStock.NomenclatureId = stock.NomenclatureId;
            existingStock.InitialQuantity = stock.InitialQuantity;
            await _dbContext.SaveChangesAsync();
            return true;
        }
        public async Task<bool> DeleteStockAsync(int id)
        {
            try
            {
                var stock = await _dbContext.Stocks.FirstOrDefaultAsync(e => e.Id == id);
                if (stock == null)
                    return false;
                _dbContext.Stocks.Remove(stock);
                await _dbContext.SaveChangesAsync();
                return true;
            }
            catch
            {
                return false;
            }
        }
    }
}


//UserService.cs
using Microsoft.EntityFrameworkCore;
using RequestManagement.Common.Interfaces;
using RequestManagement.Common.Models;
using RequestManagement.Server.Data;
using System;
using System.Threading.Tasks;
using BCrypt.Net;
using RequestManagement.Common.Models.Enums;

namespace RequestManagement.Server.Services
{
    /// <summary>
    /// Сервис для работы с пользователями
    /// </summary>
    public class UserService : IUserService
    {
        private readonly ApplicationDbContext _dbContext;

        public UserService(ApplicationDbContext dbContext)
        {
            _dbContext = dbContext ?? throw new ArgumentNullException(nameof(dbContext));
        }

        /// <summary>
        /// Создает нового пользователя
        /// </summary>
        public async Task<int> CreateUserAsync(User user)
        {
            if (user == null)
                throw new ArgumentNullException(nameof(user));

            // Проверка на уникальность логина
            if (await _dbContext.Users.AnyAsync(u => u.Login == user.Login))
                throw new InvalidOperationException($"User with login '{user.Login}' already exists");

            // Хэшируем пароль перед сохранением
            user.Password = BCrypt.Net.BCrypt.HashPassword(user.Password);

            _dbContext.Users.Add(user);
            await _dbContext.SaveChangesAsync();
            return user.Id;
        }

        /// <summary>
        /// Обновляет данные пользователя
        /// </summary>
        public async Task<bool> UpdateUserAsync(User user)
        {
            if (user == null)
                throw new ArgumentNullException(nameof(user));

            var existingUser = await _dbContext.Users
                .FirstOrDefaultAsync(u => u.Id == user.Id);

            if (existingUser == null)
                return false;

            // Проверка на уникальность логина (исключая текущего пользователя)
            if (await _dbContext.Users.AnyAsync(u => u.Login == user.Login && u.Id != user.Id))
                throw new InvalidOperationException($"Login '{user.Login}' is already taken by another user");

            existingUser.Login = user.Login;
            // Хэшируем новый пароль только если он изменился
            if (existingUser.Password != user.Password)
            {
                existingUser.Password = BCrypt.Net.BCrypt.HashPassword(user.Password);
            }
            existingUser.Role = user.Role;

            await _dbContext.SaveChangesAsync();
            return true;
        }

        /// <summary>
        /// Удаляет пользователя по идентификатору
        /// </summary>
        public async Task<bool> DeleteUserAsync(int userId)
        {
            var user = await _dbContext.Users
                .FirstOrDefaultAsync(u => u.Id == userId);

            if (user == null)
                return false;

            _dbContext.Users.Remove(user);
            await _dbContext.SaveChangesAsync();
            return true;
        }

        /// <summary>
        /// Получает пользователя по идентификатору
        /// </summary>
        public async Task<User> GetUserByIdAsync(int userId)
        {
            return await _dbContext.Users
                .FirstOrDefaultAsync(u => u.Id == userId);
        }

        /// <summary>
        /// Получает пользователя по логину
        /// </summary>
        public async Task<User> GetUserByLoginAsync(string login)
        {
            if (string.IsNullOrWhiteSpace(login))
                throw new ArgumentException("Login cannot be null or empty", nameof(login));

            return await _dbContext.Users
                .FirstOrDefaultAsync(u => u.Login == login);
        }

        /// <summary>
        /// Проверяет, имеет ли пользователь указанную роль
        /// </summary>
        public async Task<bool> HasRoleAsync(int userId, UserRole role)
        {
            var user = await _dbContext.Users
                .FirstOrDefaultAsync(u => u.Id == userId);

            return user != null && user.Role == role;
        }
    }
}

//appsettings.Development.json
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  }
}


//appsettings.json
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "EndpointDefaults": {
      "Protocols": "Http2"
    }
  },
  "ConnectionStrings": {
    "DefaultConnection": "Host=localhost;Port=5433;Database=RequestManagement;Username=postgres;Password=Rektalus32281!"
  },
  "Jwt": {
    "Key": "Bkt1T0k2hm4EPFhlx9sujqOKNLvZruaR", // Секретный ключ (должен быть длиннее 16 символов)
    "Issuer": "RequestManagementServer",
    "Audience": "RequestManagementClient"
  }
}


//RequestManagement.Server.deps.json
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "RequestManagement.Server/1.0.0": {
        "dependencies": {
          "BCrypt.Net-Next": "4.0.3",
          "Google.Protobuf": "3.30.2",
          "Grpc.AspNetCore": "2.70.0",
          "Grpc.Tools": "2.71.0",
          "Microsoft.AspNetCore.Authentication.JwtBearer": "8.0.14",
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.EntityFrameworkCore.Tools": "9.0.3",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "RequestManagement.Common": "1.0.0",
          "System.IdentityModel.Tokens.Jwt": "8.7.0"
        },
        "runtime": {
          "RequestManagement.Server.dll": {}
        }
      },
      "BCrypt.Net-Next/4.0.3": {
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "assemblyVersion": "4.0.3.0",
            "fileVersion": "4.0.3.0"
          }
        }
      },
      "Google.Protobuf/3.30.2": {
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "assemblyVersion": "3.30.2.0",
            "fileVersion": "3.30.2.0"
          }
        }
      },
      "Grpc.AspNetCore/2.70.0": {
        "dependencies": {
          "Google.Protobuf": "3.30.2",
          "Grpc.AspNetCore.Server.ClientFactory": "2.70.0",
          "Grpc.Tools": "2.71.0"
        }
      },
      "Grpc.AspNetCore.Server/2.70.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
        "dependencies": {
          "Grpc.AspNetCore.Server": "2.70.0",
          "Grpc.Net.ClientFactory": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Core.Api/2.70.0": {
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.Client/2.70.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.70.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.ClientFactory/2.70.0": {
        "dependencies": {
          "Grpc.Net.Client": "2.70.0",
          "Microsoft.Extensions.Http": "6.0.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.ClientFactory.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.Common/2.70.0": {
        "dependencies": {
          "Grpc.Core.Api": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Tools/2.71.0": {},
      "Humanizer.Core/2.14.1": {
        "runtime": {
          "lib/net6.0/Humanizer.dll": {
            "assemblyVersion": "2.14.0.0",
            "fileVersion": "2.14.1.48190"
          }
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "assemblyVersion": "8.0.14.0",
            "fileVersion": "8.0.1425.11221"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "Microsoft.Bcl.Memory/9.0.0": {
        "runtime": {
          "lib/net8.0/Microsoft.Bcl.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.24.52809"
          }
        }
      },
      "Microsoft.Build.Framework/17.8.3": {},
      "Microsoft.Build.Locator/1.7.8": {
        "runtime": {
          "lib/net6.0/Microsoft.Build.Locator.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.7.8.28074"
          }
        }
      },
      "Microsoft.CodeAnalysis.Analyzers/3.3.4": {},
      "Microsoft.CodeAnalysis.Common/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Analyzers": "3.3.4",
          "System.Collections.Immutable": "7.0.0",
          "System.Reflection.Metadata": "7.0.0",
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "System.Composition": "7.0.0",
          "System.IO.Pipelines": "9.0.3",
          "System.Threading.Channels": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
        "dependencies": {
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0",
          "System.Text.Json": "9.0.3"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          },
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.3": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.3",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {},
      "Microsoft.EntityFrameworkCore.Design/9.0.3": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.Build.Locator": "1.7.8",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.CSharp.Workspaces": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.MSBuild": "4.8.0",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyModel": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3",
          "Mono.TextTemplating": "3.0.0",
          "System.Text.Json": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.3": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Tools/9.0.3": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Design": "9.0.3"
        }
      },
      "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.DependencyModel/9.0.3": {
        "dependencies": {
          "System.Text.Encodings.Web": "9.0.3",
          "System.Text.Json": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "assemblyVersion": "9.0.0.3",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Http/6.0.0": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        }
      },
      "Microsoft.Extensions.Logging/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "System.Diagnostics.DiagnosticSource": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Options/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Primitives/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.7.0": {
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.7.0": {
        "dependencies": {
          "Microsoft.Bcl.Memory": "9.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.IdentityModel.Logging": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Mono.TextTemplating/3.0.0": {
        "dependencies": {
          "System.CodeDom": "6.0.0"
        },
        "runtime": {
          "lib/net6.0/Mono.TextTemplating.dll": {
            "assemblyVersion": "3.0.0.0",
            "fileVersion": "3.0.0.1"
          }
        }
      },
      "Npgsql/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.3.0"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.3",
          "Npgsql": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "assemblyVersion": "9.0.4.0",
            "fileVersion": "9.0.4.0"
          }
        }
      },
      "System.CodeDom/6.0.0": {
        "runtime": {
          "lib/net6.0/System.CodeDom.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Collections.Immutable/7.0.0": {},
      "System.Composition/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Convention": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0",
          "System.Composition.TypedParts": "7.0.0"
        }
      },
      "System.Composition.AttributedModel/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.AttributedModel.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Convention/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Convention.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Hosting/7.0.0": {
        "dependencies": {
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Hosting.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Runtime/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.Runtime.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.TypedParts/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.TypedParts.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.3": {
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "System.IO.Pipelines/9.0.3": {
        "runtime": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.Reflection.Metadata/7.0.0": {
        "dependencies": {
          "System.Collections.Immutable": "7.0.0"
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {},
      "System.Text.Encodings.Web/9.0.3": {
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "rid": "browser",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.Text.Json/9.0.3": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.3",
          "System.Text.Encodings.Web": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.Threading.Channels/7.0.0": {},
      "RequestManagement.Common/1.0.0": {
        "runtime": {
          "RequestManagement.Common.dll": {
            "assemblyVersion": "1.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "RequestManagement.Server/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "BCrypt.Net-Next/4.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "path": "bcrypt.net-next/4.0.3",
      "hashPath": "bcrypt.net-next.4.0.3.nupkg.sha512"
    },
    "Google.Protobuf/3.30.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Y2aOVLIt75yeeEWigg9V9YnjsEm53sADtLGq0gLhwaXpk3iu8tYSoauolyhenagA2sWno2TQ2WujI0HQd6s1Vw==",
      "path": "google.protobuf/3.30.2",
      "hashPath": "google.protobuf.3.30.2.nupkg.sha512"
    },
    "Grpc.AspNetCore/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-s29ST5F2/PZLzOnfqfeDn0emAZajBtYnV9G7hkbK8Eu9+XphoL3KfiEsg2eBsx7P9YYQXcksDbE+CbHApMZeJA==",
      "path": "grpc.aspnetcore/2.70.0",
      "hashPath": "grpc.aspnetcore.2.70.0.nupkg.sha512"
    },
    "Grpc.AspNetCore.Server/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9d6JuMLSxwOX4zERV7HBwq1XL8DD48a6FSoxD5dDXrCz/o0HqMXE2+lRcXHckOlz1JCesznW8XMMJdsU1FfY7w==",
      "path": "grpc.aspnetcore.server/2.70.0",
      "hashPath": "grpc.aspnetcore.server.2.70.0.nupkg.sha512"
    },
    "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-k4GrvUAgVWm7DyhnV55MHdX4bQSpZVEQmlZO3bdSmGZ+z6Hx+CwDlhqiReczCm6qbzSUbS1YW0t7z7UEObTwKA==",
      "path": "grpc.aspnetcore.server.clientfactory/2.70.0",
      "hashPath": "grpc.aspnetcore.server.clientfactory.2.70.0.nupkg.sha512"
    },
    "Grpc.Core.Api/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-66UotvWcSIq41oiQhLWcQACyKPM4umxXNiht5DQTLZJfNwEswWOcS7Z0xIEHyNIBE7ZpjotH22bEjTkvhPxmVw==",
      "path": "grpc.core.api/2.70.0",
      "hashPath": "grpc.core.api.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.Client/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xNv0FFCVJa5S1beUtye82WFCxKThuE1jbN8DO1x1Rj8VSIWXLBUmfSID5a1fGzsU2R/EMfwPoWclJ2RMfQuGXw==",
      "path": "grpc.net.client/2.70.0",
      "hashPath": "grpc.net.client.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.ClientFactory/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Qg+93oj/8RdEw3PnLZNNYWnWCWyJYC/ZYZcjeln/pLaxLaPvdXES1peiqSJUI4wLFZ1JwGlbWt8+nM1i2E7ihg==",
      "path": "grpc.net.clientfactory/2.70.0",
      "hashPath": "grpc.net.clientfactory.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.Common/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-rBdEUMyCwa+iB8mqC6JKyPbj3SBHHkReJj/yy/XKJI63GcG6w9DJMMGTVcYHqq4Ci2W4m0HT4jt2pFfFscar8g==",
      "path": "grpc.net.common/2.70.0",
      "hashPath": "grpc.net.common.2.70.0.nupkg.sha512"
    },
    "Grpc.Tools/2.71.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-r8zHZm7kHdMrtujnkcuQ0BNDH2969at/8Va1ZzQgVblaQzR7tm8JlA3G+5Z5IFbvvf9PcAr1/VcoSR+g7j4Nyw==",
      "path": "grpc.tools/2.71.0",
      "hashPath": "grpc.tools.2.71.0.nupkg.sha512"
    },
    "Humanizer.Core/2.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lQKvtaTDOXnoVJ20ibTuSIOf2i0uO0MPbDhd1jm238I+U/2ZnRENj0cktKZhtchBMtCUSRQ5v4xBCUbKNmyVMw==",
      "path": "humanizer.core/2.14.1",
      "hashPath": "humanizer.core.2.14.1.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-e19jmWJAQucbPYk3/fihJMDCYfv6CO+Qwp34pOehUSCbaHROw6FZ551SN1D0s9Btl0U/QHfuwFq6Z8Oa2ktE6g==",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.14",
      "hashPath": "microsoft.aspnetcore.authentication.jwtbearer.8.0.14.nupkg.sha512"
    },
    "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3aeMZ1N0lJoSyzqiP03hqemtb1BijhsJADdobn/4nsMJ8V1H+CrpuduUe4hlRdx+ikBQju1VGjMD1GJ3Sk05Eg==",
      "path": "microsoft.bcl.asyncinterfaces/7.0.0",
      "hashPath": "microsoft.bcl.asyncinterfaces.7.0.0.nupkg.sha512"
    },
    "Microsoft.Bcl.Memory/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bTUtGfpGyJnohQzjdXbtc7MqNzkv7CWUSRz54+ucNm0i32rZiIU0VdVPHDBShOl1qhVKRjW8mnEBz3d2vH93tQ==",
      "path": "microsoft.bcl.memory/9.0.0",
      "hashPath": "microsoft.bcl.memory.9.0.0.nupkg.sha512"
    },
    "Microsoft.Build.Framework/17.8.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NrQZJW8TlKVPx72yltGb8SVz3P5mNRk9fNiD/ao8jRSk48WqIIdCn99q4IjlVmPcruuQ+yLdjNQLL8Rb4c916g==",
      "path": "microsoft.build.framework/17.8.3",
      "hashPath": "microsoft.build.framework.17.8.3.nupkg.sha512"
    },
    "Microsoft.Build.Locator/1.7.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-sPy10x527Ph16S2u0yGME4S6ohBKJ69WfjeGG/bvELYeZVmJdKjxgnlL8cJJJLGV/cZIRqSfB12UDB8ICakOog==",
      "path": "microsoft.build.locator/1.7.8",
      "hashPath": "microsoft.build.locator.1.7.8.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-AxkxcPR+rheX0SmvpLVIGLhOUXAKG56a64kV9VQZ4y9gR9ZmPXnqZvHJnmwLSwzrEP6junUF11vuc+aqo5r68g==",
      "path": "microsoft.codeanalysis.analyzers/3.3.4",
      "hashPath": "microsoft.codeanalysis.analyzers.3.3.4.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/jR+e/9aT+BApoQJABlVCKnnggGQbvGh7BKq2/wI1LamxC+LbzhcLj4Vj7gXCofl1n4E521YfF9w0WcASGg/KA==",
      "path": "microsoft.codeanalysis.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+3+qfdb/aaGD8PZRCrsdobbzGs1m9u119SkkJt8e/mk3xLJz/udLtS2T6nY27OTXxBBw10HzAbC8Z9w08VyP/g==",
      "path": "microsoft.codeanalysis.csharp/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3amm4tq4Lo8/BGvg9p3BJh3S9nKq2wqCXfS7138i69TUpo/bD+XvD0hNurpEBtcNZhi1FyutiomKJqVF39ugYA==",
      "path": "microsoft.codeanalysis.csharp.workspaces/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.workspaces.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LXyV+MJKsKRu3FGJA3OmSk40OUIa/dQCFLOnm5X8MNcujx7hzGu8o+zjXlb/cy5xUdZK2UKYb9YaQ2E8m9QehQ==",
      "path": "microsoft.codeanalysis.workspaces.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IEYreI82QZKklp54yPHxZNG9EKSK6nHEkeuf+0Asie9llgS1gp0V1hw7ODG+QyoB7MuAnNQHmeV1Per/ECpv6A==",
      "path": "microsoft.codeanalysis.workspaces.msbuild/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.msbuild.4.8.0.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ji6fWE8bFWTvqaMue49RSCcAeqlec13hAbitTBZyz/RmYsQDhqM9VkWUoXS1x1mjcsyWjc5EQr2XyuAkwp0eNQ==",
      "path": "microsoft.entityframeworkcore/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HQH7HgwTl6IyasW7t6F2+ihuHLDmf9+8XaS41v8VHN5Z7x5ZMQIiHCbwxme4P5ICAjBG6VsWcjMCoh4fHbEwJg==",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-M+iOxejD3HqPV8/KE148wIehHA3cmMF+FgnpiN8CFB7DLokVSKQPPrwtHjcrNYJ/BDEssviEPNok/jtQWxj7xA==",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.analyzers.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Design/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-n5ZrAZ4RFELxYjJxN74lzmFlRrtSpYEYZfZcIJIWPGjSigwJsbya2CnOdjSVDPyfx3rKl9rzbd72D2DNHBJWeA==",
      "path": "microsoft.entityframeworkcore.design/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.design.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xsS+5TM7M5f3tCSRaSbzouGCoIgD2zokQxBGXvf9z3DusRztWvT1NNT9XJaY2JoK1qEEDcHah8is6azYmpZhIg==",
      "path": "microsoft.entityframeworkcore.relational/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.relational.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Tools/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-c2kkyHhkop9WAbBWgm64apzPbzMeu0iKsRW3cn5kxSge0SQNxSlkAOtnO4L9dc8YwCAtFFyAZrxVFekxyvxKwQ==",
      "path": "microsoft.entityframeworkcore.tools/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.tools.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-t8b0R6wtqC4o0hJ+oQkLPydw2MMLEoLEpQXCWbzXAm9NBMOngkDZNcvwF6DxbYdL5SlfZJXbYmiOxKZmwHNgNg==",
      "path": "microsoft.extensions.caching.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.caching.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Memory/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TXggBGDDd6r+J7FV09plXpzGmWcknVyoDsHlY2qcCbcAhmb0eH7Q9IkfIZl54/zEedVTa9jPgiPFTxH9WuCGMQ==",
      "path": "microsoft.extensions.caching.memory/9.0.3",
      "hashPath": "microsoft.extensions.caching.memory.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-q5qlbm6GRUrle2ZZxy9aqS/wWoc+mRD3JeP6rcpiJTh5XcemYkplAcJKq8lU11ZfPom5lfbZZfnQvDqcUhqD5Q==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lDbxJpkl6X8KZGpkAxgrrthQ42YeiR0xjPp7KPx+sCPc3ZbpaIbjzd0QQ+9kDdK2RU2DOl3pc6tQyAgEZY3V0A==",
      "path": "microsoft.extensions.dependencyinjection/9.0.3",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TfaHPSe39NyL2wxkisRxXK7xvHGZYBZ+dy3r+mqGvnxKgAPdHkMu3QMQZI4pquP6W5FIQBqs8FJpWV8ffCgDqQ==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyModel/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-194P+NOekDXrPHmM2R8678T4bRfZ2isQXDDAsXKE5qI0QLUnXbwB0upljAkyxk+Kkt1DV1tV+9tHOtHEEh3ksw==",
      "path": "microsoft.extensions.dependencymodel/9.0.3",
      "hashPath": "microsoft.extensions.dependencymodel.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Http/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-15+pa2G0bAMHbHewaQIdr/y6ag2H3yh4rd9hTXavtWDzQBkvpe2RMqFg8BxDpcQWssmjmBApGPcw93QRz6YcMg==",
      "path": "microsoft.extensions.http/6.0.0",
      "hashPath": "microsoft.extensions.http.6.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-utIi2R1nm+PCWkvWBf1Ou6LWqg9iLfHU23r8yyU9VCvda4dEs7xbTZSwGa5KuwbpzpgCbHCIuKaFHB3zyFmnGw==",
      "path": "microsoft.extensions.logging/9.0.3",
      "hashPath": "microsoft.extensions.logging.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-H/MBMLt9A/69Ux4OrV7oCKt3DcMT04o5SCqDolulzQA66TLFEpYYb4qedMs/uwrLtyHXGuDGWKZse/oa8W9AZw==",
      "path": "microsoft.extensions.logging.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xE7MpY70lkw1oiid5y6FbL9dVw8oLfkx8RhSNGN8sSzBlCqGn0SyT3Fqc8tZnDaPIq7Z8R9RTKlS564DS+MV3g==",
      "path": "microsoft.extensions.options/9.0.3",
      "hashPath": "microsoft.extensions.options.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yCCJHvBcRyqapMSNzP+kTc57Eaavq2cr5Tmuil6/XVnipQf5xmskxakSQ1enU6S4+fNg3sJ27WcInV64q24JsA==",
      "path": "microsoft.extensions.primitives/9.0.3",
      "hashPath": "microsoft.extensions.primitives.9.0.3.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Abstractions/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OQd5aVepYvh5evOmBMeAYjMIpEcTf1ZCBZaU7Nh/RlhhdXefjFDJeP1L2F2zeNT1unFr+wUu/h3Ac2Xb4BXU6w==",
      "path": "microsoft.identitymodel.abstractions/8.7.0",
      "hashPath": "microsoft.identitymodel.abstractions.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-uzsSAWhNhbrkWbQKBTE8QhzviU6sr3bJ1Bkv7gERlhswfSKOp7HsxTRLTPBpx/whQ/GRRHEwMg8leRIPbMrOgw==",
      "path": "microsoft.identitymodel.jsonwebtokens/8.7.0",
      "hashPath": "microsoft.identitymodel.jsonwebtokens.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Logging/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Bs0TznPAu+nxa9rAVHJ+j3CYECHJkT3tG8AyBfhFYlT5ldsDhoxFT7J+PKxJHLf+ayqWfvDZHHc4639W2FQCxA==",
      "path": "microsoft.identitymodel.logging/8.7.0",
      "hashPath": "microsoft.identitymodel.logging.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Tokens/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5Z6voXjRXAnGklhmZd1mKz89UhcF5ZQQZaZc2iKrOuL4Li1UihG2vlJx8IbiFAOIxy/xdbsAm0A+WZEaH5fxng==",
      "path": "microsoft.identitymodel.tokens/8.7.0",
      "hashPath": "microsoft.identitymodel.tokens.8.7.0.nupkg.sha512"
    },
    "Mono.TextTemplating/3.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YqueG52R/Xej4VVbKuRIodjiAhV0HR/XVbLbNrJhCZnzjnSjgMJ/dCdV0akQQxavX6hp/LC6rqLGLcXeQYU7XA==",
      "path": "mono.texttemplating/3.0.0",
      "hashPath": "mono.texttemplating.3.0.0.nupkg.sha512"
    },
    "Npgsql/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "path": "npgsql/9.0.3",
      "hashPath": "npgsql.9.0.3.nupkg.sha512"
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "hashPath": "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512"
    },
    "System.CodeDom/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-CPc6tWO1LAer3IzfZufDBRL+UZQcj5uS207NHALQzP84Vp/z6wF0Aa0YZImOQY8iStY0A2zI/e3ihKNPfUm8XA==",
      "path": "system.codedom/6.0.0",
      "hashPath": "system.codedom.6.0.0.nupkg.sha512"
    },
    "System.Collections.Immutable/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dQPcs0U1IKnBdRDBkrCTi1FoajSTBzLcVTpjO4MBCMC7f4pDOIPzgBoX8JjG7X6uZRJ8EBxsi8+DR1JuwjnzOQ==",
      "path": "system.collections.immutable/7.0.0",
      "hashPath": "system.collections.immutable.7.0.0.nupkg.sha512"
    },
    "System.Composition/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tRwgcAkDd85O8Aq6zHDANzQaq380cek9lbMg5Qma46u5BZXq/G+XvIYmu+UI+BIIZ9zssXLYrkTykEqxxvhcmg==",
      "path": "system.composition/7.0.0",
      "hashPath": "system.composition.7.0.0.nupkg.sha512"
    },
    "System.Composition.AttributedModel/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2QzClqjElKxgI1jK1Jztnq44/8DmSuTSGGahXqQ4TdEV0h9s2KikQZIgcEqVzR7OuWDFPGLHIprBJGQEPr8fAQ==",
      "path": "system.composition.attributedmodel/7.0.0",
      "hashPath": "system.composition.attributedmodel.7.0.0.nupkg.sha512"
    },
    "System.Composition.Convention/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IMhTlpCs4HmlD8B+J8/kWfwX7vrBBOs6xyjSTzBlYSs7W4OET4tlkR/Sg9NG8jkdJH9Mymq0qGdYS1VPqRTBnQ==",
      "path": "system.composition.convention/7.0.0",
      "hashPath": "system.composition.convention.7.0.0.nupkg.sha512"
    },
    "System.Composition.Hosting/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eB6gwN9S+54jCTBJ5bpwMOVerKeUfGGTYCzz3QgDr1P55Gg/Wb27ShfPIhLMjmZ3MoAKu8uUSv6fcCdYJTN7Bg==",
      "path": "system.composition.hosting/7.0.0",
      "hashPath": "system.composition.hosting.7.0.0.nupkg.sha512"
    },
    "System.Composition.Runtime/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-aZJ1Zr5Txe925rbo4742XifEyW0MIni1eiUebmcrP3HwLXZ3IbXUj4MFMUH/RmnJOAQiS401leg/2Sz1MkApDw==",
      "path": "system.composition.runtime/7.0.0",
      "hashPath": "system.composition.runtime.7.0.0.nupkg.sha512"
    },
    "System.Composition.TypedParts/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ZK0KNPfbtxVceTwh+oHNGUOYV2WNOHReX2AXipuvkURC7s/jPwoWfsu3SnDBDgofqbiWr96geofdQ2erm/KTHg==",
      "path": "system.composition.typedparts/7.0.0",
      "hashPath": "system.composition.typedparts.7.0.0.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-cBA+28xDW33tSiGht/H8xvr8lnaCrgJ7EdO348AfSGsX4PPJUOULKxny/cc9DVNGExaCrtqagsnm5M2mkWIZ+g==",
      "path": "system.diagnostics.diagnosticsource/9.0.3",
      "hashPath": "system.diagnostics.diagnosticsource.9.0.3.nupkg.sha512"
    },
    "System.IdentityModel.Tokens.Jwt/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-8dKL3A9pVqYCJIXHd4H2epQqLxSvKeNxGonR0e5g89yMchyvsM/NLuB06otx29BicUd6+LUJZgNZmvYjjPsPGg==",
      "path": "system.identitymodel.tokens.jwt/8.7.0",
      "hashPath": "system.identitymodel.tokens.jwt.8.7.0.nupkg.sha512"
    },
    "System.IO.Pipelines/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-aP1Qh9llcEmo0qN+VKvVDHFMe5Cqpfb1VjhBO7rjmxCXtLs3IfVSOiNqqLBZ/4Qbcr4J0SDdJq9S7EKAGpnwEA==",
      "path": "system.io.pipelines/9.0.3",
      "hashPath": "system.io.pipelines.9.0.3.nupkg.sha512"
    },
    "System.Reflection.Metadata/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-MclTG61lsD9sYdpNz9xsKBzjsmsfCtcMZYXz/IUr2zlhaTaABonlr1ESeompTgM+Xk+IwtGYU7/voh3YWB/fWw==",
      "path": "system.reflection.metadata/7.0.0",
      "hashPath": "system.reflection.metadata.7.0.0.nupkg.sha512"
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "hashPath": "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512"
    },
    "System.Text.Encodings.Web/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5L+iI4fBMtGwt4FHLQh40/rgdbxnw6lHaLkR3gbaHG97TohzUv+z/oP03drsTR1lKCLhOkp40cFnHYOQLtpT5A==",
      "path": "system.text.encodings.web/9.0.3",
      "hashPath": "system.text.encodings.web.9.0.3.nupkg.sha512"
    },
    "System.Text.Json/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-r2JRkLjsYrq5Dpo7+y3Wa73OfirZPdVhxiTJWwZ+oJM7FOAe0LkM3GlH+pgkNRdd1G1kwUbmRCdmh4uoaWwu1g==",
      "path": "system.text.json/9.0.3",
      "hashPath": "system.text.json.9.0.3.nupkg.sha512"
    },
    "System.Threading.Channels/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-qmeeYNROMsONF6ndEZcIQ+VxR4Q/TX/7uIVLJqtwIWL7dDWeh0l1UIqgo4wYyjG//5lUNhwkLDSFl+pAWO6oiA==",
      "path": "system.threading.channels/7.0.0",
      "hashPath": "system.threading.channels.7.0.0.nupkg.sha512"
    },
    "RequestManagement.Common/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}

//RequestManagement.Server.runtimeconfig.json
{
  "runtimeOptions": {
    "tfm": "net8.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.AspNetCore.App",
        "version": "8.0.0"
      }
    ],
    "configProperties": {
      "System.GC.Server": true,
      "System.Reflection.NullabilityInfoContext.IsSupported": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}

//.NETCoreApp,Version=v8.0.AssemblyAttributes.cs
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]


//ApiEndpoints.json
[]

//RequestManagement.Server.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RequestManagement.Server")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("RequestManagement.Server")]
[assembly: System.Reflection.AssemblyTitleAttribute("RequestManagement.Server")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Создано классом WriteCodeFragment MSBuild.



//RequestManagement.Server.GlobalUsings.g.cs
// <auto-generated/>
global using global::Microsoft.AspNetCore.Builder;
global using global::Microsoft.AspNetCore.Hosting;
global using global::Microsoft.AspNetCore.Http;
global using global::Microsoft.AspNetCore.Routing;
global using global::Microsoft.Extensions.Configuration;
global using global::Microsoft.Extensions.DependencyInjection;
global using global::Microsoft.Extensions.Hosting;
global using global::Microsoft.Extensions.Logging;
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Net.Http.Json;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//RequestManagement.Server.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//staticwebassets.build.json
{
  "Version": 1,
  "Hash": "KEUqZZxNEFx86LQcNYsNBf2jo3VH7cI8RE5jCkKx6zU=",
  "Source": "RequestManagement.Server",
  "BasePath": "_content/RequestManagement.Server",
  "Mode": "Default",
  "ManifestType": "Build",
  "ReferencedProjectsConfiguration": [],
  "DiscoveryPatterns": [],
  "Assets": []
}

//Auth.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/auth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RequestManagement.Server.Controllers {

  /// <summary>Holder for reflection information generated from Protos/auth.proto</summary>
  public static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQcm90b3MvYXV0aC5wcm90bxIEYXV0aCI2ChNBdXRoZW50aWNhdGVSZXF1",
            "ZXN0Eg0KBWxvZ2luGAEgASgJEhAKCHBhc3N3b3JkGAIgASgJIlMKFEF1dGhl",
            "bnRpY2F0ZVJlc3BvbnNlEg8KB3VzZXJfaWQYASABKAUSDQoFbG9naW4YAiAB",
            "KAkSDAoEcm9sZRgDIAEoBRINCgV0b2tlbhgEIAEoCSI6ChBBdXRob3JpemVS",
            "ZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAUSFQoNcmVxdWlyZWRfcm9sZRgCIAEo",
            "BSIqChFBdXRob3JpemVSZXNwb25zZRIVCg1pc19hdXRob3JpemVkGAEgASgI",
            "MpIBCgtBdXRoU2VydmljZRJFCgxBdXRoZW50aWNhdGUSGS5hdXRoLkF1dGhl",
            "bnRpY2F0ZVJlcXVlc3QaGi5hdXRoLkF1dGhlbnRpY2F0ZVJlc3BvbnNlEjwK",
            "CUF1dGhvcml6ZRIWLmF1dGguQXV0aG9yaXplUmVxdWVzdBoXLmF1dGguQXV0",
            "aG9yaXplUmVzcG9uc2VCJ6oCJFJlcXVlc3RNYW5hZ2VtZW50LlNlcnZlci5D",
            "b250cm9sbGVyc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.AuthenticateRequest), global::RequestManagement.Server.Controllers.AuthenticateRequest.Parser, new[]{ "Login", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.AuthenticateResponse), global::RequestManagement.Server.Controllers.AuthenticateResponse.Parser, new[]{ "UserId", "Login", "Role", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.AuthorizeRequest), global::RequestManagement.Server.Controllers.AuthorizeRequest.Parser, new[]{ "UserId", "RequiredRole" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.AuthorizeResponse), global::RequestManagement.Server.Controllers.AuthorizeResponse.Parser, new[]{ "IsAuthorized" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Запрос на аутентификацию
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthenticateRequest : pb::IMessage<AuthenticateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthenticateRequest> _parser = new pb::MessageParser<AuthenticateRequest>(() => new AuthenticateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthenticateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest(AuthenticateRequest other) : this() {
      login_ = other.login_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest Clone() {
      return new AuthenticateRequest(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private string login_ = "";
    /// <summary>
    /// Логин пользователя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// Пароль пользователя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthenticateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthenticateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Ответ на аутентификацию
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthenticateResponse : pb::IMessage<AuthenticateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthenticateResponse> _parser = new pb::MessageParser<AuthenticateResponse>(() => new AuthenticateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthenticateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse(AuthenticateResponse other) : this() {
      userId_ = other.userId_;
      login_ = other.login_;
      role_ = other.role_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse Clone() {
      return new AuthenticateResponse(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    /// ID пользователя (0, если аутентификация не удалась)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 2;
    private string login_ = "";
    /// <summary>
    /// Логин пользователя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 3;
    private int role_;
    /// <summary>
    /// Роль пользователя (enum UserRole)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 4;
    private string token_ = "";
    /// <summary>
    /// JWT-токен для дальнейших запросов
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthenticateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Login != other.Login) return false;
      if (Role != other.Role) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Role != 0) hash ^= Role.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Login.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Login);
      }
      if (Role != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Role);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Login.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Login);
      }
      if (Role != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Role);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Role != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthenticateResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Role != 0) {
        Role = other.Role;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            Login = input.ReadString();
            break;
          }
          case 24: {
            Role = input.ReadInt32();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            Login = input.ReadString();
            break;
          }
          case 24: {
            Role = input.ReadInt32();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Запрос на проверку прав доступа
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthorizeRequest : pb::IMessage<AuthorizeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthorizeRequest> _parser = new pb::MessageParser<AuthorizeRequest>(() => new AuthorizeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthorizeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeRequest(AuthorizeRequest other) : this() {
      userId_ = other.userId_;
      requiredRole_ = other.requiredRole_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeRequest Clone() {
      return new AuthorizeRequest(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    /// ID пользователя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "required_role" field.</summary>
    public const int RequiredRoleFieldNumber = 2;
    private int requiredRole_;
    /// <summary>
    /// Требуемая роль (enum UserRole)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequiredRole {
      get { return requiredRole_; }
      set {
        requiredRole_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthorizeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthorizeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (RequiredRole != other.RequiredRole) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (RequiredRole != 0) hash ^= RequiredRole.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (RequiredRole != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RequiredRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (RequiredRole != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RequiredRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (RequiredRole != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequiredRole);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthorizeRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.RequiredRole != 0) {
        RequiredRole = other.RequiredRole;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            RequiredRole = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            RequiredRole = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Ответ на проверку прав доступа
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthorizeResponse : pb::IMessage<AuthorizeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthorizeResponse> _parser = new pb::MessageParser<AuthorizeResponse>(() => new AuthorizeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthorizeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeResponse(AuthorizeResponse other) : this() {
      isAuthorized_ = other.isAuthorized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeResponse Clone() {
      return new AuthorizeResponse(this);
    }

    /// <summary>Field number for the "is_authorized" field.</summary>
    public const int IsAuthorizedFieldNumber = 1;
    private bool isAuthorized_;
    /// <summary>
    /// Признак наличия прав
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAuthorized {
      get { return isAuthorized_; }
      set {
        isAuthorized_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthorizeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthorizeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsAuthorized != other.IsAuthorized) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsAuthorized != false) hash ^= IsAuthorized.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsAuthorized != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsAuthorized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsAuthorized != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsAuthorized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsAuthorized != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthorizeResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsAuthorized != false) {
        IsAuthorized = other.IsAuthorized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsAuthorized = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsAuthorized = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code


//AuthGrpc.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/auth.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RequestManagement.Server.Controllers {
  /// <summary>
  /// Сервис аутентификации
  /// </summary>
  public static partial class AuthService
  {
    static readonly string __ServiceName = "auth.AuthService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.AuthenticateRequest> __Marshaller_auth_AuthenticateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.AuthenticateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.AuthenticateResponse> __Marshaller_auth_AuthenticateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.AuthenticateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.AuthorizeRequest> __Marshaller_auth_AuthorizeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.AuthorizeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.AuthorizeResponse> __Marshaller_auth_AuthorizeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.AuthorizeResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.AuthenticateRequest, global::RequestManagement.Server.Controllers.AuthenticateResponse> __Method_Authenticate = new grpc::Method<global::RequestManagement.Server.Controllers.AuthenticateRequest, global::RequestManagement.Server.Controllers.AuthenticateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Authenticate",
        __Marshaller_auth_AuthenticateRequest,
        __Marshaller_auth_AuthenticateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.AuthorizeRequest, global::RequestManagement.Server.Controllers.AuthorizeResponse> __Method_Authorize = new grpc::Method<global::RequestManagement.Server.Controllers.AuthorizeRequest, global::RequestManagement.Server.Controllers.AuthorizeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Authorize",
        __Marshaller_auth_AuthorizeRequest,
        __Marshaller_auth_AuthorizeResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AuthService</summary>
    [grpc::BindServiceMethod(typeof(AuthService), "BindService")]
    public abstract partial class AuthServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.AuthenticateResponse> Authenticate(global::RequestManagement.Server.Controllers.AuthenticateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.AuthorizeResponse> Authorize(global::RequestManagement.Server.Controllers.AuthorizeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AuthServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Authenticate, serviceImpl.Authenticate)
          .AddMethod(__Method_Authorize, serviceImpl.Authorize).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AuthServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Authenticate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.AuthenticateRequest, global::RequestManagement.Server.Controllers.AuthenticateResponse>(serviceImpl.Authenticate));
      serviceBinder.AddMethod(__Method_Authorize, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.AuthorizeRequest, global::RequestManagement.Server.Controllers.AuthorizeResponse>(serviceImpl.Authorize));
    }

  }
}
#endregion


//Request.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RequestManagement.Server.Controllers {

  /// <summary>Holder for reflection information generated from Protos/request.proto</summary>
  public static partial class RequestReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90b3MvcmVxdWVzdC5wcm90byIoChZHZXRBbGxFcXVpcG1lbnRSZXF1",
            "ZXN0Eg4KBmZpbHRlchgBIAEoCSI4ChdHZXRBbGxFcXVpcG1lbnRSZXNwb25z",
            "ZRIdCgllcXVpcG1lbnQYASADKAsyCi5FcXVpcG1lbnQiPQoWQ3JlYXRlRXF1",
            "aXBtZW50UmVxdWVzdBIMCgRuYW1lGAEgASgJEhUKDWxpY2Vuc2VfcGxhdGUY",
            "AiABKAkiJQoXQ3JlYXRlRXF1aXBtZW50UmVzcG9uc2USCgoCaWQYASABKAUi",
            "SQoWVXBkYXRlRXF1aXBtZW50UmVxdWVzdBIKCgJpZBgBIAEoBRIMCgRuYW1l",
            "GAIgASgJEhUKDWxpY2Vuc2VfcGxhdGUYAyABKAkiKgoXVXBkYXRlRXF1aXBt",
            "ZW50UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCIkChZEZWxldGVFcXVpcG1l",
            "bnRSZXF1ZXN0EgoKAmlkGAEgASgFIioKF0RlbGV0ZUVxdWlwbWVudFJlc3Bv",
            "bnNlEg8KB3N1Y2Nlc3MYASABKAgiPAoJRXF1aXBtZW50EgoKAmlkGAEgASgF",
            "EgwKBG5hbWUYAiABKAkSFQoNbGljZW5zZV9wbGF0ZRgDIAEoCSImChRHZXRB",
            "bGxEcml2ZXJzUmVxdWVzdBIOCgZmaWx0ZXIYASABKAkiMQoVR2V0QWxsRHJp",
            "dmVyc1Jlc3BvbnNlEhgKB2RyaXZlcnMYASADKAsyBy5Ecml2ZXIiLgoTQ3Jl",
            "YXRlRHJpdmVyUmVxdWVzdBIXCgZkcml2ZXIYASABKAsyBy5Ecml2ZXIiIgoU",
            "Q3JlYXRlRHJpdmVyUmVzcG9uc2USCgoCaWQYASABKAUiLgoTVXBkYXRlRHJp",
            "dmVyUmVxdWVzdBIXCgZkcml2ZXIYASABKAsyBy5Ecml2ZXIiJwoUVXBkYXRl",
            "RHJpdmVyUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCIhChNEZWxldGVEcml2",
            "ZXJSZXF1ZXN0EgoKAmlkGAEgASgFIicKFERlbGV0ZURyaXZlclJlc3BvbnNl",
            "Eg8KB3N1Y2Nlc3MYASABKAgiTQoGRHJpdmVyEgoKAmlkGAEgASgFEhEKCWZ1",
            "bGxfbmFtZRgCIAEoCRISCgpzaG9ydF9uYW1lGAMgASgJEhAKCHBvc2l0aW9u",
            "GAQgASgJIisKGUdldEFsbERlZmVjdEdyb3Vwc1JlcXVlc3QSDgoGZmlsdGVy",
            "GAEgASgJIj8KGkdldEFsbERlZmVjdEdyb3Vwc1Jlc3BvbnNlEiEKC2RlZmVj",
            "dEdyb3VwGAEgAygLMgwuRGVmZWN0R3JvdXAiPQoYQ3JlYXRlRGVmZWN0R3Jv",
            "dXBSZXF1ZXN0EiEKC2RlZmVjdEdyb3VwGAEgASgLMgwuRGVmZWN0R3JvdXAi",
            "JwoZQ3JlYXRlRGVmZWN0R3JvdXBSZXNwb25zZRIKCgJpZBgBIAEoBSI9ChhV",
            "cGRhdGVEZWZlY3RHcm91cFJlcXVlc3QSIQoLZGVmZWN0R3JvdXAYASABKAsy",
            "DC5EZWZlY3RHcm91cCIsChlVcGRhdGVEZWZlY3RHcm91cFJlc3BvbnNlEg8K",
            "B3N1Y2Nlc3MYASABKAgiJgoYRGVsZXRlRGVmZWN0R3JvdXBSZXF1ZXN0EgoK",
            "AmlkGAEgASgFIiwKGURlbGV0ZURlZmVjdEdyb3VwUmVzcG9uc2USDwoHc3Vj",
            "Y2VzcxgBIAEoCCInCgtEZWZlY3RHcm91cBIKCgJpZBgBIAEoBRIMCgRuYW1l",
            "GAIgASgJIiYKFEdldEFsbERlZmVjdHNSZXF1ZXN0Eg4KBmZpbHRlchgBIAEo",
            "CSIwChVHZXRBbGxEZWZlY3RzUmVzcG9uc2USFwoGZGVmZWN0GAEgAygLMgcu",
            "RGVmZWN0Ii4KE0NyZWF0ZURlZmVjdFJlcXVlc3QSFwoGZGVmZWN0GAEgASgL",
            "MgcuRGVmZWN0IiIKFENyZWF0ZURlZmVjdFJlc3BvbnNlEgoKAmlkGAEgASgF",
            "Ii4KE1VwZGF0ZURlZmVjdFJlcXVlc3QSFwoGZGVmZWN0GAEgASgLMgcuRGVm",
            "ZWN0IicKFFVwZGF0ZURlZmVjdFJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgi",
            "IQoTRGVsZXRlRGVmZWN0UmVxdWVzdBIKCgJpZBgBIAEoBSInChREZWxldGVE",
            "ZWZlY3RSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIjkKBkRlZmVjdBIKCgJp",
            "ZBgBIAEoBRIMCgRuYW1lGAIgASgJEhUKDWRlZmVjdEdyb3VwSWQYAyABKAUi",
            "KQoXR2V0QWxsV2FyZWhvdXNlc1JlcXVlc3QSDgoGZmlsdGVyGAEgASgJIjkK",
            "GEdldEFsbFdhcmVob3VzZXNSZXNwb25zZRIdCgl3YXJlaG91c2UYASADKAsy",
            "Ci5XYXJlaG91c2UiNwoWQ3JlYXRlV2FyZWhvdXNlUmVxdWVzdBIdCgl3YXJl",
            "aG91c2UYASABKAsyCi5XYXJlaG91c2UiJQoXQ3JlYXRlV2FyZWhvdXNlUmVz",
            "cG9uc2USCgoCaWQYASABKAUiNwoWVXBkYXRlV2FyZWhvdXNlUmVxdWVzdBId",
            "Cgl3YXJlaG91c2UYASABKAsyCi5XYXJlaG91c2UiKgoXVXBkYXRlV2FyZWhv",
            "dXNlUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCIkChZEZWxldGVXYXJlaG91",
            "c2VSZXF1ZXN0EgoKAmlkGAEgASgFIioKF0RlbGV0ZVdhcmVob3VzZVJlc3Bv",
            "bnNlEg8KB3N1Y2Nlc3MYASABKAgiJQoJV2FyZWhvdXNlEgoKAmlkGAEgASgF",
            "EgwKBG5hbWUYAiABKAkiLAoaR2V0QWxsTm9tZW5jbGF0dXJlc1JlcXVlc3QS",
            "DgoGZmlsdGVyGAEgASgJIkIKG0dldEFsbE5vbWVuY2xhdHVyZXNSZXNwb25z",
            "ZRIjCgxub21lbmNsYXR1cmUYASADKAsyDS5Ob21lbmNsYXR1cmUiQAoZQ3Jl",
            "YXRlTm9tZW5jbGF0dXJlUmVxdWVzdBIjCgxub21lbmNsYXR1cmUYASABKAsy",
            "DS5Ob21lbmNsYXR1cmUiKAoaQ3JlYXRlTm9tZW5jbGF0dXJlUmVzcG9uc2US",
            "CgoCaWQYASABKAUiQAoZVXBkYXRlTm9tZW5jbGF0dXJlUmVxdWVzdBIjCgxu",
            "b21lbmNsYXR1cmUYASABKAsyDS5Ob21lbmNsYXR1cmUiLQoaVXBkYXRlTm9t",
            "ZW5jbGF0dXJlUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCInChlEZWxldGVO",
            "b21lbmNsYXR1cmVSZXF1ZXN0EgoKAmlkGAEgASgFIi0KGkRlbGV0ZU5vbWVu",
            "Y2xhdHVyZVJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiXgoMTm9tZW5jbGF0",
            "dXJlEgoKAmlkGAEgASgFEgwKBGNvZGUYAiABKAkSDAoEbmFtZRgDIAEoCRIP",
            "CgdhcnRpY2xlGAQgASgJEhUKDXVuaXRPZk1lYXN1cmUYBSABKAkyow0KDlJl",
            "cXVlc3RTZXJ2aWNlEkQKD0dldEFsbEVxdWlwbWVudBIXLkdldEFsbEVxdWlw",
            "bWVudFJlcXVlc3QaGC5HZXRBbGxFcXVpcG1lbnRSZXNwb25zZRJECg9DcmVh",
            "dGVFcXVpcG1lbnQSFy5DcmVhdGVFcXVpcG1lbnRSZXF1ZXN0GhguQ3JlYXRl",
            "RXF1aXBtZW50UmVzcG9uc2USRAoPVXBkYXRlRXF1aXBtZW50EhcuVXBkYXRl",
            "RXF1aXBtZW50UmVxdWVzdBoYLlVwZGF0ZUVxdWlwbWVudFJlc3BvbnNlEkQK",
            "D0RlbGV0ZUVxdWlwbWVudBIXLkRlbGV0ZUVxdWlwbWVudFJlcXVlc3QaGC5E",
            "ZWxldGVFcXVpcG1lbnRSZXNwb25zZRI+Cg1HZXRBbGxEcml2ZXJzEhUuR2V0",
            "QWxsRHJpdmVyc1JlcXVlc3QaFi5HZXRBbGxEcml2ZXJzUmVzcG9uc2USOwoM",
            "Q3JlYXRlRHJpdmVyEhQuQ3JlYXRlRHJpdmVyUmVxdWVzdBoVLkNyZWF0ZURy",
            "aXZlclJlc3BvbnNlEjsKDFVwZGF0ZURyaXZlchIULlVwZGF0ZURyaXZlclJl",
            "cXVlc3QaFS5VcGRhdGVEcml2ZXJSZXNwb25zZRI7CgxEZWxldGVEcml2ZXIS",
            "FC5EZWxldGVEcml2ZXJSZXF1ZXN0GhUuRGVsZXRlRHJpdmVyUmVzcG9uc2US",
            "TQoSR2V0QWxsRGVmZWN0R3JvdXBzEhouR2V0QWxsRGVmZWN0R3JvdXBzUmVx",
            "dWVzdBobLkdldEFsbERlZmVjdEdyb3Vwc1Jlc3BvbnNlEkoKEUNyZWF0ZURl",
            "ZmVjdEdyb3VwEhkuQ3JlYXRlRGVmZWN0R3JvdXBSZXF1ZXN0GhouQ3JlYXRl",
            "RGVmZWN0R3JvdXBSZXNwb25zZRJKChFVcGRhdGVEZWZlY3RHcm91cBIZLlVw",
            "ZGF0ZURlZmVjdEdyb3VwUmVxdWVzdBoaLlVwZGF0ZURlZmVjdEdyb3VwUmVz",
            "cG9uc2USSgoRRGVsZXRlRGVmZWN0R3JvdXASGS5EZWxldGVEZWZlY3RHcm91",
            "cFJlcXVlc3QaGi5EZWxldGVEZWZlY3RHcm91cFJlc3BvbnNlEj4KDUdldEFs",
            "bERlZmVjdHMSFS5HZXRBbGxEZWZlY3RzUmVxdWVzdBoWLkdldEFsbERlZmVj",
            "dHNSZXNwb25zZRI7CgxDcmVhdGVEZWZlY3QSFC5DcmVhdGVEZWZlY3RSZXF1",
            "ZXN0GhUuQ3JlYXRlRGVmZWN0UmVzcG9uc2USOwoMVXBkYXRlRGVmZWN0EhQu",
            "VXBkYXRlRGVmZWN0UmVxdWVzdBoVLlVwZGF0ZURlZmVjdFJlc3BvbnNlEjsK",
            "DERlbGV0ZURlZmVjdBIULkRlbGV0ZURlZmVjdFJlcXVlc3QaFS5EZWxldGVE",
            "ZWZlY3RSZXNwb25zZRJHChBHZXRBbGxXYXJlaG91c2VzEhguR2V0QWxsV2Fy",
            "ZWhvdXNlc1JlcXVlc3QaGS5HZXRBbGxXYXJlaG91c2VzUmVzcG9uc2USRAoP",
            "Q3JlYXRlV2FyZWhvdXNlEhcuQ3JlYXRlV2FyZWhvdXNlUmVxdWVzdBoYLkNy",
            "ZWF0ZVdhcmVob3VzZVJlc3BvbnNlEkQKD1VwZGF0ZVdhcmVob3VzZRIXLlVw",
            "ZGF0ZVdhcmVob3VzZVJlcXVlc3QaGC5VcGRhdGVXYXJlaG91c2VSZXNwb25z",
            "ZRJECg9EZWxldGVXYXJlaG91c2USFy5EZWxldGVXYXJlaG91c2VSZXF1ZXN0",
            "GhguRGVsZXRlV2FyZWhvdXNlUmVzcG9uc2USUAoTR2V0QWxsTm9tZW5jbGF0",
            "dXJlcxIbLkdldEFsbE5vbWVuY2xhdHVyZXNSZXF1ZXN0GhwuR2V0QWxsTm9t",
            "ZW5jbGF0dXJlc1Jlc3BvbnNlEk0KEkNyZWF0ZU5vbWVuY2xhdHVyZRIaLkNy",
            "ZWF0ZU5vbWVuY2xhdHVyZVJlcXVlc3QaGy5DcmVhdGVOb21lbmNsYXR1cmVS",
            "ZXNwb25zZRJNChJVcGRhdGVOb21lbmNsYXR1cmUSGi5VcGRhdGVOb21lbmNs",
            "YXR1cmVSZXF1ZXN0GhsuVXBkYXRlTm9tZW5jbGF0dXJlUmVzcG9uc2USTQoS",
            "RGVsZXRlTm9tZW5jbGF0dXJlEhouRGVsZXRlTm9tZW5jbGF0dXJlUmVxdWVz",
            "dBobLkRlbGV0ZU5vbWVuY2xhdHVyZVJlc3BvbnNlQieqAiRSZXF1ZXN0TWFu",
            "YWdlbWVudC5TZXJ2ZXIuQ29udHJvbGxlcnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllEquipmentRequest), global::RequestManagement.Server.Controllers.GetAllEquipmentRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllEquipmentResponse), global::RequestManagement.Server.Controllers.GetAllEquipmentResponse.Parser, new[]{ "Equipment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateEquipmentRequest), global::RequestManagement.Server.Controllers.CreateEquipmentRequest.Parser, new[]{ "Name", "LicensePlate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateEquipmentResponse), global::RequestManagement.Server.Controllers.CreateEquipmentResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateEquipmentRequest), global::RequestManagement.Server.Controllers.UpdateEquipmentRequest.Parser, new[]{ "Id", "Name", "LicensePlate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateEquipmentResponse), global::RequestManagement.Server.Controllers.UpdateEquipmentResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteEquipmentRequest), global::RequestManagement.Server.Controllers.DeleteEquipmentRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteEquipmentResponse), global::RequestManagement.Server.Controllers.DeleteEquipmentResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Equipment), global::RequestManagement.Server.Controllers.Equipment.Parser, new[]{ "Id", "Name", "LicensePlate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDriversRequest), global::RequestManagement.Server.Controllers.GetAllDriversRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDriversResponse), global::RequestManagement.Server.Controllers.GetAllDriversResponse.Parser, new[]{ "Drivers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDriverRequest), global::RequestManagement.Server.Controllers.CreateDriverRequest.Parser, new[]{ "Driver" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDriverResponse), global::RequestManagement.Server.Controllers.CreateDriverResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDriverRequest), global::RequestManagement.Server.Controllers.UpdateDriverRequest.Parser, new[]{ "Driver" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDriverResponse), global::RequestManagement.Server.Controllers.UpdateDriverResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDriverRequest), global::RequestManagement.Server.Controllers.DeleteDriverRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDriverResponse), global::RequestManagement.Server.Controllers.DeleteDriverResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Driver), global::RequestManagement.Server.Controllers.Driver.Parser, new[]{ "Id", "FullName", "ShortName", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest), global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse), global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse.Parser, new[]{ "DefectGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDefectGroupRequest), global::RequestManagement.Server.Controllers.CreateDefectGroupRequest.Parser, new[]{ "DefectGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDefectGroupResponse), global::RequestManagement.Server.Controllers.CreateDefectGroupResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest), global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest.Parser, new[]{ "DefectGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse), global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest), global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse), global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DefectGroup), global::RequestManagement.Server.Controllers.DefectGroup.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDefectsRequest), global::RequestManagement.Server.Controllers.GetAllDefectsRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDefectsResponse), global::RequestManagement.Server.Controllers.GetAllDefectsResponse.Parser, new[]{ "Defect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDefectRequest), global::RequestManagement.Server.Controllers.CreateDefectRequest.Parser, new[]{ "Defect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDefectResponse), global::RequestManagement.Server.Controllers.CreateDefectResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDefectRequest), global::RequestManagement.Server.Controllers.UpdateDefectRequest.Parser, new[]{ "Defect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDefectResponse), global::RequestManagement.Server.Controllers.UpdateDefectResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDefectRequest), global::RequestManagement.Server.Controllers.DeleteDefectRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDefectResponse), global::RequestManagement.Server.Controllers.DeleteDefectResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Defect), global::RequestManagement.Server.Controllers.Defect.Parser, new[]{ "Id", "Name", "DefectGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllWarehousesRequest), global::RequestManagement.Server.Controllers.GetAllWarehousesRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllWarehousesResponse), global::RequestManagement.Server.Controllers.GetAllWarehousesResponse.Parser, new[]{ "Warehouse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateWarehouseRequest), global::RequestManagement.Server.Controllers.CreateWarehouseRequest.Parser, new[]{ "Warehouse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateWarehouseResponse), global::RequestManagement.Server.Controllers.CreateWarehouseResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateWarehouseRequest), global::RequestManagement.Server.Controllers.UpdateWarehouseRequest.Parser, new[]{ "Warehouse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateWarehouseResponse), global::RequestManagement.Server.Controllers.UpdateWarehouseResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteWarehouseRequest), global::RequestManagement.Server.Controllers.DeleteWarehouseRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteWarehouseResponse), global::RequestManagement.Server.Controllers.DeleteWarehouseResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Warehouse), global::RequestManagement.Server.Controllers.Warehouse.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest), global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse), global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse.Parser, new[]{ "Nomenclature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateNomenclatureRequest), global::RequestManagement.Server.Controllers.CreateNomenclatureRequest.Parser, new[]{ "Nomenclature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateNomenclatureResponse), global::RequestManagement.Server.Controllers.CreateNomenclatureResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest), global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest.Parser, new[]{ "Nomenclature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse), global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest), global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse), global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Nomenclature), global::RequestManagement.Server.Controllers.Nomenclature.Parser, new[]{ "Id", "Code", "Name", "Article", "UnitOfMeasure" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Сообщения для оборудования
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllEquipmentRequest : pb::IMessage<GetAllEquipmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllEquipmentRequest> _parser = new pb::MessageParser<GetAllEquipmentRequest>(() => new GetAllEquipmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllEquipmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentRequest(GetAllEquipmentRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentRequest Clone() {
      return new GetAllEquipmentRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllEquipmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllEquipmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllEquipmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllEquipmentResponse : pb::IMessage<GetAllEquipmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllEquipmentResponse> _parser = new pb::MessageParser<GetAllEquipmentResponse>(() => new GetAllEquipmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllEquipmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentResponse(GetAllEquipmentResponse other) : this() {
      equipment_ = other.equipment_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentResponse Clone() {
      return new GetAllEquipmentResponse(this);
    }

    /// <summary>Field number for the "equipment" field.</summary>
    public const int EquipmentFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Equipment> _repeated_equipment_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Equipment.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Equipment> equipment_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Equipment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Equipment> Equipment {
      get { return equipment_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllEquipmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllEquipmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!equipment_.Equals(other.equipment_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= equipment_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      equipment_.WriteTo(output, _repeated_equipment_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      equipment_.WriteTo(ref output, _repeated_equipment_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += equipment_.CalculateSize(_repeated_equipment_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllEquipmentResponse other) {
      if (other == null) {
        return;
      }
      equipment_.Add(other.equipment_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            equipment_.AddEntriesFrom(input, _repeated_equipment_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            equipment_.AddEntriesFrom(ref input, _repeated_equipment_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateEquipmentRequest : pb::IMessage<CreateEquipmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEquipmentRequest> _parser = new pb::MessageParser<CreateEquipmentRequest>(() => new CreateEquipmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEquipmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentRequest(CreateEquipmentRequest other) : this() {
      name_ = other.name_;
      licensePlate_ = other.licensePlate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentRequest Clone() {
      return new CreateEquipmentRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license_plate" field.</summary>
    public const int LicensePlateFieldNumber = 2;
    private string licensePlate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LicensePlate {
      get { return licensePlate_; }
      set {
        licensePlate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEquipmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEquipmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (LicensePlate != other.LicensePlate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LicensePlate.Length != 0) hash ^= LicensePlate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LicensePlate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicensePlate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEquipmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LicensePlate.Length != 0) {
        LicensePlate = other.LicensePlate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateEquipmentResponse : pb::IMessage<CreateEquipmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEquipmentResponse> _parser = new pb::MessageParser<CreateEquipmentResponse>(() => new CreateEquipmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEquipmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentResponse(CreateEquipmentResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentResponse Clone() {
      return new CreateEquipmentResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEquipmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEquipmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEquipmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateEquipmentRequest : pb::IMessage<UpdateEquipmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateEquipmentRequest> _parser = new pb::MessageParser<UpdateEquipmentRequest>(() => new UpdateEquipmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateEquipmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentRequest(UpdateEquipmentRequest other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      licensePlate_ = other.licensePlate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentRequest Clone() {
      return new UpdateEquipmentRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license_plate" field.</summary>
    public const int LicensePlateFieldNumber = 3;
    private string licensePlate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LicensePlate {
      get { return licensePlate_; }
      set {
        licensePlate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateEquipmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateEquipmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (LicensePlate != other.LicensePlate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LicensePlate.Length != 0) hash ^= LicensePlate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LicensePlate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicensePlate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateEquipmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LicensePlate.Length != 0) {
        LicensePlate = other.LicensePlate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateEquipmentResponse : pb::IMessage<UpdateEquipmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateEquipmentResponse> _parser = new pb::MessageParser<UpdateEquipmentResponse>(() => new UpdateEquipmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateEquipmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentResponse(UpdateEquipmentResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentResponse Clone() {
      return new UpdateEquipmentResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateEquipmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateEquipmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateEquipmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteEquipmentRequest : pb::IMessage<DeleteEquipmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteEquipmentRequest> _parser = new pb::MessageParser<DeleteEquipmentRequest>(() => new DeleteEquipmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteEquipmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentRequest(DeleteEquipmentRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentRequest Clone() {
      return new DeleteEquipmentRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteEquipmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteEquipmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteEquipmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteEquipmentResponse : pb::IMessage<DeleteEquipmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteEquipmentResponse> _parser = new pb::MessageParser<DeleteEquipmentResponse>(() => new DeleteEquipmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteEquipmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentResponse(DeleteEquipmentResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentResponse Clone() {
      return new DeleteEquipmentResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteEquipmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteEquipmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteEquipmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Equipment : pb::IMessage<Equipment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Equipment> _parser = new pb::MessageParser<Equipment>(() => new Equipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Equipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment(Equipment other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      licensePlate_ = other.licensePlate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment Clone() {
      return new Equipment(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license_plate" field.</summary>
    public const int LicensePlateFieldNumber = 3;
    private string licensePlate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LicensePlate {
      get { return licensePlate_; }
      set {
        licensePlate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Equipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Equipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (LicensePlate != other.LicensePlate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LicensePlate.Length != 0) hash ^= LicensePlate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LicensePlate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicensePlate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Equipment other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LicensePlate.Length != 0) {
        LicensePlate = other.LicensePlate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDriversRequest : pb::IMessage<GetAllDriversRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDriversRequest> _parser = new pb::MessageParser<GetAllDriversRequest>(() => new GetAllDriversRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDriversRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversRequest(GetAllDriversRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversRequest Clone() {
      return new GetAllDriversRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    /// <summary>
    /// Фильтр для поиска по имени или должности
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDriversRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDriversRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDriversRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDriversResponse : pb::IMessage<GetAllDriversResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDriversResponse> _parser = new pb::MessageParser<GetAllDriversResponse>(() => new GetAllDriversResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDriversResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversResponse(GetAllDriversResponse other) : this() {
      drivers_ = other.drivers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversResponse Clone() {
      return new GetAllDriversResponse(this);
    }

    /// <summary>Field number for the "drivers" field.</summary>
    public const int DriversFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Driver> _repeated_drivers_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Driver.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Driver> drivers_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Driver>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Driver> Drivers {
      get { return drivers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDriversResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDriversResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!drivers_.Equals(other.drivers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= drivers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      drivers_.WriteTo(output, _repeated_drivers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      drivers_.WriteTo(ref output, _repeated_drivers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += drivers_.CalculateSize(_repeated_drivers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDriversResponse other) {
      if (other == null) {
        return;
      }
      drivers_.Add(other.drivers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            drivers_.AddEntriesFrom(input, _repeated_drivers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            drivers_.AddEntriesFrom(ref input, _repeated_drivers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDriverRequest : pb::IMessage<CreateDriverRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDriverRequest> _parser = new pb::MessageParser<CreateDriverRequest>(() => new CreateDriverRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDriverRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverRequest(CreateDriverRequest other) : this() {
      driver_ = other.driver_ != null ? other.driver_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverRequest Clone() {
      return new CreateDriverRequest(this);
    }

    /// <summary>Field number for the "driver" field.</summary>
    public const int DriverFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Driver driver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Driver Driver {
      get { return driver_; }
      set {
        driver_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDriverRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDriverRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Driver, other.Driver)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (driver_ != null) hash ^= Driver.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (driver_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Driver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (driver_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Driver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (driver_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Driver);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDriverRequest other) {
      if (other == null) {
        return;
      }
      if (other.driver_ != null) {
        if (driver_ == null) {
          Driver = new global::RequestManagement.Server.Controllers.Driver();
        }
        Driver.MergeFrom(other.Driver);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (driver_ == null) {
              Driver = new global::RequestManagement.Server.Controllers.Driver();
            }
            input.ReadMessage(Driver);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (driver_ == null) {
              Driver = new global::RequestManagement.Server.Controllers.Driver();
            }
            input.ReadMessage(Driver);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDriverResponse : pb::IMessage<CreateDriverResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDriverResponse> _parser = new pb::MessageParser<CreateDriverResponse>(() => new CreateDriverResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDriverResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverResponse(CreateDriverResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverResponse Clone() {
      return new CreateDriverResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID созданного водителя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDriverResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDriverResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDriverResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDriverRequest : pb::IMessage<UpdateDriverRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDriverRequest> _parser = new pb::MessageParser<UpdateDriverRequest>(() => new UpdateDriverRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDriverRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverRequest(UpdateDriverRequest other) : this() {
      driver_ = other.driver_ != null ? other.driver_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverRequest Clone() {
      return new UpdateDriverRequest(this);
    }

    /// <summary>Field number for the "driver" field.</summary>
    public const int DriverFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Driver driver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Driver Driver {
      get { return driver_; }
      set {
        driver_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDriverRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDriverRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Driver, other.Driver)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (driver_ != null) hash ^= Driver.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (driver_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Driver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (driver_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Driver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (driver_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Driver);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDriverRequest other) {
      if (other == null) {
        return;
      }
      if (other.driver_ != null) {
        if (driver_ == null) {
          Driver = new global::RequestManagement.Server.Controllers.Driver();
        }
        Driver.MergeFrom(other.Driver);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (driver_ == null) {
              Driver = new global::RequestManagement.Server.Controllers.Driver();
            }
            input.ReadMessage(Driver);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (driver_ == null) {
              Driver = new global::RequestManagement.Server.Controllers.Driver();
            }
            input.ReadMessage(Driver);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDriverResponse : pb::IMessage<UpdateDriverResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDriverResponse> _parser = new pb::MessageParser<UpdateDriverResponse>(() => new UpdateDriverResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDriverResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverResponse(UpdateDriverResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverResponse Clone() {
      return new UpdateDriverResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDriverResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDriverResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDriverResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDriverRequest : pb::IMessage<DeleteDriverRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDriverRequest> _parser = new pb::MessageParser<DeleteDriverRequest>(() => new DeleteDriverRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDriverRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverRequest(DeleteDriverRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverRequest Clone() {
      return new DeleteDriverRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDriverRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDriverRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDriverRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDriverResponse : pb::IMessage<DeleteDriverResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDriverResponse> _parser = new pb::MessageParser<DeleteDriverResponse>(() => new DeleteDriverResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDriverResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverResponse(DeleteDriverResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverResponse Clone() {
      return new DeleteDriverResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDriverResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDriverResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDriverResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Driver : pb::IMessage<Driver>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Driver> _parser = new pb::MessageParser<Driver>(() => new Driver());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Driver> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Driver() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Driver(Driver other) : this() {
      id_ = other.id_;
      fullName_ = other.fullName_;
      shortName_ = other.shortName_;
      position_ = other.position_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Driver Clone() {
      return new Driver(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "full_name" field.</summary>
    public const int FullNameFieldNumber = 2;
    private string fullName_ = "";
    /// <summary>
    /// Полное ФИО
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "short_name" field.</summary>
    public const int ShortNameFieldNumber = 3;
    private string shortName_ = "";
    /// <summary>
    /// Фамилия с инициалами
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShortName {
      get { return shortName_; }
      set {
        shortName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private string position_ = "";
    /// <summary>
    /// Должность
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Position {
      get { return position_; }
      set {
        position_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Driver);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Driver other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FullName != other.FullName) return false;
      if (ShortName != other.ShortName) return false;
      if (Position != other.Position) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (ShortName.Length != 0) hash ^= ShortName.GetHashCode();
      if (Position.Length != 0) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FullName);
      }
      if (ShortName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ShortName);
      }
      if (Position.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FullName);
      }
      if (ShortName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ShortName);
      }
      if (Position.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (ShortName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortName);
      }
      if (Position.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Driver other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.ShortName.Length != 0) {
        ShortName = other.ShortName;
      }
      if (other.Position.Length != 0) {
        Position = other.Position;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FullName = input.ReadString();
            break;
          }
          case 26: {
            ShortName = input.ReadString();
            break;
          }
          case 34: {
            Position = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FullName = input.ReadString();
            break;
          }
          case 26: {
            ShortName = input.ReadString();
            break;
          }
          case 34: {
            Position = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDefectGroupsRequest : pb::IMessage<GetAllDefectGroupsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDefectGroupsRequest> _parser = new pb::MessageParser<GetAllDefectGroupsRequest>(() => new GetAllDefectGroupsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDefectGroupsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsRequest(GetAllDefectGroupsRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsRequest Clone() {
      return new GetAllDefectGroupsRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDefectGroupsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDefectGroupsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDefectGroupsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDefectGroupsResponse : pb::IMessage<GetAllDefectGroupsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDefectGroupsResponse> _parser = new pb::MessageParser<GetAllDefectGroupsResponse>(() => new GetAllDefectGroupsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDefectGroupsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsResponse(GetAllDefectGroupsResponse other) : this() {
      defectGroup_ = other.defectGroup_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsResponse Clone() {
      return new GetAllDefectGroupsResponse(this);
    }

    /// <summary>Field number for the "defectGroup" field.</summary>
    public const int DefectGroupFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.DefectGroup> _repeated_defectGroup_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.DefectGroup.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.DefectGroup> defectGroup_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.DefectGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.DefectGroup> DefectGroup {
      get { return defectGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDefectGroupsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDefectGroupsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!defectGroup_.Equals(other.defectGroup_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= defectGroup_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      defectGroup_.WriteTo(output, _repeated_defectGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      defectGroup_.WriteTo(ref output, _repeated_defectGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += defectGroup_.CalculateSize(_repeated_defectGroup_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDefectGroupsResponse other) {
      if (other == null) {
        return;
      }
      defectGroup_.Add(other.defectGroup_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            defectGroup_.AddEntriesFrom(input, _repeated_defectGroup_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            defectGroup_.AddEntriesFrom(ref input, _repeated_defectGroup_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDefectGroupRequest : pb::IMessage<CreateDefectGroupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDefectGroupRequest> _parser = new pb::MessageParser<CreateDefectGroupRequest>(() => new CreateDefectGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDefectGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupRequest(CreateDefectGroupRequest other) : this() {
      defectGroup_ = other.defectGroup_ != null ? other.defectGroup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupRequest Clone() {
      return new CreateDefectGroupRequest(this);
    }

    /// <summary>Field number for the "defectGroup" field.</summary>
    public const int DefectGroupFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.DefectGroup defectGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.DefectGroup DefectGroup {
      get { return defectGroup_; }
      set {
        defectGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDefectGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDefectGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DefectGroup, other.DefectGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (defectGroup_ != null) hash ^= DefectGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defectGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefectGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defectGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefectGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (defectGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefectGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDefectGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.defectGroup_ != null) {
        if (defectGroup_ == null) {
          DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
        }
        DefectGroup.MergeFrom(other.DefectGroup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defectGroup_ == null) {
              DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
            }
            input.ReadMessage(DefectGroup);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defectGroup_ == null) {
              DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
            }
            input.ReadMessage(DefectGroup);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDefectGroupResponse : pb::IMessage<CreateDefectGroupResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDefectGroupResponse> _parser = new pb::MessageParser<CreateDefectGroupResponse>(() => new CreateDefectGroupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDefectGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupResponse(CreateDefectGroupResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupResponse Clone() {
      return new CreateDefectGroupResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDefectGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDefectGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDefectGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDefectGroupRequest : pb::IMessage<UpdateDefectGroupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDefectGroupRequest> _parser = new pb::MessageParser<UpdateDefectGroupRequest>(() => new UpdateDefectGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDefectGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupRequest(UpdateDefectGroupRequest other) : this() {
      defectGroup_ = other.defectGroup_ != null ? other.defectGroup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupRequest Clone() {
      return new UpdateDefectGroupRequest(this);
    }

    /// <summary>Field number for the "defectGroup" field.</summary>
    public const int DefectGroupFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.DefectGroup defectGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.DefectGroup DefectGroup {
      get { return defectGroup_; }
      set {
        defectGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDefectGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDefectGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DefectGroup, other.DefectGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (defectGroup_ != null) hash ^= DefectGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defectGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefectGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defectGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefectGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (defectGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefectGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDefectGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.defectGroup_ != null) {
        if (defectGroup_ == null) {
          DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
        }
        DefectGroup.MergeFrom(other.DefectGroup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defectGroup_ == null) {
              DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
            }
            input.ReadMessage(DefectGroup);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defectGroup_ == null) {
              DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
            }
            input.ReadMessage(DefectGroup);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDefectGroupResponse : pb::IMessage<UpdateDefectGroupResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDefectGroupResponse> _parser = new pb::MessageParser<UpdateDefectGroupResponse>(() => new UpdateDefectGroupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDefectGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupResponse(UpdateDefectGroupResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupResponse Clone() {
      return new UpdateDefectGroupResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDefectGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDefectGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDefectGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDefectGroupRequest : pb::IMessage<DeleteDefectGroupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDefectGroupRequest> _parser = new pb::MessageParser<DeleteDefectGroupRequest>(() => new DeleteDefectGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDefectGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupRequest(DeleteDefectGroupRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupRequest Clone() {
      return new DeleteDefectGroupRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDefectGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDefectGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDefectGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDefectGroupResponse : pb::IMessage<DeleteDefectGroupResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDefectGroupResponse> _parser = new pb::MessageParser<DeleteDefectGroupResponse>(() => new DeleteDefectGroupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDefectGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupResponse(DeleteDefectGroupResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupResponse Clone() {
      return new DeleteDefectGroupResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDefectGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDefectGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDefectGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DefectGroup : pb::IMessage<DefectGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DefectGroup> _parser = new pb::MessageParser<DefectGroup>(() => new DefectGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DefectGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectGroup(DefectGroup other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectGroup Clone() {
      return new DefectGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DefectGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DefectGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DefectGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDefectsRequest : pb::IMessage<GetAllDefectsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDefectsRequest> _parser = new pb::MessageParser<GetAllDefectsRequest>(() => new GetAllDefectsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDefectsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsRequest(GetAllDefectsRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsRequest Clone() {
      return new GetAllDefectsRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDefectsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDefectsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDefectsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDefectsResponse : pb::IMessage<GetAllDefectsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDefectsResponse> _parser = new pb::MessageParser<GetAllDefectsResponse>(() => new GetAllDefectsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDefectsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsResponse(GetAllDefectsResponse other) : this() {
      defect_ = other.defect_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsResponse Clone() {
      return new GetAllDefectsResponse(this);
    }

    /// <summary>Field number for the "defect" field.</summary>
    public const int DefectFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Defect> _repeated_defect_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Defect.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Defect> defect_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Defect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Defect> Defect {
      get { return defect_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDefectsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDefectsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!defect_.Equals(other.defect_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= defect_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      defect_.WriteTo(output, _repeated_defect_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      defect_.WriteTo(ref output, _repeated_defect_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += defect_.CalculateSize(_repeated_defect_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDefectsResponse other) {
      if (other == null) {
        return;
      }
      defect_.Add(other.defect_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            defect_.AddEntriesFrom(input, _repeated_defect_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            defect_.AddEntriesFrom(ref input, _repeated_defect_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDefectRequest : pb::IMessage<CreateDefectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDefectRequest> _parser = new pb::MessageParser<CreateDefectRequest>(() => new CreateDefectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDefectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectRequest(CreateDefectRequest other) : this() {
      defect_ = other.defect_ != null ? other.defect_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectRequest Clone() {
      return new CreateDefectRequest(this);
    }

    /// <summary>Field number for the "defect" field.</summary>
    public const int DefectFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Defect defect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Defect Defect {
      get { return defect_; }
      set {
        defect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDefectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDefectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Defect, other.Defect)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (defect_ != null) hash ^= Defect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Defect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Defect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (defect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Defect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDefectRequest other) {
      if (other == null) {
        return;
      }
      if (other.defect_ != null) {
        if (defect_ == null) {
          Defect = new global::RequestManagement.Server.Controllers.Defect();
        }
        Defect.MergeFrom(other.Defect);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defect_ == null) {
              Defect = new global::RequestManagement.Server.Controllers.Defect();
            }
            input.ReadMessage(Defect);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defect_ == null) {
              Defect = new global::RequestManagement.Server.Controllers.Defect();
            }
            input.ReadMessage(Defect);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDefectResponse : pb::IMessage<CreateDefectResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDefectResponse> _parser = new pb::MessageParser<CreateDefectResponse>(() => new CreateDefectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDefectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectResponse(CreateDefectResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectResponse Clone() {
      return new CreateDefectResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDefectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDefectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDefectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDefectRequest : pb::IMessage<UpdateDefectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDefectRequest> _parser = new pb::MessageParser<UpdateDefectRequest>(() => new UpdateDefectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDefectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectRequest(UpdateDefectRequest other) : this() {
      defect_ = other.defect_ != null ? other.defect_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectRequest Clone() {
      return new UpdateDefectRequest(this);
    }

    /// <summary>Field number for the "defect" field.</summary>
    public const int DefectFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Defect defect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Defect Defect {
      get { return defect_; }
      set {
        defect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDefectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDefectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Defect, other.Defect)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (defect_ != null) hash ^= Defect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Defect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Defect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (defect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Defect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDefectRequest other) {
      if (other == null) {
        return;
      }
      if (other.defect_ != null) {
        if (defect_ == null) {
          Defect = new global::RequestManagement.Server.Controllers.Defect();
        }
        Defect.MergeFrom(other.Defect);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defect_ == null) {
              Defect = new global::RequestManagement.Server.Controllers.Defect();
            }
            input.ReadMessage(Defect);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defect_ == null) {
              Defect = new global::RequestManagement.Server.Controllers.Defect();
            }
            input.ReadMessage(Defect);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDefectResponse : pb::IMessage<UpdateDefectResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDefectResponse> _parser = new pb::MessageParser<UpdateDefectResponse>(() => new UpdateDefectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDefectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectResponse(UpdateDefectResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectResponse Clone() {
      return new UpdateDefectResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDefectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDefectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDefectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDefectRequest : pb::IMessage<DeleteDefectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDefectRequest> _parser = new pb::MessageParser<DeleteDefectRequest>(() => new DeleteDefectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDefectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectRequest(DeleteDefectRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectRequest Clone() {
      return new DeleteDefectRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDefectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDefectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDefectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDefectResponse : pb::IMessage<DeleteDefectResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDefectResponse> _parser = new pb::MessageParser<DeleteDefectResponse>(() => new DeleteDefectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDefectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectResponse(DeleteDefectResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectResponse Clone() {
      return new DeleteDefectResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDefectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDefectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDefectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Defect : pb::IMessage<Defect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Defect> _parser = new pb::MessageParser<Defect>(() => new Defect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Defect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect(Defect other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      defectGroupId_ = other.defectGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect Clone() {
      return new Defect(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "defectGroupId" field.</summary>
    public const int DefectGroupIdFieldNumber = 3;
    private int defectGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefectGroupId {
      get { return defectGroupId_; }
      set {
        defectGroupId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Defect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Defect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (DefectGroupId != other.DefectGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DefectGroupId != 0) hash ^= DefectGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DefectGroupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefectGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DefectGroupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefectGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DefectGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefectGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Defect other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DefectGroupId != 0) {
        DefectGroupId = other.DefectGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DefectGroupId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DefectGroupId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllWarehousesRequest : pb::IMessage<GetAllWarehousesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllWarehousesRequest> _parser = new pb::MessageParser<GetAllWarehousesRequest>(() => new GetAllWarehousesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllWarehousesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesRequest(GetAllWarehousesRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesRequest Clone() {
      return new GetAllWarehousesRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllWarehousesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllWarehousesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllWarehousesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllWarehousesResponse : pb::IMessage<GetAllWarehousesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllWarehousesResponse> _parser = new pb::MessageParser<GetAllWarehousesResponse>(() => new GetAllWarehousesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllWarehousesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesResponse(GetAllWarehousesResponse other) : this() {
      warehouse_ = other.warehouse_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesResponse Clone() {
      return new GetAllWarehousesResponse(this);
    }

    /// <summary>Field number for the "warehouse" field.</summary>
    public const int WarehouseFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Warehouse> _repeated_warehouse_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Warehouse.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Warehouse> warehouse_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Warehouse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Warehouse> Warehouse {
      get { return warehouse_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllWarehousesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllWarehousesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!warehouse_.Equals(other.warehouse_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= warehouse_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      warehouse_.WriteTo(output, _repeated_warehouse_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      warehouse_.WriteTo(ref output, _repeated_warehouse_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += warehouse_.CalculateSize(_repeated_warehouse_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllWarehousesResponse other) {
      if (other == null) {
        return;
      }
      warehouse_.Add(other.warehouse_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            warehouse_.AddEntriesFrom(input, _repeated_warehouse_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            warehouse_.AddEntriesFrom(ref input, _repeated_warehouse_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateWarehouseRequest : pb::IMessage<CreateWarehouseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateWarehouseRequest> _parser = new pb::MessageParser<CreateWarehouseRequest>(() => new CreateWarehouseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateWarehouseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseRequest(CreateWarehouseRequest other) : this() {
      warehouse_ = other.warehouse_ != null ? other.warehouse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseRequest Clone() {
      return new CreateWarehouseRequest(this);
    }

    /// <summary>Field number for the "warehouse" field.</summary>
    public const int WarehouseFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Warehouse warehouse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Warehouse Warehouse {
      get { return warehouse_; }
      set {
        warehouse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateWarehouseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateWarehouseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Warehouse, other.Warehouse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (warehouse_ != null) hash ^= Warehouse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (warehouse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Warehouse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (warehouse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Warehouse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (warehouse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Warehouse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateWarehouseRequest other) {
      if (other == null) {
        return;
      }
      if (other.warehouse_ != null) {
        if (warehouse_ == null) {
          Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
        }
        Warehouse.MergeFrom(other.Warehouse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (warehouse_ == null) {
              Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
            }
            input.ReadMessage(Warehouse);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (warehouse_ == null) {
              Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
            }
            input.ReadMessage(Warehouse);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateWarehouseResponse : pb::IMessage<CreateWarehouseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateWarehouseResponse> _parser = new pb::MessageParser<CreateWarehouseResponse>(() => new CreateWarehouseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateWarehouseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseResponse(CreateWarehouseResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseResponse Clone() {
      return new CreateWarehouseResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateWarehouseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateWarehouseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateWarehouseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateWarehouseRequest : pb::IMessage<UpdateWarehouseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateWarehouseRequest> _parser = new pb::MessageParser<UpdateWarehouseRequest>(() => new UpdateWarehouseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateWarehouseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseRequest(UpdateWarehouseRequest other) : this() {
      warehouse_ = other.warehouse_ != null ? other.warehouse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseRequest Clone() {
      return new UpdateWarehouseRequest(this);
    }

    /// <summary>Field number for the "warehouse" field.</summary>
    public const int WarehouseFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Warehouse warehouse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Warehouse Warehouse {
      get { return warehouse_; }
      set {
        warehouse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateWarehouseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateWarehouseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Warehouse, other.Warehouse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (warehouse_ != null) hash ^= Warehouse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (warehouse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Warehouse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (warehouse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Warehouse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (warehouse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Warehouse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateWarehouseRequest other) {
      if (other == null) {
        return;
      }
      if (other.warehouse_ != null) {
        if (warehouse_ == null) {
          Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
        }
        Warehouse.MergeFrom(other.Warehouse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (warehouse_ == null) {
              Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
            }
            input.ReadMessage(Warehouse);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (warehouse_ == null) {
              Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
            }
            input.ReadMessage(Warehouse);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateWarehouseResponse : pb::IMessage<UpdateWarehouseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateWarehouseResponse> _parser = new pb::MessageParser<UpdateWarehouseResponse>(() => new UpdateWarehouseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateWarehouseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseResponse(UpdateWarehouseResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseResponse Clone() {
      return new UpdateWarehouseResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateWarehouseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateWarehouseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateWarehouseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteWarehouseRequest : pb::IMessage<DeleteWarehouseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteWarehouseRequest> _parser = new pb::MessageParser<DeleteWarehouseRequest>(() => new DeleteWarehouseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteWarehouseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseRequest(DeleteWarehouseRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseRequest Clone() {
      return new DeleteWarehouseRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteWarehouseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteWarehouseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteWarehouseRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteWarehouseResponse : pb::IMessage<DeleteWarehouseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteWarehouseResponse> _parser = new pb::MessageParser<DeleteWarehouseResponse>(() => new DeleteWarehouseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteWarehouseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseResponse(DeleteWarehouseResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseResponse Clone() {
      return new DeleteWarehouseResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteWarehouseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteWarehouseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteWarehouseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Warehouse : pb::IMessage<Warehouse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Warehouse> _parser = new pb::MessageParser<Warehouse>(() => new Warehouse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Warehouse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Warehouse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Warehouse(Warehouse other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Warehouse Clone() {
      return new Warehouse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Warehouse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Warehouse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Warehouse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllNomenclaturesRequest : pb::IMessage<GetAllNomenclaturesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllNomenclaturesRequest> _parser = new pb::MessageParser<GetAllNomenclaturesRequest>(() => new GetAllNomenclaturesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllNomenclaturesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesRequest(GetAllNomenclaturesRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesRequest Clone() {
      return new GetAllNomenclaturesRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllNomenclaturesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllNomenclaturesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllNomenclaturesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllNomenclaturesResponse : pb::IMessage<GetAllNomenclaturesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllNomenclaturesResponse> _parser = new pb::MessageParser<GetAllNomenclaturesResponse>(() => new GetAllNomenclaturesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllNomenclaturesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesResponse(GetAllNomenclaturesResponse other) : this() {
      nomenclature_ = other.nomenclature_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesResponse Clone() {
      return new GetAllNomenclaturesResponse(this);
    }

    /// <summary>Field number for the "nomenclature" field.</summary>
    public const int NomenclatureFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Nomenclature> _repeated_nomenclature_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Nomenclature.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Nomenclature> nomenclature_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Nomenclature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Nomenclature> Nomenclature {
      get { return nomenclature_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllNomenclaturesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllNomenclaturesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nomenclature_.Equals(other.nomenclature_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nomenclature_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      nomenclature_.WriteTo(output, _repeated_nomenclature_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      nomenclature_.WriteTo(ref output, _repeated_nomenclature_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += nomenclature_.CalculateSize(_repeated_nomenclature_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllNomenclaturesResponse other) {
      if (other == null) {
        return;
      }
      nomenclature_.Add(other.nomenclature_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nomenclature_.AddEntriesFrom(input, _repeated_nomenclature_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            nomenclature_.AddEntriesFrom(ref input, _repeated_nomenclature_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateNomenclatureRequest : pb::IMessage<CreateNomenclatureRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateNomenclatureRequest> _parser = new pb::MessageParser<CreateNomenclatureRequest>(() => new CreateNomenclatureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateNomenclatureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureRequest(CreateNomenclatureRequest other) : this() {
      nomenclature_ = other.nomenclature_ != null ? other.nomenclature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureRequest Clone() {
      return new CreateNomenclatureRequest(this);
    }

    /// <summary>Field number for the "nomenclature" field.</summary>
    public const int NomenclatureFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Nomenclature nomenclature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Nomenclature Nomenclature {
      get { return nomenclature_; }
      set {
        nomenclature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateNomenclatureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateNomenclatureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Nomenclature, other.Nomenclature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nomenclature_ != null) hash ^= Nomenclature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nomenclature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nomenclature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nomenclature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nomenclature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateNomenclatureRequest other) {
      if (other == null) {
        return;
      }
      if (other.nomenclature_ != null) {
        if (nomenclature_ == null) {
          Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
        }
        Nomenclature.MergeFrom(other.Nomenclature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateNomenclatureResponse : pb::IMessage<CreateNomenclatureResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateNomenclatureResponse> _parser = new pb::MessageParser<CreateNomenclatureResponse>(() => new CreateNomenclatureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateNomenclatureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureResponse(CreateNomenclatureResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureResponse Clone() {
      return new CreateNomenclatureResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateNomenclatureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateNomenclatureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateNomenclatureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateNomenclatureRequest : pb::IMessage<UpdateNomenclatureRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateNomenclatureRequest> _parser = new pb::MessageParser<UpdateNomenclatureRequest>(() => new UpdateNomenclatureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateNomenclatureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureRequest(UpdateNomenclatureRequest other) : this() {
      nomenclature_ = other.nomenclature_ != null ? other.nomenclature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureRequest Clone() {
      return new UpdateNomenclatureRequest(this);
    }

    /// <summary>Field number for the "nomenclature" field.</summary>
    public const int NomenclatureFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Nomenclature nomenclature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Nomenclature Nomenclature {
      get { return nomenclature_; }
      set {
        nomenclature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateNomenclatureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateNomenclatureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Nomenclature, other.Nomenclature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nomenclature_ != null) hash ^= Nomenclature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nomenclature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nomenclature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nomenclature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nomenclature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateNomenclatureRequest other) {
      if (other == null) {
        return;
      }
      if (other.nomenclature_ != null) {
        if (nomenclature_ == null) {
          Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
        }
        Nomenclature.MergeFrom(other.Nomenclature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateNomenclatureResponse : pb::IMessage<UpdateNomenclatureResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateNomenclatureResponse> _parser = new pb::MessageParser<UpdateNomenclatureResponse>(() => new UpdateNomenclatureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateNomenclatureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureResponse(UpdateNomenclatureResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureResponse Clone() {
      return new UpdateNomenclatureResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateNomenclatureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateNomenclatureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateNomenclatureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteNomenclatureRequest : pb::IMessage<DeleteNomenclatureRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteNomenclatureRequest> _parser = new pb::MessageParser<DeleteNomenclatureRequest>(() => new DeleteNomenclatureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteNomenclatureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureRequest(DeleteNomenclatureRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureRequest Clone() {
      return new DeleteNomenclatureRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteNomenclatureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteNomenclatureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteNomenclatureRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteNomenclatureResponse : pb::IMessage<DeleteNomenclatureResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteNomenclatureResponse> _parser = new pb::MessageParser<DeleteNomenclatureResponse>(() => new DeleteNomenclatureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteNomenclatureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureResponse(DeleteNomenclatureResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureResponse Clone() {
      return new DeleteNomenclatureResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteNomenclatureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteNomenclatureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteNomenclatureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Nomenclature : pb::IMessage<Nomenclature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Nomenclature> _parser = new pb::MessageParser<Nomenclature>(() => new Nomenclature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Nomenclature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Nomenclature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Nomenclature(Nomenclature other) : this() {
      id_ = other.id_;
      code_ = other.code_;
      name_ = other.name_;
      article_ = other.article_;
      unitOfMeasure_ = other.unitOfMeasure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Nomenclature Clone() {
      return new Nomenclature(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "article" field.</summary>
    public const int ArticleFieldNumber = 4;
    private string article_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Article {
      get { return article_; }
      set {
        article_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unitOfMeasure" field.</summary>
    public const int UnitOfMeasureFieldNumber = 5;
    private string unitOfMeasure_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnitOfMeasure {
      get { return unitOfMeasure_; }
      set {
        unitOfMeasure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Nomenclature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Nomenclature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Code != other.Code) return false;
      if (Name != other.Name) return false;
      if (Article != other.Article) return false;
      if (UnitOfMeasure != other.UnitOfMeasure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Article.Length != 0) hash ^= Article.GetHashCode();
      if (UnitOfMeasure.Length != 0) hash ^= UnitOfMeasure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Article.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Article.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Article.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Nomenclature other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Article.Length != 0) {
        Article = other.Article;
      }
      if (other.UnitOfMeasure.Length != 0) {
        UnitOfMeasure = other.UnitOfMeasure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Article = input.ReadString();
            break;
          }
          case 42: {
            UnitOfMeasure = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Article = input.ReadString();
            break;
          }
          case 42: {
            UnitOfMeasure = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code


//RequestGrpc.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/request.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RequestManagement.Server.Controllers {
  public static partial class RequestService
  {
    static readonly string __ServiceName = "RequestService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllEquipmentRequest> __Marshaller_GetAllEquipmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllEquipmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllEquipmentResponse> __Marshaller_GetAllEquipmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllEquipmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateEquipmentRequest> __Marshaller_CreateEquipmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateEquipmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateEquipmentResponse> __Marshaller_CreateEquipmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateEquipmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateEquipmentRequest> __Marshaller_UpdateEquipmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateEquipmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateEquipmentResponse> __Marshaller_UpdateEquipmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateEquipmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteEquipmentRequest> __Marshaller_DeleteEquipmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteEquipmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteEquipmentResponse> __Marshaller_DeleteEquipmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteEquipmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDriversRequest> __Marshaller_GetAllDriversRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDriversRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDriversResponse> __Marshaller_GetAllDriversResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDriversResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDriverRequest> __Marshaller_CreateDriverRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDriverRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDriverResponse> __Marshaller_CreateDriverResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDriverResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDriverRequest> __Marshaller_UpdateDriverRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDriverRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDriverResponse> __Marshaller_UpdateDriverResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDriverResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDriverRequest> __Marshaller_DeleteDriverRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDriverRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDriverResponse> __Marshaller_DeleteDriverResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDriverResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest> __Marshaller_GetAllDefectGroupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse> __Marshaller_GetAllDefectGroupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDefectGroupRequest> __Marshaller_CreateDefectGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDefectGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDefectGroupResponse> __Marshaller_CreateDefectGroupResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDefectGroupResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest> __Marshaller_UpdateDefectGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse> __Marshaller_UpdateDefectGroupResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest> __Marshaller_DeleteDefectGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse> __Marshaller_DeleteDefectGroupResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDefectsRequest> __Marshaller_GetAllDefectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDefectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDefectsResponse> __Marshaller_GetAllDefectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDefectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDefectRequest> __Marshaller_CreateDefectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDefectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDefectResponse> __Marshaller_CreateDefectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDefectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDefectRequest> __Marshaller_UpdateDefectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDefectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDefectResponse> __Marshaller_UpdateDefectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDefectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDefectRequest> __Marshaller_DeleteDefectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDefectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDefectResponse> __Marshaller_DeleteDefectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDefectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllWarehousesRequest> __Marshaller_GetAllWarehousesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllWarehousesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllWarehousesResponse> __Marshaller_GetAllWarehousesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllWarehousesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateWarehouseRequest> __Marshaller_CreateWarehouseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateWarehouseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateWarehouseResponse> __Marshaller_CreateWarehouseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateWarehouseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateWarehouseRequest> __Marshaller_UpdateWarehouseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateWarehouseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateWarehouseResponse> __Marshaller_UpdateWarehouseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateWarehouseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteWarehouseRequest> __Marshaller_DeleteWarehouseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteWarehouseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteWarehouseResponse> __Marshaller_DeleteWarehouseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteWarehouseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest> __Marshaller_GetAllNomenclaturesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse> __Marshaller_GetAllNomenclaturesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateNomenclatureRequest> __Marshaller_CreateNomenclatureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateNomenclatureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateNomenclatureResponse> __Marshaller_CreateNomenclatureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateNomenclatureResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest> __Marshaller_UpdateNomenclatureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse> __Marshaller_UpdateNomenclatureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest> __Marshaller_DeleteNomenclatureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse> __Marshaller_DeleteNomenclatureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllEquipmentRequest, global::RequestManagement.Server.Controllers.GetAllEquipmentResponse> __Method_GetAllEquipment = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllEquipmentRequest, global::RequestManagement.Server.Controllers.GetAllEquipmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllEquipment",
        __Marshaller_GetAllEquipmentRequest,
        __Marshaller_GetAllEquipmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateEquipmentRequest, global::RequestManagement.Server.Controllers.CreateEquipmentResponse> __Method_CreateEquipment = new grpc::Method<global::RequestManagement.Server.Controllers.CreateEquipmentRequest, global::RequestManagement.Server.Controllers.CreateEquipmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEquipment",
        __Marshaller_CreateEquipmentRequest,
        __Marshaller_CreateEquipmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateEquipmentRequest, global::RequestManagement.Server.Controllers.UpdateEquipmentResponse> __Method_UpdateEquipment = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateEquipmentRequest, global::RequestManagement.Server.Controllers.UpdateEquipmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEquipment",
        __Marshaller_UpdateEquipmentRequest,
        __Marshaller_UpdateEquipmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteEquipmentRequest, global::RequestManagement.Server.Controllers.DeleteEquipmentResponse> __Method_DeleteEquipment = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteEquipmentRequest, global::RequestManagement.Server.Controllers.DeleteEquipmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEquipment",
        __Marshaller_DeleteEquipmentRequest,
        __Marshaller_DeleteEquipmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllDriversRequest, global::RequestManagement.Server.Controllers.GetAllDriversResponse> __Method_GetAllDrivers = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllDriversRequest, global::RequestManagement.Server.Controllers.GetAllDriversResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDrivers",
        __Marshaller_GetAllDriversRequest,
        __Marshaller_GetAllDriversResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateDriverRequest, global::RequestManagement.Server.Controllers.CreateDriverResponse> __Method_CreateDriver = new grpc::Method<global::RequestManagement.Server.Controllers.CreateDriverRequest, global::RequestManagement.Server.Controllers.CreateDriverResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDriver",
        __Marshaller_CreateDriverRequest,
        __Marshaller_CreateDriverResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateDriverRequest, global::RequestManagement.Server.Controllers.UpdateDriverResponse> __Method_UpdateDriver = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateDriverRequest, global::RequestManagement.Server.Controllers.UpdateDriverResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDriver",
        __Marshaller_UpdateDriverRequest,
        __Marshaller_UpdateDriverResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteDriverRequest, global::RequestManagement.Server.Controllers.DeleteDriverResponse> __Method_DeleteDriver = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteDriverRequest, global::RequestManagement.Server.Controllers.DeleteDriverResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDriver",
        __Marshaller_DeleteDriverRequest,
        __Marshaller_DeleteDriverResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest, global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse> __Method_GetAllDefectGroups = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest, global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDefectGroups",
        __Marshaller_GetAllDefectGroupsRequest,
        __Marshaller_GetAllDefectGroupsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateDefectGroupRequest, global::RequestManagement.Server.Controllers.CreateDefectGroupResponse> __Method_CreateDefectGroup = new grpc::Method<global::RequestManagement.Server.Controllers.CreateDefectGroupRequest, global::RequestManagement.Server.Controllers.CreateDefectGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDefectGroup",
        __Marshaller_CreateDefectGroupRequest,
        __Marshaller_CreateDefectGroupResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest, global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse> __Method_UpdateDefectGroup = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest, global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDefectGroup",
        __Marshaller_UpdateDefectGroupRequest,
        __Marshaller_UpdateDefectGroupResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest, global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse> __Method_DeleteDefectGroup = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest, global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDefectGroup",
        __Marshaller_DeleteDefectGroupRequest,
        __Marshaller_DeleteDefectGroupResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllDefectsRequest, global::RequestManagement.Server.Controllers.GetAllDefectsResponse> __Method_GetAllDefects = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllDefectsRequest, global::RequestManagement.Server.Controllers.GetAllDefectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDefects",
        __Marshaller_GetAllDefectsRequest,
        __Marshaller_GetAllDefectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateDefectRequest, global::RequestManagement.Server.Controllers.CreateDefectResponse> __Method_CreateDefect = new grpc::Method<global::RequestManagement.Server.Controllers.CreateDefectRequest, global::RequestManagement.Server.Controllers.CreateDefectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDefect",
        __Marshaller_CreateDefectRequest,
        __Marshaller_CreateDefectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateDefectRequest, global::RequestManagement.Server.Controllers.UpdateDefectResponse> __Method_UpdateDefect = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateDefectRequest, global::RequestManagement.Server.Controllers.UpdateDefectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDefect",
        __Marshaller_UpdateDefectRequest,
        __Marshaller_UpdateDefectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteDefectRequest, global::RequestManagement.Server.Controllers.DeleteDefectResponse> __Method_DeleteDefect = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteDefectRequest, global::RequestManagement.Server.Controllers.DeleteDefectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDefect",
        __Marshaller_DeleteDefectRequest,
        __Marshaller_DeleteDefectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllWarehousesRequest, global::RequestManagement.Server.Controllers.GetAllWarehousesResponse> __Method_GetAllWarehouses = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllWarehousesRequest, global::RequestManagement.Server.Controllers.GetAllWarehousesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllWarehouses",
        __Marshaller_GetAllWarehousesRequest,
        __Marshaller_GetAllWarehousesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateWarehouseRequest, global::RequestManagement.Server.Controllers.CreateWarehouseResponse> __Method_CreateWarehouse = new grpc::Method<global::RequestManagement.Server.Controllers.CreateWarehouseRequest, global::RequestManagement.Server.Controllers.CreateWarehouseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWarehouse",
        __Marshaller_CreateWarehouseRequest,
        __Marshaller_CreateWarehouseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateWarehouseRequest, global::RequestManagement.Server.Controllers.UpdateWarehouseResponse> __Method_UpdateWarehouse = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateWarehouseRequest, global::RequestManagement.Server.Controllers.UpdateWarehouseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWarehouse",
        __Marshaller_UpdateWarehouseRequest,
        __Marshaller_UpdateWarehouseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteWarehouseRequest, global::RequestManagement.Server.Controllers.DeleteWarehouseResponse> __Method_DeleteWarehouse = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteWarehouseRequest, global::RequestManagement.Server.Controllers.DeleteWarehouseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWarehouse",
        __Marshaller_DeleteWarehouseRequest,
        __Marshaller_DeleteWarehouseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest, global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse> __Method_GetAllNomenclatures = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest, global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllNomenclatures",
        __Marshaller_GetAllNomenclaturesRequest,
        __Marshaller_GetAllNomenclaturesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateNomenclatureRequest, global::RequestManagement.Server.Controllers.CreateNomenclatureResponse> __Method_CreateNomenclature = new grpc::Method<global::RequestManagement.Server.Controllers.CreateNomenclatureRequest, global::RequestManagement.Server.Controllers.CreateNomenclatureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNomenclature",
        __Marshaller_CreateNomenclatureRequest,
        __Marshaller_CreateNomenclatureResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest, global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse> __Method_UpdateNomenclature = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest, global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNomenclature",
        __Marshaller_UpdateNomenclatureRequest,
        __Marshaller_UpdateNomenclatureResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest, global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse> __Method_DeleteNomenclature = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest, global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNomenclature",
        __Marshaller_DeleteNomenclatureRequest,
        __Marshaller_DeleteNomenclatureResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RequestService</summary>
    [grpc::BindServiceMethod(typeof(RequestService), "BindService")]
    public abstract partial class RequestServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.GetAllEquipmentResponse> GetAllEquipment(global::RequestManagement.Server.Controllers.GetAllEquipmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.CreateEquipmentResponse> CreateEquipment(global::RequestManagement.Server.Controllers.CreateEquipmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.UpdateEquipmentResponse> UpdateEquipment(global::RequestManagement.Server.Controllers.UpdateEquipmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.DeleteEquipmentResponse> DeleteEquipment(global::RequestManagement.Server.Controllers.DeleteEquipmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.GetAllDriversResponse> GetAllDrivers(global::RequestManagement.Server.Controllers.GetAllDriversRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.CreateDriverResponse> CreateDriver(global::RequestManagement.Server.Controllers.CreateDriverRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.UpdateDriverResponse> UpdateDriver(global::RequestManagement.Server.Controllers.UpdateDriverRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.DeleteDriverResponse> DeleteDriver(global::RequestManagement.Server.Controllers.DeleteDriverRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse> GetAllDefectGroups(global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.CreateDefectGroupResponse> CreateDefectGroup(global::RequestManagement.Server.Controllers.CreateDefectGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse> UpdateDefectGroup(global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse> DeleteDefectGroup(global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.GetAllDefectsResponse> GetAllDefects(global::RequestManagement.Server.Controllers.GetAllDefectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.CreateDefectResponse> CreateDefect(global::RequestManagement.Server.Controllers.CreateDefectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.UpdateDefectResponse> UpdateDefect(global::RequestManagement.Server.Controllers.UpdateDefectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.DeleteDefectResponse> DeleteDefect(global::RequestManagement.Server.Controllers.DeleteDefectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.GetAllWarehousesResponse> GetAllWarehouses(global::RequestManagement.Server.Controllers.GetAllWarehousesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.CreateWarehouseResponse> CreateWarehouse(global::RequestManagement.Server.Controllers.CreateWarehouseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.UpdateWarehouseResponse> UpdateWarehouse(global::RequestManagement.Server.Controllers.UpdateWarehouseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.DeleteWarehouseResponse> DeleteWarehouse(global::RequestManagement.Server.Controllers.DeleteWarehouseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse> GetAllNomenclatures(global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.CreateNomenclatureResponse> CreateNomenclature(global::RequestManagement.Server.Controllers.CreateNomenclatureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse> UpdateNomenclature(global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse> DeleteNomenclature(global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(RequestServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllEquipment, serviceImpl.GetAllEquipment)
          .AddMethod(__Method_CreateEquipment, serviceImpl.CreateEquipment)
          .AddMethod(__Method_UpdateEquipment, serviceImpl.UpdateEquipment)
          .AddMethod(__Method_DeleteEquipment, serviceImpl.DeleteEquipment)
          .AddMethod(__Method_GetAllDrivers, serviceImpl.GetAllDrivers)
          .AddMethod(__Method_CreateDriver, serviceImpl.CreateDriver)
          .AddMethod(__Method_UpdateDriver, serviceImpl.UpdateDriver)
          .AddMethod(__Method_DeleteDriver, serviceImpl.DeleteDriver)
          .AddMethod(__Method_GetAllDefectGroups, serviceImpl.GetAllDefectGroups)
          .AddMethod(__Method_CreateDefectGroup, serviceImpl.CreateDefectGroup)
          .AddMethod(__Method_UpdateDefectGroup, serviceImpl.UpdateDefectGroup)
          .AddMethod(__Method_DeleteDefectGroup, serviceImpl.DeleteDefectGroup)
          .AddMethod(__Method_GetAllDefects, serviceImpl.GetAllDefects)
          .AddMethod(__Method_CreateDefect, serviceImpl.CreateDefect)
          .AddMethod(__Method_UpdateDefect, serviceImpl.UpdateDefect)
          .AddMethod(__Method_DeleteDefect, serviceImpl.DeleteDefect)
          .AddMethod(__Method_GetAllWarehouses, serviceImpl.GetAllWarehouses)
          .AddMethod(__Method_CreateWarehouse, serviceImpl.CreateWarehouse)
          .AddMethod(__Method_UpdateWarehouse, serviceImpl.UpdateWarehouse)
          .AddMethod(__Method_DeleteWarehouse, serviceImpl.DeleteWarehouse)
          .AddMethod(__Method_GetAllNomenclatures, serviceImpl.GetAllNomenclatures)
          .AddMethod(__Method_CreateNomenclature, serviceImpl.CreateNomenclature)
          .AddMethod(__Method_UpdateNomenclature, serviceImpl.UpdateNomenclature)
          .AddMethod(__Method_DeleteNomenclature, serviceImpl.DeleteNomenclature).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RequestServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllEquipment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.GetAllEquipmentRequest, global::RequestManagement.Server.Controllers.GetAllEquipmentResponse>(serviceImpl.GetAllEquipment));
      serviceBinder.AddMethod(__Method_CreateEquipment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.CreateEquipmentRequest, global::RequestManagement.Server.Controllers.CreateEquipmentResponse>(serviceImpl.CreateEquipment));
      serviceBinder.AddMethod(__Method_UpdateEquipment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.UpdateEquipmentRequest, global::RequestManagement.Server.Controllers.UpdateEquipmentResponse>(serviceImpl.UpdateEquipment));
      serviceBinder.AddMethod(__Method_DeleteEquipment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.DeleteEquipmentRequest, global::RequestManagement.Server.Controllers.DeleteEquipmentResponse>(serviceImpl.DeleteEquipment));
      serviceBinder.AddMethod(__Method_GetAllDrivers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.GetAllDriversRequest, global::RequestManagement.Server.Controllers.GetAllDriversResponse>(serviceImpl.GetAllDrivers));
      serviceBinder.AddMethod(__Method_CreateDriver, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.CreateDriverRequest, global::RequestManagement.Server.Controllers.CreateDriverResponse>(serviceImpl.CreateDriver));
      serviceBinder.AddMethod(__Method_UpdateDriver, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.UpdateDriverRequest, global::RequestManagement.Server.Controllers.UpdateDriverResponse>(serviceImpl.UpdateDriver));
      serviceBinder.AddMethod(__Method_DeleteDriver, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.DeleteDriverRequest, global::RequestManagement.Server.Controllers.DeleteDriverResponse>(serviceImpl.DeleteDriver));
      serviceBinder.AddMethod(__Method_GetAllDefectGroups, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest, global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse>(serviceImpl.GetAllDefectGroups));
      serviceBinder.AddMethod(__Method_CreateDefectGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.CreateDefectGroupRequest, global::RequestManagement.Server.Controllers.CreateDefectGroupResponse>(serviceImpl.CreateDefectGroup));
      serviceBinder.AddMethod(__Method_UpdateDefectGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest, global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse>(serviceImpl.UpdateDefectGroup));
      serviceBinder.AddMethod(__Method_DeleteDefectGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest, global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse>(serviceImpl.DeleteDefectGroup));
      serviceBinder.AddMethod(__Method_GetAllDefects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.GetAllDefectsRequest, global::RequestManagement.Server.Controllers.GetAllDefectsResponse>(serviceImpl.GetAllDefects));
      serviceBinder.AddMethod(__Method_CreateDefect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.CreateDefectRequest, global::RequestManagement.Server.Controllers.CreateDefectResponse>(serviceImpl.CreateDefect));
      serviceBinder.AddMethod(__Method_UpdateDefect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.UpdateDefectRequest, global::RequestManagement.Server.Controllers.UpdateDefectResponse>(serviceImpl.UpdateDefect));
      serviceBinder.AddMethod(__Method_DeleteDefect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.DeleteDefectRequest, global::RequestManagement.Server.Controllers.DeleteDefectResponse>(serviceImpl.DeleteDefect));
      serviceBinder.AddMethod(__Method_GetAllWarehouses, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.GetAllWarehousesRequest, global::RequestManagement.Server.Controllers.GetAllWarehousesResponse>(serviceImpl.GetAllWarehouses));
      serviceBinder.AddMethod(__Method_CreateWarehouse, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.CreateWarehouseRequest, global::RequestManagement.Server.Controllers.CreateWarehouseResponse>(serviceImpl.CreateWarehouse));
      serviceBinder.AddMethod(__Method_UpdateWarehouse, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.UpdateWarehouseRequest, global::RequestManagement.Server.Controllers.UpdateWarehouseResponse>(serviceImpl.UpdateWarehouse));
      serviceBinder.AddMethod(__Method_DeleteWarehouse, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.DeleteWarehouseRequest, global::RequestManagement.Server.Controllers.DeleteWarehouseResponse>(serviceImpl.DeleteWarehouse));
      serviceBinder.AddMethod(__Method_GetAllNomenclatures, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest, global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse>(serviceImpl.GetAllNomenclatures));
      serviceBinder.AddMethod(__Method_CreateNomenclature, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.CreateNomenclatureRequest, global::RequestManagement.Server.Controllers.CreateNomenclatureResponse>(serviceImpl.CreateNomenclature));
      serviceBinder.AddMethod(__Method_UpdateNomenclature, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest, global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse>(serviceImpl.UpdateNomenclature));
      serviceBinder.AddMethod(__Method_DeleteNomenclature, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest, global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse>(serviceImpl.DeleteNomenclature));
    }

  }
}
#endregion


//Stock.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/stock.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RequestManagement.Server.Controllers {

  /// <summary>Holder for reflection information generated from Protos/stock.proto</summary>
  public static partial class StockReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/stock.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StockReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm90b3Mvc3RvY2sucHJvdG8iqgIKE0dldEFsbFN0b2Nrc1JlcXVlc3QS",
            "EwoLd2FyZWhvdXNlSWQYASABKAUSDgoGZmlsdGVyGAIgASgJEiEKGWluaXRp",
            "YWxRdWFudGl0eUZpbHRlclR5cGUYAyABKAUSFwoPaW5pdGlhbFF1YW50aXR5",
            "GAQgASgBEiIKGnJlY2VpdmVkUXVhbnRpdHlGaWx0ZXJUeXBlGAUgASgFEhgK",
            "EHJlY2VpdmVkUXVhbnRpdHkYBiABKAESIgoaY29uc3VtZWRRdWFudGl0eUZp",
            "bHRlclR5cGUYByABKAUSGAoQY29uc3VtZWRRdWFudGl0eRgIIAEoARIfChdm",
            "aW5hbFF1YW50aXR5RmlsdGVyVHlwZRgJIAEoBRIVCg1maW5hbFF1YW50aXR5",
            "GAogASgBIi4KFEdldEFsbFN0b2Nrc1Jlc3BvbnNlEhYKBnN0b2NrcxgBIAMo",
            "CzIGLlN0b2NrIl0KEkNyZWF0ZVN0b2NrUmVxdWVzdBIUCgx3YXJlaG91c2Vf",
            "aWQYASABKAUSFwoPbm9tZW5jbGF0dXJlX2lkGAIgASgFEhgKEGluaXRpYWxf",
            "cXVhbnRpdHkYAyABKAEiIQoTQ3JlYXRlU3RvY2tSZXNwb25zZRIKCgJpZBgB",
            "IAEoBSJTChJVcGRhdGVTdG9ja1JlcXVlc3QSCgoCaWQYASABKAUSFwoPbm9t",
            "ZW5jbGF0dXJlX2lkGAMgASgFEhgKEGluaXRpYWxfcXVhbnRpdHkYBCABKAEi",
            "JgoTVXBkYXRlU3RvY2tSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIiAKEkRl",
            "bGV0ZVN0b2NrUmVxdWVzdBIKCgJpZBgBIAEoBSImChNEZWxldGVTdG9ja1Jl",
            "c3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgivAEKBVN0b2NrEgoKAmlkGAEgASgF",
            "EhQKDHdhcmVob3VzZV9pZBgCIAEoBRIXCg9ub21lbmNsYXR1cmVfaWQYAyAB",
            "KAUSGAoQaW5pdGlhbF9xdWFudGl0eRgEIAEoARIZChFyZWNlaXZlZF9xdWFu",
            "dGl0eRgFIAEoARIZChFjb25zdW1lZF9xdWFudGl0eRgGIAEoARIoCgxub21l",
            "bmNsYXR1cmUYByABKAsyEi5TdG9ja05vbWVuY2xhdHVyZSJXChFTdG9ja05v",
            "bWVuY2xhdHVyZRIMCgRjb2RlGAIgASgJEgwKBG5hbWUYAyABKAkSDwoHYXJ0",
            "aWNsZRgEIAEoCRIVCg11bml0T2ZNZWFzdXJlGAUgASgJMvgBCgxTdG9ja1Nl",
            "cnZpY2USOgoLR2V0QWxsU3RvY2sSFC5HZXRBbGxTdG9ja3NSZXF1ZXN0GhUu",
            "R2V0QWxsU3RvY2tzUmVzcG9uc2USOAoLQ3JlYXRlU3RvY2sSEy5DcmVhdGVT",
            "dG9ja1JlcXVlc3QaFC5DcmVhdGVTdG9ja1Jlc3BvbnNlEjgKC1VwZGF0ZVN0",
            "b2NrEhMuVXBkYXRlU3RvY2tSZXF1ZXN0GhQuVXBkYXRlU3RvY2tSZXNwb25z",
            "ZRI4CgtEZWxldGVTdG9jaxITLkRlbGV0ZVN0b2NrUmVxdWVzdBoULkRlbGV0",
            "ZVN0b2NrUmVzcG9uc2VCJ6oCJFJlcXVlc3RNYW5hZ2VtZW50LlNlcnZlci5D",
            "b250cm9sbGVyc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllStocksRequest), global::RequestManagement.Server.Controllers.GetAllStocksRequest.Parser, new[]{ "WarehouseId", "Filter", "InitialQuantityFilterType", "InitialQuantity", "ReceivedQuantityFilterType", "ReceivedQuantity", "ConsumedQuantityFilterType", "ConsumedQuantity", "FinalQuantityFilterType", "FinalQuantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllStocksResponse), global::RequestManagement.Server.Controllers.GetAllStocksResponse.Parser, new[]{ "Stocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateStockRequest), global::RequestManagement.Server.Controllers.CreateStockRequest.Parser, new[]{ "WarehouseId", "NomenclatureId", "InitialQuantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateStockResponse), global::RequestManagement.Server.Controllers.CreateStockResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateStockRequest), global::RequestManagement.Server.Controllers.UpdateStockRequest.Parser, new[]{ "Id", "NomenclatureId", "InitialQuantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateStockResponse), global::RequestManagement.Server.Controllers.UpdateStockResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteStockRequest), global::RequestManagement.Server.Controllers.DeleteStockRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteStockResponse), global::RequestManagement.Server.Controllers.DeleteStockResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Stock), global::RequestManagement.Server.Controllers.Stock.Parser, new[]{ "Id", "WarehouseId", "NomenclatureId", "InitialQuantity", "ReceivedQuantity", "ConsumedQuantity", "Nomenclature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.StockNomenclature), global::RequestManagement.Server.Controllers.StockNomenclature.Parser, new[]{ "Code", "Name", "Article", "UnitOfMeasure" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllStocksRequest : pb::IMessage<GetAllStocksRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllStocksRequest> _parser = new pb::MessageParser<GetAllStocksRequest>(() => new GetAllStocksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllStocksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksRequest(GetAllStocksRequest other) : this() {
      warehouseId_ = other.warehouseId_;
      filter_ = other.filter_;
      initialQuantityFilterType_ = other.initialQuantityFilterType_;
      initialQuantity_ = other.initialQuantity_;
      receivedQuantityFilterType_ = other.receivedQuantityFilterType_;
      receivedQuantity_ = other.receivedQuantity_;
      consumedQuantityFilterType_ = other.consumedQuantityFilterType_;
      consumedQuantity_ = other.consumedQuantity_;
      finalQuantityFilterType_ = other.finalQuantityFilterType_;
      finalQuantity_ = other.finalQuantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksRequest Clone() {
      return new GetAllStocksRequest(this);
    }

    /// <summary>Field number for the "warehouseId" field.</summary>
    public const int WarehouseIdFieldNumber = 1;
    private int warehouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WarehouseId {
      get { return warehouseId_; }
      set {
        warehouseId_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initialQuantityFilterType" field.</summary>
    public const int InitialQuantityFilterTypeFieldNumber = 3;
    private int initialQuantityFilterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InitialQuantityFilterType {
      get { return initialQuantityFilterType_; }
      set {
        initialQuantityFilterType_ = value;
      }
    }

    /// <summary>Field number for the "initialQuantity" field.</summary>
    public const int InitialQuantityFieldNumber = 4;
    private double initialQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialQuantity {
      get { return initialQuantity_; }
      set {
        initialQuantity_ = value;
      }
    }

    /// <summary>Field number for the "receivedQuantityFilterType" field.</summary>
    public const int ReceivedQuantityFilterTypeFieldNumber = 5;
    private int receivedQuantityFilterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReceivedQuantityFilterType {
      get { return receivedQuantityFilterType_; }
      set {
        receivedQuantityFilterType_ = value;
      }
    }

    /// <summary>Field number for the "receivedQuantity" field.</summary>
    public const int ReceivedQuantityFieldNumber = 6;
    private double receivedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ReceivedQuantity {
      get { return receivedQuantity_; }
      set {
        receivedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "consumedQuantityFilterType" field.</summary>
    public const int ConsumedQuantityFilterTypeFieldNumber = 7;
    private int consumedQuantityFilterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConsumedQuantityFilterType {
      get { return consumedQuantityFilterType_; }
      set {
        consumedQuantityFilterType_ = value;
      }
    }

    /// <summary>Field number for the "consumedQuantity" field.</summary>
    public const int ConsumedQuantityFieldNumber = 8;
    private double consumedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ConsumedQuantity {
      get { return consumedQuantity_; }
      set {
        consumedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "finalQuantityFilterType" field.</summary>
    public const int FinalQuantityFilterTypeFieldNumber = 9;
    private int finalQuantityFilterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FinalQuantityFilterType {
      get { return finalQuantityFilterType_; }
      set {
        finalQuantityFilterType_ = value;
      }
    }

    /// <summary>Field number for the "finalQuantity" field.</summary>
    public const int FinalQuantityFieldNumber = 10;
    private double finalQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FinalQuantity {
      get { return finalQuantity_; }
      set {
        finalQuantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllStocksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllStocksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WarehouseId != other.WarehouseId) return false;
      if (Filter != other.Filter) return false;
      if (InitialQuantityFilterType != other.InitialQuantityFilterType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialQuantity, other.InitialQuantity)) return false;
      if (ReceivedQuantityFilterType != other.ReceivedQuantityFilterType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReceivedQuantity, other.ReceivedQuantity)) return false;
      if (ConsumedQuantityFilterType != other.ConsumedQuantityFilterType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ConsumedQuantity, other.ConsumedQuantity)) return false;
      if (FinalQuantityFilterType != other.FinalQuantityFilterType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FinalQuantity, other.FinalQuantity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WarehouseId != 0) hash ^= WarehouseId.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (InitialQuantityFilterType != 0) hash ^= InitialQuantityFilterType.GetHashCode();
      if (InitialQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialQuantity);
      if (ReceivedQuantityFilterType != 0) hash ^= ReceivedQuantityFilterType.GetHashCode();
      if (ReceivedQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReceivedQuantity);
      if (ConsumedQuantityFilterType != 0) hash ^= ConsumedQuantityFilterType.GetHashCode();
      if (ConsumedQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ConsumedQuantity);
      if (FinalQuantityFilterType != 0) hash ^= FinalQuantityFilterType.GetHashCode();
      if (FinalQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FinalQuantity);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WarehouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WarehouseId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (InitialQuantityFilterType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialQuantityFilterType);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (ReceivedQuantityFilterType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ReceivedQuantityFilterType);
      }
      if (ReceivedQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ReceivedQuantity);
      }
      if (ConsumedQuantityFilterType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ConsumedQuantityFilterType);
      }
      if (ConsumedQuantity != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(ConsumedQuantity);
      }
      if (FinalQuantityFilterType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FinalQuantityFilterType);
      }
      if (FinalQuantity != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(FinalQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WarehouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WarehouseId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (InitialQuantityFilterType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialQuantityFilterType);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (ReceivedQuantityFilterType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ReceivedQuantityFilterType);
      }
      if (ReceivedQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ReceivedQuantity);
      }
      if (ConsumedQuantityFilterType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ConsumedQuantityFilterType);
      }
      if (ConsumedQuantity != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(ConsumedQuantity);
      }
      if (FinalQuantityFilterType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FinalQuantityFilterType);
      }
      if (FinalQuantity != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(FinalQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WarehouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WarehouseId);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (InitialQuantityFilterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialQuantityFilterType);
      }
      if (InitialQuantity != 0D) {
        size += 1 + 8;
      }
      if (ReceivedQuantityFilterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceivedQuantityFilterType);
      }
      if (ReceivedQuantity != 0D) {
        size += 1 + 8;
      }
      if (ConsumedQuantityFilterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConsumedQuantityFilterType);
      }
      if (ConsumedQuantity != 0D) {
        size += 1 + 8;
      }
      if (FinalQuantityFilterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinalQuantityFilterType);
      }
      if (FinalQuantity != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllStocksRequest other) {
      if (other == null) {
        return;
      }
      if (other.WarehouseId != 0) {
        WarehouseId = other.WarehouseId;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.InitialQuantityFilterType != 0) {
        InitialQuantityFilterType = other.InitialQuantityFilterType;
      }
      if (other.InitialQuantity != 0D) {
        InitialQuantity = other.InitialQuantity;
      }
      if (other.ReceivedQuantityFilterType != 0) {
        ReceivedQuantityFilterType = other.ReceivedQuantityFilterType;
      }
      if (other.ReceivedQuantity != 0D) {
        ReceivedQuantity = other.ReceivedQuantity;
      }
      if (other.ConsumedQuantityFilterType != 0) {
        ConsumedQuantityFilterType = other.ConsumedQuantityFilterType;
      }
      if (other.ConsumedQuantity != 0D) {
        ConsumedQuantity = other.ConsumedQuantity;
      }
      if (other.FinalQuantityFilterType != 0) {
        FinalQuantityFilterType = other.FinalQuantityFilterType;
      }
      if (other.FinalQuantity != 0D) {
        FinalQuantity = other.FinalQuantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            InitialQuantityFilterType = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
          case 40: {
            ReceivedQuantityFilterType = input.ReadInt32();
            break;
          }
          case 49: {
            ReceivedQuantity = input.ReadDouble();
            break;
          }
          case 56: {
            ConsumedQuantityFilterType = input.ReadInt32();
            break;
          }
          case 65: {
            ConsumedQuantity = input.ReadDouble();
            break;
          }
          case 72: {
            FinalQuantityFilterType = input.ReadInt32();
            break;
          }
          case 81: {
            FinalQuantity = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            InitialQuantityFilterType = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
          case 40: {
            ReceivedQuantityFilterType = input.ReadInt32();
            break;
          }
          case 49: {
            ReceivedQuantity = input.ReadDouble();
            break;
          }
          case 56: {
            ConsumedQuantityFilterType = input.ReadInt32();
            break;
          }
          case 65: {
            ConsumedQuantity = input.ReadDouble();
            break;
          }
          case 72: {
            FinalQuantityFilterType = input.ReadInt32();
            break;
          }
          case 81: {
            FinalQuantity = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllStocksResponse : pb::IMessage<GetAllStocksResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllStocksResponse> _parser = new pb::MessageParser<GetAllStocksResponse>(() => new GetAllStocksResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllStocksResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksResponse(GetAllStocksResponse other) : this() {
      stocks_ = other.stocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksResponse Clone() {
      return new GetAllStocksResponse(this);
    }

    /// <summary>Field number for the "stocks" field.</summary>
    public const int StocksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Stock> _repeated_stocks_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Stock.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Stock> stocks_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Stock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Stock> Stocks {
      get { return stocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllStocksResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllStocksResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stocks_.Equals(other.stocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stocks_.WriteTo(output, _repeated_stocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stocks_.WriteTo(ref output, _repeated_stocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += stocks_.CalculateSize(_repeated_stocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllStocksResponse other) {
      if (other == null) {
        return;
      }
      stocks_.Add(other.stocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stocks_.AddEntriesFrom(input, _repeated_stocks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stocks_.AddEntriesFrom(ref input, _repeated_stocks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateStockRequest : pb::IMessage<CreateStockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateStockRequest> _parser = new pb::MessageParser<CreateStockRequest>(() => new CreateStockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateStockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockRequest(CreateStockRequest other) : this() {
      warehouseId_ = other.warehouseId_;
      nomenclatureId_ = other.nomenclatureId_;
      initialQuantity_ = other.initialQuantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockRequest Clone() {
      return new CreateStockRequest(this);
    }

    /// <summary>Field number for the "warehouse_id" field.</summary>
    public const int WarehouseIdFieldNumber = 1;
    private int warehouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WarehouseId {
      get { return warehouseId_; }
      set {
        warehouseId_ = value;
      }
    }

    /// <summary>Field number for the "nomenclature_id" field.</summary>
    public const int NomenclatureIdFieldNumber = 2;
    private int nomenclatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NomenclatureId {
      get { return nomenclatureId_; }
      set {
        nomenclatureId_ = value;
      }
    }

    /// <summary>Field number for the "initial_quantity" field.</summary>
    public const int InitialQuantityFieldNumber = 3;
    private double initialQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialQuantity {
      get { return initialQuantity_; }
      set {
        initialQuantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateStockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateStockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WarehouseId != other.WarehouseId) return false;
      if (NomenclatureId != other.NomenclatureId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialQuantity, other.InitialQuantity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WarehouseId != 0) hash ^= WarehouseId.GetHashCode();
      if (NomenclatureId != 0) hash ^= NomenclatureId.GetHashCode();
      if (InitialQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialQuantity);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WarehouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WarehouseId);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InitialQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WarehouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WarehouseId);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InitialQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WarehouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WarehouseId);
      }
      if (NomenclatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateStockRequest other) {
      if (other == null) {
        return;
      }
      if (other.WarehouseId != 0) {
        WarehouseId = other.WarehouseId;
      }
      if (other.NomenclatureId != 0) {
        NomenclatureId = other.NomenclatureId;
      }
      if (other.InitialQuantity != 0D) {
        InitialQuantity = other.InitialQuantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 16: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 25: {
            InitialQuantity = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 16: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 25: {
            InitialQuantity = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateStockResponse : pb::IMessage<CreateStockResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateStockResponse> _parser = new pb::MessageParser<CreateStockResponse>(() => new CreateStockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateStockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockResponse(CreateStockResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockResponse Clone() {
      return new CreateStockResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateStockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateStockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateStockResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateStockRequest : pb::IMessage<UpdateStockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateStockRequest> _parser = new pb::MessageParser<UpdateStockRequest>(() => new UpdateStockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateStockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockRequest(UpdateStockRequest other) : this() {
      id_ = other.id_;
      nomenclatureId_ = other.nomenclatureId_;
      initialQuantity_ = other.initialQuantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockRequest Clone() {
      return new UpdateStockRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "nomenclature_id" field.</summary>
    public const int NomenclatureIdFieldNumber = 3;
    private int nomenclatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NomenclatureId {
      get { return nomenclatureId_; }
      set {
        nomenclatureId_ = value;
      }
    }

    /// <summary>Field number for the "initial_quantity" field.</summary>
    public const int InitialQuantityFieldNumber = 4;
    private double initialQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialQuantity {
      get { return initialQuantity_; }
      set {
        initialQuantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateStockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateStockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NomenclatureId != other.NomenclatureId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialQuantity, other.InitialQuantity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (NomenclatureId != 0) hash ^= NomenclatureId.GetHashCode();
      if (InitialQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialQuantity);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (NomenclatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateStockRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.NomenclatureId != 0) {
        NomenclatureId = other.NomenclatureId;
      }
      if (other.InitialQuantity != 0D) {
        InitialQuantity = other.InitialQuantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateStockResponse : pb::IMessage<UpdateStockResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateStockResponse> _parser = new pb::MessageParser<UpdateStockResponse>(() => new UpdateStockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateStockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockResponse(UpdateStockResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockResponse Clone() {
      return new UpdateStockResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateStockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateStockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateStockResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteStockRequest : pb::IMessage<DeleteStockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteStockRequest> _parser = new pb::MessageParser<DeleteStockRequest>(() => new DeleteStockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteStockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockRequest(DeleteStockRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockRequest Clone() {
      return new DeleteStockRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteStockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteStockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteStockRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteStockResponse : pb::IMessage<DeleteStockResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteStockResponse> _parser = new pb::MessageParser<DeleteStockResponse>(() => new DeleteStockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteStockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockResponse(DeleteStockResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockResponse Clone() {
      return new DeleteStockResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteStockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteStockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteStockResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Stock : pb::IMessage<Stock>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stock> _parser = new pb::MessageParser<Stock>(() => new Stock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Stock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stock(Stock other) : this() {
      id_ = other.id_;
      warehouseId_ = other.warehouseId_;
      nomenclatureId_ = other.nomenclatureId_;
      initialQuantity_ = other.initialQuantity_;
      receivedQuantity_ = other.receivedQuantity_;
      consumedQuantity_ = other.consumedQuantity_;
      nomenclature_ = other.nomenclature_ != null ? other.nomenclature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stock Clone() {
      return new Stock(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "warehouse_id" field.</summary>
    public const int WarehouseIdFieldNumber = 2;
    private int warehouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WarehouseId {
      get { return warehouseId_; }
      set {
        warehouseId_ = value;
      }
    }

    /// <summary>Field number for the "nomenclature_id" field.</summary>
    public const int NomenclatureIdFieldNumber = 3;
    private int nomenclatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NomenclatureId {
      get { return nomenclatureId_; }
      set {
        nomenclatureId_ = value;
      }
    }

    /// <summary>Field number for the "initial_quantity" field.</summary>
    public const int InitialQuantityFieldNumber = 4;
    private double initialQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialQuantity {
      get { return initialQuantity_; }
      set {
        initialQuantity_ = value;
      }
    }

    /// <summary>Field number for the "received_quantity" field.</summary>
    public const int ReceivedQuantityFieldNumber = 5;
    private double receivedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ReceivedQuantity {
      get { return receivedQuantity_; }
      set {
        receivedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "consumed_quantity" field.</summary>
    public const int ConsumedQuantityFieldNumber = 6;
    private double consumedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ConsumedQuantity {
      get { return consumedQuantity_; }
      set {
        consumedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "nomenclature" field.</summary>
    public const int NomenclatureFieldNumber = 7;
    private global::RequestManagement.Server.Controllers.StockNomenclature nomenclature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.StockNomenclature Nomenclature {
      get { return nomenclature_; }
      set {
        nomenclature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Stock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Stock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (WarehouseId != other.WarehouseId) return false;
      if (NomenclatureId != other.NomenclatureId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialQuantity, other.InitialQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReceivedQuantity, other.ReceivedQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ConsumedQuantity, other.ConsumedQuantity)) return false;
      if (!object.Equals(Nomenclature, other.Nomenclature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (WarehouseId != 0) hash ^= WarehouseId.GetHashCode();
      if (NomenclatureId != 0) hash ^= NomenclatureId.GetHashCode();
      if (InitialQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialQuantity);
      if (ReceivedQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReceivedQuantity);
      if (ConsumedQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ConsumedQuantity);
      if (nomenclature_ != null) hash ^= Nomenclature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (WarehouseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WarehouseId);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (ReceivedQuantity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ReceivedQuantity);
      }
      if (ConsumedQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ConsumedQuantity);
      }
      if (nomenclature_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (WarehouseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WarehouseId);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (ReceivedQuantity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ReceivedQuantity);
      }
      if (ConsumedQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ConsumedQuantity);
      }
      if (nomenclature_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (WarehouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WarehouseId);
      }
      if (NomenclatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        size += 1 + 8;
      }
      if (ReceivedQuantity != 0D) {
        size += 1 + 8;
      }
      if (ConsumedQuantity != 0D) {
        size += 1 + 8;
      }
      if (nomenclature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nomenclature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Stock other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.WarehouseId != 0) {
        WarehouseId = other.WarehouseId;
      }
      if (other.NomenclatureId != 0) {
        NomenclatureId = other.NomenclatureId;
      }
      if (other.InitialQuantity != 0D) {
        InitialQuantity = other.InitialQuantity;
      }
      if (other.ReceivedQuantity != 0D) {
        ReceivedQuantity = other.ReceivedQuantity;
      }
      if (other.ConsumedQuantity != 0D) {
        ConsumedQuantity = other.ConsumedQuantity;
      }
      if (other.nomenclature_ != null) {
        if (nomenclature_ == null) {
          Nomenclature = new global::RequestManagement.Server.Controllers.StockNomenclature();
        }
        Nomenclature.MergeFrom(other.Nomenclature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 24: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
          case 41: {
            ReceivedQuantity = input.ReadDouble();
            break;
          }
          case 49: {
            ConsumedQuantity = input.ReadDouble();
            break;
          }
          case 58: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.StockNomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 24: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
          case 41: {
            ReceivedQuantity = input.ReadDouble();
            break;
          }
          case 49: {
            ConsumedQuantity = input.ReadDouble();
            break;
          }
          case 58: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.StockNomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StockNomenclature : pb::IMessage<StockNomenclature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StockNomenclature> _parser = new pb::MessageParser<StockNomenclature>(() => new StockNomenclature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StockNomenclature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockNomenclature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockNomenclature(StockNomenclature other) : this() {
      code_ = other.code_;
      name_ = other.name_;
      article_ = other.article_;
      unitOfMeasure_ = other.unitOfMeasure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockNomenclature Clone() {
      return new StockNomenclature(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "article" field.</summary>
    public const int ArticleFieldNumber = 4;
    private string article_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Article {
      get { return article_; }
      set {
        article_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unitOfMeasure" field.</summary>
    public const int UnitOfMeasureFieldNumber = 5;
    private string unitOfMeasure_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnitOfMeasure {
      get { return unitOfMeasure_; }
      set {
        unitOfMeasure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StockNomenclature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StockNomenclature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Name != other.Name) return false;
      if (Article != other.Article) return false;
      if (UnitOfMeasure != other.UnitOfMeasure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Article.Length != 0) hash ^= Article.GetHashCode();
      if (UnitOfMeasure.Length != 0) hash ^= UnitOfMeasure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Article.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Article.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Article.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StockNomenclature other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Article.Length != 0) {
        Article = other.Article;
      }
      if (other.UnitOfMeasure.Length != 0) {
        UnitOfMeasure = other.UnitOfMeasure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Article = input.ReadString();
            break;
          }
          case 42: {
            UnitOfMeasure = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Article = input.ReadString();
            break;
          }
          case 42: {
            UnitOfMeasure = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code


//StockGrpc.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/stock.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RequestManagement.Server.Controllers {
  public static partial class StockService
  {
    static readonly string __ServiceName = "StockService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllStocksRequest> __Marshaller_GetAllStocksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllStocksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllStocksResponse> __Marshaller_GetAllStocksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllStocksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateStockRequest> __Marshaller_CreateStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateStockResponse> __Marshaller_CreateStockResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateStockResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateStockRequest> __Marshaller_UpdateStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateStockResponse> __Marshaller_UpdateStockResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateStockResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteStockRequest> __Marshaller_DeleteStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteStockResponse> __Marshaller_DeleteStockResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteStockResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllStocksRequest, global::RequestManagement.Server.Controllers.GetAllStocksResponse> __Method_GetAllStock = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllStocksRequest, global::RequestManagement.Server.Controllers.GetAllStocksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllStock",
        __Marshaller_GetAllStocksRequest,
        __Marshaller_GetAllStocksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateStockRequest, global::RequestManagement.Server.Controllers.CreateStockResponse> __Method_CreateStock = new grpc::Method<global::RequestManagement.Server.Controllers.CreateStockRequest, global::RequestManagement.Server.Controllers.CreateStockResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateStock",
        __Marshaller_CreateStockRequest,
        __Marshaller_CreateStockResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateStockRequest, global::RequestManagement.Server.Controllers.UpdateStockResponse> __Method_UpdateStock = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateStockRequest, global::RequestManagement.Server.Controllers.UpdateStockResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateStock",
        __Marshaller_UpdateStockRequest,
        __Marshaller_UpdateStockResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteStockRequest, global::RequestManagement.Server.Controllers.DeleteStockResponse> __Method_DeleteStock = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteStockRequest, global::RequestManagement.Server.Controllers.DeleteStockResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteStock",
        __Marshaller_DeleteStockRequest,
        __Marshaller_DeleteStockResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of StockService</summary>
    [grpc::BindServiceMethod(typeof(StockService), "BindService")]
    public abstract partial class StockServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.GetAllStocksResponse> GetAllStock(global::RequestManagement.Server.Controllers.GetAllStocksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.CreateStockResponse> CreateStock(global::RequestManagement.Server.Controllers.CreateStockRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.UpdateStockResponse> UpdateStock(global::RequestManagement.Server.Controllers.UpdateStockRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::RequestManagement.Server.Controllers.DeleteStockResponse> DeleteStock(global::RequestManagement.Server.Controllers.DeleteStockRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(StockServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllStock, serviceImpl.GetAllStock)
          .AddMethod(__Method_CreateStock, serviceImpl.CreateStock)
          .AddMethod(__Method_UpdateStock, serviceImpl.UpdateStock)
          .AddMethod(__Method_DeleteStock, serviceImpl.DeleteStock).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, StockServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllStock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.GetAllStocksRequest, global::RequestManagement.Server.Controllers.GetAllStocksResponse>(serviceImpl.GetAllStock));
      serviceBinder.AddMethod(__Method_CreateStock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.CreateStockRequest, global::RequestManagement.Server.Controllers.CreateStockResponse>(serviceImpl.CreateStock));
      serviceBinder.AddMethod(__Method_UpdateStock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.UpdateStockRequest, global::RequestManagement.Server.Controllers.UpdateStockResponse>(serviceImpl.UpdateStock));
      serviceBinder.AddMethod(__Method_DeleteStock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RequestManagement.Server.Controllers.DeleteStockRequest, global::RequestManagement.Server.Controllers.DeleteStockResponse>(serviceImpl.DeleteStock));
    }

  }
}
#endregion


//App.xaml.cs
// App.xaml.cs
using Microsoft.Extensions.DependencyInjection;
using System.Windows;
using WpfClient.ViewModels;
using WpfClient.Views;

namespace WpfClient;

public partial class App : Application
{
    public IServiceProvider ServiceProvider { get; private set; }

    protected override void OnStartup(StartupEventArgs e)
    {
        ServiceProvider = ServiceConfigurator.ConfigureServices();

        var viewModel = ServiceProvider.GetRequiredService<LoginViewModel>();
        var mainWindow = new MainWindow(viewModel);
        mainWindow.Show();
    }
}

//AssemblyInfo.cs
using System.Windows;

[assembly: ThemeInfo(
    ResourceDictionaryLocation.None,            //where theme specific resource dictionaries are located
                                                //(used if a resource is not found in the page,
                                                // or application resource dictionaries)
    ResourceDictionaryLocation.SourceAssembly   //where the generic resource dictionary is located
                                                //(used if a resource is not found in the page,
                                                // app, or any theme specific resource dictionaries)
)]


//ServiceConfigurator.cs
// ServiceConfigurator.cs
using Microsoft.Extensions.DependencyInjection;
using RequestManagement.Common.Interfaces;
using RequestManagement.Server.Controllers;
using System.Windows;
using WpfClient.Services;
using WpfClient.Services.Interfaces;
using WpfClient.ViewModels;
using WpfClient.Views;

namespace WpfClient;

public class ServiceConfigurator
{
    public static IServiceProvider ConfigureServices()
    {
        var serviceCollection = new ServiceCollection();

        // gRPC клиенты
        serviceCollection.AddGrpcClient<AuthService.AuthServiceClient>(o => {o.Address = new Uri("http://localhost:5001"); });
        serviceCollection.AddGrpcClient<RequestService.RequestServiceClient>(o => {o.Address = new Uri("http://localhost:5001");});
        serviceCollection.AddGrpcClient<StockService.StockServiceClient>(o => { o.Address = new Uri("http://localhost:5001"); });

        // Сервисы и ViewModel'ы
        serviceCollection.AddSingleton<AuthTokenStore>();
        serviceCollection.AddSingleton<IMessageBus, MessageBusService>();
        serviceCollection.AddSingleton<IGrpcClientFactory, GrpcClientFactory>();

        serviceCollection.AddScoped<GrpcAuthService>();
        serviceCollection.AddScoped<LoginViewModel>();
        serviceCollection.AddScoped<EquipmentViewModel>();
        serviceCollection.AddScoped<MainMenuViewModel>();
        serviceCollection.AddScoped<DriverViewModel>();
        serviceCollection.AddScoped<DefectGroupViewModel>();
        serviceCollection.AddScoped<DefectViewModel>();
        serviceCollection.AddScoped<WarehouseViewModel>();
        serviceCollection.AddScoped<NomenclatureViewModel>();
        serviceCollection.AddScoped<StockViewModel>();
        serviceCollection.AddScoped<IEquipmentService, GrpcEquipmentService>();
        serviceCollection.AddScoped<IDriverService, GrpcDriverService>();
        serviceCollection.AddScoped<IDefectService, GrpcDefectService>();
        serviceCollection.AddScoped<IWarehouseService, GrpcWarehouseService>();
        serviceCollection.AddScoped<INomenclatureService, GrpcNomenclatureService>();
        serviceCollection.AddScoped<IStockService, GrpcStockService>();

        // Представления
        serviceCollection.AddTransient<MainWindow>();
        serviceCollection.AddTransient<DriverView>();
        serviceCollection.AddTransient<MainMenu>();
        serviceCollection.AddTransient<EquipmentView>();
        serviceCollection.AddTransient<DefectGroupView>();
        serviceCollection.AddTransient<DefectView>();
        serviceCollection.AddTransient<WarehouseView>();
        serviceCollection.AddTransient<NomenclatureView>();
        serviceCollection.AddTransient<StockView>();

        return serviceCollection.BuildServiceProvider();
    }
}

//RelayCommand.cs
using System.Windows.Input;

namespace WpfClient.Helpers;

public class RelayCommand : ICommand
{
    private readonly Action _execute;
    public RelayCommand(Action execute) => _execute = execute;
    public event EventHandler CanExecuteChanged;
    public bool CanExecute(object parameter) => true;
    public void Execute(object parameter) => _execute();
}

//MessagesEnum.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WpfClient.Messages
{
    public enum MessagesEnum
    {
        DefectGroupUpdated,
        EquipmentUpdated,
        DriverUpdated,
        DefectUpdated,
        WarehouseUpdated,
        NomenclatureUpdated,
        StockUpdated,
        SelectNomenclature,
        SelectWarehouse
    }
}


//UpdatedMessage.cs
using RequestManagement.Common.Models.Interfaces;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WpfClient.Messages
{
    public class UpdatedMessage(MessagesEnum message,Type? caller = null)
    {
        public MessagesEnum Message { get; } = message;
    }
    public class SelectTaskMessage(MessagesEnum message, Type caller)
    {
        public MessagesEnum Message { get; } = message;
        public Type Caller { get; } = caller;
    }
    public class SelectResultMessage(MessagesEnum message, Type caller, IEntity? item = null)
    {
        public MessagesEnum Message { get; } = message;
        public Type Caller { get; } = caller;
        public IEntity? Item { get; } = item;
    }
}


//project.assets.json
{
  "version": 3,
  "targets": {
    "net8.0-windows7.0": {
      "BCrypt.Net-Next/4.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "related": ".xml"
          }
        }
      },
      "CommunityToolkit.Mvvm/8.4.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/CommunityToolkit.Mvvm.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/CommunityToolkit.Mvvm.dll": {
            "related": ".pdb;.xml"
          }
        },
        "build": {
          "buildTransitive/CommunityToolkit.Mvvm.targets": {}
        }
      },
      "Google.Protobuf/3.30.2": {
        "type": "package",
        "compile": {
          "lib/net5.0/Google.Protobuf.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.AspNetCore/2.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Protobuf": "3.27.0",
          "Grpc.AspNetCore.Server.ClientFactory": "2.70.0",
          "Grpc.Tools": "2.70.0"
        },
        "compile": {
          "lib/net8.0/_._": {}
        },
        "runtime": {
          "lib/net8.0/_._": {}
        }
      },
      "Grpc.AspNetCore.Server/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Net.Common": "2.70.0"
        },
        "compile": {
          "lib/net8.0/Grpc.AspNetCore.Server.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.dll": {
            "related": ".pdb;.xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.AspNetCore.Server": "2.70.0",
          "Grpc.Net.ClientFactory": "2.70.0"
        },
        "compile": {
          "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll": {
            "related": ".pdb;.xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Grpc.Core.Api/2.70.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.Client/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Net.Common": "2.70.0",
          "Microsoft.Extensions.Logging.Abstractions": "6.0.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.ClientFactory/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Net.Client": "2.70.0",
          "Microsoft.Extensions.Http": "6.0.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.ClientFactory.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.ClientFactory.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.Common/2.70.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Core.Api": "2.70.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Tools/2.71.0": {
        "type": "package",
        "build": {
          "build/Grpc.Tools.props": {},
          "build/Grpc.Tools.targets": {}
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Microsoft.AspNetCore.Http.Abstractions/2.3.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.AspNetCore.Http.Features": "2.3.0",
          "System.Text.Encodings.Web": "8.0.0"
        },
        "compile": {
          "lib/netstandard2.0/Microsoft.AspNetCore.Http.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.AspNetCore.Http.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.AspNetCore.Http.Features/2.3.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/netstandard2.0/Microsoft.AspNetCore.Http.Features.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.AspNetCore.Http.Features.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Bcl.Memory/9.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Bcl.Memory.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Bcl.Memory.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.3",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.EntityFrameworkCore.props": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {
        "type": "package"
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.1",
          "Microsoft.Extensions.Caching.Memory": "9.0.1",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.1",
          "Microsoft.Extensions.Logging": "9.0.1"
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.1"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Http/6.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "6.0.0",
          "Microsoft.Extensions.Logging": "6.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "6.0.0",
          "Microsoft.Extensions.Options": "6.0.0"
        },
        "compile": {
          "lib/netstandard2.0/Microsoft.Extensions.Http.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.Extensions.Http.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Extensions.Logging/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "System.Diagnostics.DiagnosticSource": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Microsoft.Extensions.Options/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Options.targets": {}
        }
      },
      "Microsoft.Extensions.Primitives/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.7.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.7.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.7.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "7.1.2",
          "Microsoft.IdentityModel.Tokens": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.7.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Bcl.Memory": "9.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.IdentityModel.Logging": "8.7.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "related": ".xml"
          }
        }
      },
      "Npgsql/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Npgsql.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "related": ".xml"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "[9.0.1, 10.0.0)",
          "Microsoft.EntityFrameworkCore.Relational": "[9.0.1, 10.0.0)",
          "Npgsql": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "related": ".xml"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.3": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "contentFiles": {
          "contentFiles/any/any/_._": {
            "buildAction": "None",
            "codeLanguage": "any",
            "copyToOutput": false
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.7.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "compile": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "related": ".xml"
          }
        }
      },
      "System.Text.Encodings.Web/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "assetType": "runtime",
            "rid": "browser"
          }
        }
      },
      "RequestManagement.Common/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v8.0",
        "compile": {
          "bin/placeholder/RequestManagement.Common.dll": {}
        },
        "runtime": {
          "bin/placeholder/RequestManagement.Common.dll": {}
        }
      },
      "RequestManagement.Server/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v8.0",
        "dependencies": {
          "BCrypt.Net-Next": "4.0.3",
          "Google.Protobuf": "3.30.2",
          "Grpc.AspNetCore": "2.70.0",
          "Microsoft.AspNetCore.Authentication.JwtBearer": "8.0.14",
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "RequestManagement.Common": "1.0.0",
          "System.IdentityModel.Tokens.Jwt": "8.7.0"
        },
        "compile": {
          "bin/placeholder/RequestManagement.Server.dll": {}
        },
        "runtime": {
          "bin/placeholder/RequestManagement.Server.dll": {}
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      }
    }
  },
  "libraries": {
    "BCrypt.Net-Next/4.0.3": {
      "sha512": "W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "type": "package",
      "path": "bcrypt.net-next/4.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "bcrypt.net-next.4.0.3.nupkg.sha512",
        "bcrypt.net-next.nuspec",
        "ico.png",
        "lib/net20/BCrypt.Net-Next.dll",
        "lib/net20/BCrypt.Net-Next.xml",
        "lib/net35/BCrypt.Net-Next.dll",
        "lib/net35/BCrypt.Net-Next.xml",
        "lib/net462/BCrypt.Net-Next.dll",
        "lib/net462/BCrypt.Net-Next.xml",
        "lib/net472/BCrypt.Net-Next.dll",
        "lib/net472/BCrypt.Net-Next.xml",
        "lib/net48/BCrypt.Net-Next.dll",
        "lib/net48/BCrypt.Net-Next.xml",
        "lib/net5.0/BCrypt.Net-Next.dll",
        "lib/net5.0/BCrypt.Net-Next.xml",
        "lib/net6.0/BCrypt.Net-Next.dll",
        "lib/net6.0/BCrypt.Net-Next.xml",
        "lib/netstandard2.0/BCrypt.Net-Next.dll",
        "lib/netstandard2.0/BCrypt.Net-Next.xml",
        "lib/netstandard2.1/BCrypt.Net-Next.dll",
        "lib/netstandard2.1/BCrypt.Net-Next.xml",
        "readme.md"
      ]
    },
    "CommunityToolkit.Mvvm/8.4.0": {
      "sha512": "tqVU8yc/ADO9oiTRyTnwhFN68hCwvkliMierptWOudIAvWY1mWCh5VFh+guwHJmpMwfg0J0rY+yyd5Oy7ty9Uw==",
      "type": "package",
      "path": "communitytoolkit.mvvm/8.4.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "License.md",
        "ThirdPartyNotices.txt",
        "analyzers/dotnet/roslyn4.0/cs/CommunityToolkit.Mvvm.CodeFixers.dll",
        "analyzers/dotnet/roslyn4.0/cs/CommunityToolkit.Mvvm.SourceGenerators.dll",
        "analyzers/dotnet/roslyn4.12/cs/CommunityToolkit.Mvvm.CodeFixers.dll",
        "analyzers/dotnet/roslyn4.12/cs/CommunityToolkit.Mvvm.SourceGenerators.dll",
        "analyzers/dotnet/roslyn4.3/cs/CommunityToolkit.Mvvm.CodeFixers.dll",
        "analyzers/dotnet/roslyn4.3/cs/CommunityToolkit.Mvvm.SourceGenerators.dll",
        "build/CommunityToolkit.Mvvm.FeatureSwitches.targets",
        "build/CommunityToolkit.Mvvm.SourceGenerators.targets",
        "build/CommunityToolkit.Mvvm.Windows.targets",
        "build/CommunityToolkit.Mvvm.WindowsSdk.targets",
        "build/CommunityToolkit.Mvvm.targets",
        "buildTransitive/CommunityToolkit.Mvvm.FeatureSwitches.targets",
        "buildTransitive/CommunityToolkit.Mvvm.SourceGenerators.targets",
        "buildTransitive/CommunityToolkit.Mvvm.Windows.targets",
        "buildTransitive/CommunityToolkit.Mvvm.WindowsSdk.targets",
        "buildTransitive/CommunityToolkit.Mvvm.targets",
        "communitytoolkit.mvvm.8.4.0.nupkg.sha512",
        "communitytoolkit.mvvm.nuspec",
        "lib/net8.0-windows10.0.17763/CommunityToolkit.Mvvm.dll",
        "lib/net8.0-windows10.0.17763/CommunityToolkit.Mvvm.pdb",
        "lib/net8.0-windows10.0.17763/CommunityToolkit.Mvvm.xml",
        "lib/net8.0/CommunityToolkit.Mvvm.dll",
        "lib/net8.0/CommunityToolkit.Mvvm.pdb",
        "lib/net8.0/CommunityToolkit.Mvvm.xml",
        "lib/netstandard2.0/CommunityToolkit.Mvvm.dll",
        "lib/netstandard2.0/CommunityToolkit.Mvvm.pdb",
        "lib/netstandard2.0/CommunityToolkit.Mvvm.xml",
        "lib/netstandard2.1/CommunityToolkit.Mvvm.dll",
        "lib/netstandard2.1/CommunityToolkit.Mvvm.pdb",
        "lib/netstandard2.1/CommunityToolkit.Mvvm.xml"
      ]
    },
    "Google.Protobuf/3.30.2": {
      "sha512": "Y2aOVLIt75yeeEWigg9V9YnjsEm53sADtLGq0gLhwaXpk3iu8tYSoauolyhenagA2sWno2TQ2WujI0HQd6s1Vw==",
      "type": "package",
      "path": "google.protobuf/3.30.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "google.protobuf.3.30.2.nupkg.sha512",
        "google.protobuf.nuspec",
        "lib/net45/Google.Protobuf.dll",
        "lib/net45/Google.Protobuf.pdb",
        "lib/net45/Google.Protobuf.xml",
        "lib/net5.0/Google.Protobuf.dll",
        "lib/net5.0/Google.Protobuf.pdb",
        "lib/net5.0/Google.Protobuf.xml",
        "lib/netstandard1.1/Google.Protobuf.dll",
        "lib/netstandard1.1/Google.Protobuf.pdb",
        "lib/netstandard1.1/Google.Protobuf.xml",
        "lib/netstandard2.0/Google.Protobuf.dll",
        "lib/netstandard2.0/Google.Protobuf.pdb",
        "lib/netstandard2.0/Google.Protobuf.xml"
      ]
    },
    "Grpc.AspNetCore/2.70.0": {
      "sha512": "s29ST5F2/PZLzOnfqfeDn0emAZajBtYnV9G7hkbK8Eu9+XphoL3KfiEsg2eBsx7P9YYQXcksDbE+CbHApMZeJA==",
      "type": "package",
      "path": "grpc.aspnetcore/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.aspnetcore.2.70.0.nupkg.sha512",
        "grpc.aspnetcore.nuspec",
        "lib/net6.0/_._",
        "lib/net7.0/_._",
        "lib/net8.0/_._",
        "lib/net9.0/_._",
        "packageIcon.png"
      ]
    },
    "Grpc.AspNetCore.Server/2.70.0": {
      "sha512": "9d6JuMLSxwOX4zERV7HBwq1XL8DD48a6FSoxD5dDXrCz/o0HqMXE2+lRcXHckOlz1JCesznW8XMMJdsU1FfY7w==",
      "type": "package",
      "path": "grpc.aspnetcore.server/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.aspnetcore.server.2.70.0.nupkg.sha512",
        "grpc.aspnetcore.server.nuspec",
        "lib/net6.0/Grpc.AspNetCore.Server.dll",
        "lib/net6.0/Grpc.AspNetCore.Server.pdb",
        "lib/net6.0/Grpc.AspNetCore.Server.xml",
        "lib/net7.0/Grpc.AspNetCore.Server.dll",
        "lib/net7.0/Grpc.AspNetCore.Server.pdb",
        "lib/net7.0/Grpc.AspNetCore.Server.xml",
        "lib/net8.0/Grpc.AspNetCore.Server.dll",
        "lib/net8.0/Grpc.AspNetCore.Server.pdb",
        "lib/net8.0/Grpc.AspNetCore.Server.xml",
        "lib/net9.0/Grpc.AspNetCore.Server.dll",
        "lib/net9.0/Grpc.AspNetCore.Server.pdb",
        "lib/net9.0/Grpc.AspNetCore.Server.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
      "sha512": "k4GrvUAgVWm7DyhnV55MHdX4bQSpZVEQmlZO3bdSmGZ+z6Hx+CwDlhqiReczCm6qbzSUbS1YW0t7z7UEObTwKA==",
      "type": "package",
      "path": "grpc.aspnetcore.server.clientfactory/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "grpc.aspnetcore.server.clientfactory.2.70.0.nupkg.sha512",
        "grpc.aspnetcore.server.clientfactory.nuspec",
        "lib/net6.0/Grpc.AspNetCore.Server.ClientFactory.dll",
        "lib/net6.0/Grpc.AspNetCore.Server.ClientFactory.pdb",
        "lib/net6.0/Grpc.AspNetCore.Server.ClientFactory.xml",
        "lib/net7.0/Grpc.AspNetCore.Server.ClientFactory.dll",
        "lib/net7.0/Grpc.AspNetCore.Server.ClientFactory.pdb",
        "lib/net7.0/Grpc.AspNetCore.Server.ClientFactory.xml",
        "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll",
        "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.pdb",
        "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.xml",
        "lib/net9.0/Grpc.AspNetCore.Server.ClientFactory.dll",
        "lib/net9.0/Grpc.AspNetCore.Server.ClientFactory.pdb",
        "lib/net9.0/Grpc.AspNetCore.Server.ClientFactory.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Core.Api/2.70.0": {
      "sha512": "66UotvWcSIq41oiQhLWcQACyKPM4umxXNiht5DQTLZJfNwEswWOcS7Z0xIEHyNIBE7ZpjotH22bEjTkvhPxmVw==",
      "type": "package",
      "path": "grpc.core.api/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.core.api.2.70.0.nupkg.sha512",
        "grpc.core.api.nuspec",
        "lib/net462/Grpc.Core.Api.dll",
        "lib/net462/Grpc.Core.Api.pdb",
        "lib/net462/Grpc.Core.Api.xml",
        "lib/netstandard2.0/Grpc.Core.Api.dll",
        "lib/netstandard2.0/Grpc.Core.Api.pdb",
        "lib/netstandard2.0/Grpc.Core.Api.xml",
        "lib/netstandard2.1/Grpc.Core.Api.dll",
        "lib/netstandard2.1/Grpc.Core.Api.pdb",
        "lib/netstandard2.1/Grpc.Core.Api.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.Client/2.70.0": {
      "sha512": "xNv0FFCVJa5S1beUtye82WFCxKThuE1jbN8DO1x1Rj8VSIWXLBUmfSID5a1fGzsU2R/EMfwPoWclJ2RMfQuGXw==",
      "type": "package",
      "path": "grpc.net.client/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.net.client.2.70.0.nupkg.sha512",
        "grpc.net.client.nuspec",
        "lib/net462/Grpc.Net.Client.dll",
        "lib/net462/Grpc.Net.Client.pdb",
        "lib/net462/Grpc.Net.Client.xml",
        "lib/net6.0/Grpc.Net.Client.dll",
        "lib/net6.0/Grpc.Net.Client.pdb",
        "lib/net6.0/Grpc.Net.Client.xml",
        "lib/net7.0/Grpc.Net.Client.dll",
        "lib/net7.0/Grpc.Net.Client.pdb",
        "lib/net7.0/Grpc.Net.Client.xml",
        "lib/net8.0/Grpc.Net.Client.dll",
        "lib/net8.0/Grpc.Net.Client.pdb",
        "lib/net8.0/Grpc.Net.Client.xml",
        "lib/netstandard2.0/Grpc.Net.Client.dll",
        "lib/netstandard2.0/Grpc.Net.Client.pdb",
        "lib/netstandard2.0/Grpc.Net.Client.xml",
        "lib/netstandard2.1/Grpc.Net.Client.dll",
        "lib/netstandard2.1/Grpc.Net.Client.pdb",
        "lib/netstandard2.1/Grpc.Net.Client.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.ClientFactory/2.70.0": {
      "sha512": "Qg+93oj/8RdEw3PnLZNNYWnWCWyJYC/ZYZcjeln/pLaxLaPvdXES1peiqSJUI4wLFZ1JwGlbWt8+nM1i2E7ihg==",
      "type": "package",
      "path": "grpc.net.clientfactory/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.net.clientfactory.2.70.0.nupkg.sha512",
        "grpc.net.clientfactory.nuspec",
        "lib/net6.0/Grpc.Net.ClientFactory.dll",
        "lib/net6.0/Grpc.Net.ClientFactory.pdb",
        "lib/net6.0/Grpc.Net.ClientFactory.xml",
        "lib/net7.0/Grpc.Net.ClientFactory.dll",
        "lib/net7.0/Grpc.Net.ClientFactory.pdb",
        "lib/net7.0/Grpc.Net.ClientFactory.xml",
        "lib/net8.0/Grpc.Net.ClientFactory.dll",
        "lib/net8.0/Grpc.Net.ClientFactory.pdb",
        "lib/net8.0/Grpc.Net.ClientFactory.xml",
        "lib/netstandard2.0/Grpc.Net.ClientFactory.dll",
        "lib/netstandard2.0/Grpc.Net.ClientFactory.pdb",
        "lib/netstandard2.0/Grpc.Net.ClientFactory.xml",
        "lib/netstandard2.1/Grpc.Net.ClientFactory.dll",
        "lib/netstandard2.1/Grpc.Net.ClientFactory.pdb",
        "lib/netstandard2.1/Grpc.Net.ClientFactory.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.Common/2.70.0": {
      "sha512": "rBdEUMyCwa+iB8mqC6JKyPbj3SBHHkReJj/yy/XKJI63GcG6w9DJMMGTVcYHqq4Ci2W4m0HT4jt2pFfFscar8g==",
      "type": "package",
      "path": "grpc.net.common/2.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "grpc.net.common.2.70.0.nupkg.sha512",
        "grpc.net.common.nuspec",
        "lib/net6.0/Grpc.Net.Common.dll",
        "lib/net6.0/Grpc.Net.Common.pdb",
        "lib/net6.0/Grpc.Net.Common.xml",
        "lib/net7.0/Grpc.Net.Common.dll",
        "lib/net7.0/Grpc.Net.Common.pdb",
        "lib/net7.0/Grpc.Net.Common.xml",
        "lib/net8.0/Grpc.Net.Common.dll",
        "lib/net8.0/Grpc.Net.Common.pdb",
        "lib/net8.0/Grpc.Net.Common.xml",
        "lib/netstandard2.0/Grpc.Net.Common.dll",
        "lib/netstandard2.0/Grpc.Net.Common.pdb",
        "lib/netstandard2.0/Grpc.Net.Common.xml",
        "lib/netstandard2.1/Grpc.Net.Common.dll",
        "lib/netstandard2.1/Grpc.Net.Common.pdb",
        "lib/netstandard2.1/Grpc.Net.Common.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Tools/2.71.0": {
      "sha512": "r8zHZm7kHdMrtujnkcuQ0BNDH2969at/8Va1ZzQgVblaQzR7tm8JlA3G+5Z5IFbvvf9PcAr1/VcoSR+g7j4Nyw==",
      "type": "package",
      "path": "grpc.tools/2.71.0",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "build/Grpc.Tools.props",
        "build/Grpc.Tools.targets",
        "build/_grpc/Grpc.CSharp.xml",
        "build/_grpc/_Grpc.Tools.props",
        "build/_grpc/_Grpc.Tools.targets",
        "build/_protobuf/Google.Protobuf.Tools.props",
        "build/_protobuf/Google.Protobuf.Tools.targets",
        "build/_protobuf/Protobuf.CSharp.xml",
        "build/_protobuf/net45/Protobuf.MSBuild.dll",
        "build/_protobuf/net45/Protobuf.MSBuild.pdb",
        "build/_protobuf/netstandard1.3/Protobuf.MSBuild.dll",
        "build/_protobuf/netstandard1.3/Protobuf.MSBuild.pdb",
        "build/native/include/google/protobuf/any.proto",
        "build/native/include/google/protobuf/api.proto",
        "build/native/include/google/protobuf/descriptor.proto",
        "build/native/include/google/protobuf/duration.proto",
        "build/native/include/google/protobuf/empty.proto",
        "build/native/include/google/protobuf/field_mask.proto",
        "build/native/include/google/protobuf/source_context.proto",
        "build/native/include/google/protobuf/struct.proto",
        "build/native/include/google/protobuf/timestamp.proto",
        "build/native/include/google/protobuf/type.proto",
        "build/native/include/google/protobuf/wrappers.proto",
        "grpc.tools.2.71.0.nupkg.sha512",
        "grpc.tools.nuspec",
        "packageIcon.png",
        "tools/linux_arm64/grpc_csharp_plugin",
        "tools/linux_arm64/protoc",
        "tools/linux_x64/grpc_csharp_plugin",
        "tools/linux_x64/protoc",
        "tools/linux_x86/grpc_csharp_plugin",
        "tools/linux_x86/protoc",
        "tools/macosx_x64/grpc_csharp_plugin",
        "tools/macosx_x64/protoc",
        "tools/windows_x64/grpc_csharp_plugin.exe",
        "tools/windows_x64/protoc.exe",
        "tools/windows_x86/grpc_csharp_plugin.exe",
        "tools/windows_x86/protoc.exe"
      ]
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
      "sha512": "e19jmWJAQucbPYk3/fihJMDCYfv6CO+Qwp34pOehUSCbaHROw6FZ551SN1D0s9Btl0U/QHfuwFq6Z8Oa2ktE6g==",
      "type": "package",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.14",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll",
        "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.xml",
        "microsoft.aspnetcore.authentication.jwtbearer.8.0.14.nupkg.sha512",
        "microsoft.aspnetcore.authentication.jwtbearer.nuspec"
      ]
    },
    "Microsoft.AspNetCore.Http.Abstractions/2.3.0": {
      "sha512": "39r9PPrjA6s0blyFv5qarckjNkaHRA5B+3b53ybuGGNTXEj1/DStQJ4NWjFL6QTRQpL9zt7nDyKxZdJOlcnq+Q==",
      "type": "package",
      "path": "microsoft.aspnetcore.http.abstractions/2.3.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/netstandard2.0/Microsoft.AspNetCore.Http.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.AspNetCore.Http.Abstractions.xml",
        "microsoft.aspnetcore.http.abstractions.2.3.0.nupkg.sha512",
        "microsoft.aspnetcore.http.abstractions.nuspec"
      ]
    },
    "Microsoft.AspNetCore.Http.Features/2.3.0": {
      "sha512": "f10WUgcsKqrkmnz6gt8HeZ7kyKjYN30PO7cSic1lPtH7paPtnQqXPOveul/SIPI43PhRD4trttg4ywnrEmmJpA==",
      "type": "package",
      "path": "microsoft.aspnetcore.http.features/2.3.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/netstandard2.0/Microsoft.AspNetCore.Http.Features.dll",
        "lib/netstandard2.0/Microsoft.AspNetCore.Http.Features.xml",
        "microsoft.aspnetcore.http.features.2.3.0.nupkg.sha512",
        "microsoft.aspnetcore.http.features.nuspec"
      ]
    },
    "Microsoft.Bcl.Memory/9.0.0": {
      "sha512": "bTUtGfpGyJnohQzjdXbtc7MqNzkv7CWUSRz54+ucNm0i32rZiIU0VdVPHDBShOl1qhVKRjW8mnEBz3d2vH93tQ==",
      "type": "package",
      "path": "microsoft.bcl.memory/9.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Bcl.Memory.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Bcl.Memory.targets",
        "lib/net462/Microsoft.Bcl.Memory.dll",
        "lib/net462/Microsoft.Bcl.Memory.xml",
        "lib/net8.0/Microsoft.Bcl.Memory.dll",
        "lib/net8.0/Microsoft.Bcl.Memory.xml",
        "lib/net9.0/Microsoft.Bcl.Memory.dll",
        "lib/net9.0/Microsoft.Bcl.Memory.xml",
        "lib/netstandard2.0/Microsoft.Bcl.Memory.dll",
        "lib/netstandard2.0/Microsoft.Bcl.Memory.xml",
        "lib/netstandard2.1/Microsoft.Bcl.Memory.dll",
        "lib/netstandard2.1/Microsoft.Bcl.Memory.xml",
        "microsoft.bcl.memory.9.0.0.nupkg.sha512",
        "microsoft.bcl.memory.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.EntityFrameworkCore/9.0.3": {
      "sha512": "ji6fWE8bFWTvqaMue49RSCcAeqlec13hAbitTBZyz/RmYsQDhqM9VkWUoXS1x1mjcsyWjc5EQr2XyuAkwp0eNQ==",
      "type": "package",
      "path": "microsoft.entityframeworkcore/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "buildTransitive/net8.0/Microsoft.EntityFrameworkCore.props",
        "lib/net8.0/Microsoft.EntityFrameworkCore.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.xml",
        "microsoft.entityframeworkcore.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
      "sha512": "HQH7HgwTl6IyasW7t6F2+ihuHLDmf9+8XaS41v8VHN5Z7x5ZMQIiHCbwxme4P5ICAjBG6VsWcjMCoh4fHbEwJg==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.xml",
        "microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.abstractions.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {
      "sha512": "M+iOxejD3HqPV8/KE148wIehHA3cmMF+FgnpiN8CFB7DLokVSKQPPrwtHjcrNYJ/BDEssviEPNok/jtQWxj7xA==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "analyzers/dotnet/cs/Microsoft.EntityFrameworkCore.Analyzers.dll",
        "docs/PACKAGE.md",
        "microsoft.entityframeworkcore.analyzers.9.0.3.nupkg.sha512",
        "microsoft.entityframeworkcore.analyzers.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.1": {
      "sha512": "7Iu0h4oevRvH4IwPzmxuIJGYRt55TapoREGlluk75KCO7lenN0+QnzCl6cQDY48uDoxAUpJbpK2xW7o8Ix69dw==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.relational/9.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.xml",
        "microsoft.entityframeworkcore.relational.9.0.1.nupkg.sha512",
        "microsoft.entityframeworkcore.relational.nuspec"
      ]
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
      "sha512": "t8b0R6wtqC4o0hJ+oQkLPydw2MMLEoLEpQXCWbzXAm9NBMOngkDZNcvwF6DxbYdL5SlfZJXbYmiOxKZmwHNgNg==",
      "type": "package",
      "path": "microsoft.extensions.caching.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Caching.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Caching.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "microsoft.extensions.caching.abstractions.9.0.3.nupkg.sha512",
        "microsoft.extensions.caching.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Caching.Memory/9.0.3": {
      "sha512": "TXggBGDDd6r+J7FV09plXpzGmWcknVyoDsHlY2qcCbcAhmb0eH7Q9IkfIZl54/zEedVTa9jPgiPFTxH9WuCGMQ==",
      "type": "package",
      "path": "microsoft.extensions.caching.memory/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Caching.Memory.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Caching.Memory.targets",
        "lib/net462/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net462/Microsoft.Extensions.Caching.Memory.xml",
        "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net8.0/Microsoft.Extensions.Caching.Memory.xml",
        "lib/net9.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net9.0/Microsoft.Extensions.Caching.Memory.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.xml",
        "microsoft.extensions.caching.memory.9.0.3.nupkg.sha512",
        "microsoft.extensions.caching.memory.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.1": {
      "sha512": "+4hfFIY1UjBCXFTTOd+ojlDPq6mep3h5Vq5SYE3Pjucr7dNXmq4S/6P/LoVnZFz2e/5gWp/om4svUFgznfULcA==",
      "type": "package",
      "path": "microsoft.extensions.configuration.abstractions/9.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "microsoft.extensions.configuration.abstractions.9.0.1.nupkg.sha512",
        "microsoft.extensions.configuration.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection/9.0.3": {
      "sha512": "lDbxJpkl6X8KZGpkAxgrrthQ42YeiR0xjPp7KPx+sCPc3ZbpaIbjzd0QQ+9kDdK2RU2DOl3pc6tQyAgEZY3V0A==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
        "microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
      "sha512": "TfaHPSe39NyL2wxkisRxXK7xvHGZYBZ+dy3r+mqGvnxKgAPdHkMu3QMQZI4pquP6W5FIQBqs8FJpWV8ffCgDqQ==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Http/6.0.0": {
      "sha512": "15+pa2G0bAMHbHewaQIdr/y6ag2H3yh4rd9hTXavtWDzQBkvpe2RMqFg8BxDpcQWssmjmBApGPcw93QRz6YcMg==",
      "type": "package",
      "path": "microsoft.extensions.http/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net461/Microsoft.Extensions.Http.dll",
        "lib/net461/Microsoft.Extensions.Http.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Http.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Http.xml",
        "microsoft.extensions.http.6.0.0.nupkg.sha512",
        "microsoft.extensions.http.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging/9.0.3": {
      "sha512": "utIi2R1nm+PCWkvWBf1Ou6LWqg9iLfHU23r8yyU9VCvda4dEs7xbTZSwGa5KuwbpzpgCbHCIuKaFHB3zyFmnGw==",
      "type": "package",
      "path": "microsoft.extensions.logging/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.targets",
        "lib/net462/Microsoft.Extensions.Logging.dll",
        "lib/net462/Microsoft.Extensions.Logging.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.xml",
        "microsoft.extensions.logging.9.0.3.nupkg.sha512",
        "microsoft.extensions.logging.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
      "sha512": "H/MBMLt9A/69Ux4OrV7oCKt3DcMT04o5SCqDolulzQA66TLFEpYYb4qedMs/uwrLtyHXGuDGWKZse/oa8W9AZw==",
      "type": "package",
      "path": "microsoft.extensions.logging.abstractions/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net462/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512",
        "microsoft.extensions.logging.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Options/9.0.3": {
      "sha512": "xE7MpY70lkw1oiid5y6FbL9dVw8oLfkx8RhSNGN8sSzBlCqGn0SyT3Fqc8tZnDaPIq7Z8R9RTKlS564DS+MV3g==",
      "type": "package",
      "path": "microsoft.extensions.options/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Options.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Options.targets",
        "buildTransitive/net462/Microsoft.Extensions.Options.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Options.targets",
        "lib/net462/Microsoft.Extensions.Options.dll",
        "lib/net462/Microsoft.Extensions.Options.xml",
        "lib/net8.0/Microsoft.Extensions.Options.dll",
        "lib/net8.0/Microsoft.Extensions.Options.xml",
        "lib/net9.0/Microsoft.Extensions.Options.dll",
        "lib/net9.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Options.xml",
        "microsoft.extensions.options.9.0.3.nupkg.sha512",
        "microsoft.extensions.options.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Primitives/9.0.3": {
      "sha512": "yCCJHvBcRyqapMSNzP+kTc57Eaavq2cr5Tmuil6/XVnipQf5xmskxakSQ1enU6S4+fNg3sJ27WcInV64q24JsA==",
      "type": "package",
      "path": "microsoft.extensions.primitives/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Primitives.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Primitives.targets",
        "lib/net462/Microsoft.Extensions.Primitives.dll",
        "lib/net462/Microsoft.Extensions.Primitives.xml",
        "lib/net8.0/Microsoft.Extensions.Primitives.dll",
        "lib/net8.0/Microsoft.Extensions.Primitives.xml",
        "lib/net9.0/Microsoft.Extensions.Primitives.dll",
        "lib/net9.0/Microsoft.Extensions.Primitives.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
        "microsoft.extensions.primitives.9.0.3.nupkg.sha512",
        "microsoft.extensions.primitives.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.IdentityModel.Abstractions/8.7.0": {
      "sha512": "OQd5aVepYvh5evOmBMeAYjMIpEcTf1ZCBZaU7Nh/RlhhdXefjFDJeP1L2F2zeNT1unFr+wUu/h3Ac2Xb4BXU6w==",
      "type": "package",
      "path": "microsoft.identitymodel.abstractions/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net462/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net472/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net472/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net6.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net6.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net8.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net9.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net9.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Abstractions.xml",
        "microsoft.identitymodel.abstractions.8.7.0.nupkg.sha512",
        "microsoft.identitymodel.abstractions.nuspec"
      ]
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
      "sha512": "uzsSAWhNhbrkWbQKBTE8QhzviU6sr3bJ1Bkv7gERlhswfSKOp7HsxTRLTPBpx/whQ/GRRHEwMg8leRIPbMrOgw==",
      "type": "package",
      "path": "microsoft.identitymodel.jsonwebtokens/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net462/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net472/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net472/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net6.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net6.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net9.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net9.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "microsoft.identitymodel.jsonwebtokens.8.7.0.nupkg.sha512",
        "microsoft.identitymodel.jsonwebtokens.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Logging/8.7.0": {
      "sha512": "Bs0TznPAu+nxa9rAVHJ+j3CYECHJkT3tG8AyBfhFYlT5ldsDhoxFT7J+PKxJHLf+ayqWfvDZHHc4639W2FQCxA==",
      "type": "package",
      "path": "microsoft.identitymodel.logging/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Logging.dll",
        "lib/net462/Microsoft.IdentityModel.Logging.xml",
        "lib/net472/Microsoft.IdentityModel.Logging.dll",
        "lib/net472/Microsoft.IdentityModel.Logging.xml",
        "lib/net6.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net6.0/Microsoft.IdentityModel.Logging.xml",
        "lib/net8.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net8.0/Microsoft.IdentityModel.Logging.xml",
        "lib/net9.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net9.0/Microsoft.IdentityModel.Logging.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Logging.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Logging.xml",
        "microsoft.identitymodel.logging.8.7.0.nupkg.sha512",
        "microsoft.identitymodel.logging.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "sha512": "SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "type": "package",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net461/Microsoft.IdentityModel.Protocols.dll",
        "lib/net461/Microsoft.IdentityModel.Protocols.xml",
        "lib/net462/Microsoft.IdentityModel.Protocols.dll",
        "lib/net462/Microsoft.IdentityModel.Protocols.xml",
        "lib/net472/Microsoft.IdentityModel.Protocols.dll",
        "lib/net472/Microsoft.IdentityModel.Protocols.xml",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.xml",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.xml",
        "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512",
        "microsoft.identitymodel.protocols.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "sha512": "6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "type": "package",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net461/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net461/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net462/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net462/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net472/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net472/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512",
        "microsoft.identitymodel.protocols.openidconnect.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Tokens/8.7.0": {
      "sha512": "5Z6voXjRXAnGklhmZd1mKz89UhcF5ZQQZaZc2iKrOuL4Li1UihG2vlJx8IbiFAOIxy/xdbsAm0A+WZEaH5fxng==",
      "type": "package",
      "path": "microsoft.identitymodel.tokens/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Tokens.dll",
        "lib/net462/Microsoft.IdentityModel.Tokens.xml",
        "lib/net472/Microsoft.IdentityModel.Tokens.dll",
        "lib/net472/Microsoft.IdentityModel.Tokens.xml",
        "lib/net6.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net6.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/net8.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net8.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/net9.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net9.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Tokens.xml",
        "microsoft.identitymodel.tokens.8.7.0.nupkg.sha512",
        "microsoft.identitymodel.tokens.nuspec"
      ]
    },
    "Npgsql/9.0.3": {
      "sha512": "tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "type": "package",
      "path": "npgsql/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net6.0/Npgsql.dll",
        "lib/net6.0/Npgsql.xml",
        "lib/net8.0/Npgsql.dll",
        "lib/net8.0/Npgsql.xml",
        "npgsql.9.0.3.nupkg.sha512",
        "npgsql.nuspec",
        "postgresql.png"
      ]
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "sha512": "mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "type": "package",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll",
        "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.xml",
        "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512",
        "npgsql.entityframeworkcore.postgresql.nuspec",
        "postgresql.png"
      ]
    },
    "System.Diagnostics.DiagnosticSource/9.0.3": {
      "sha512": "cBA+28xDW33tSiGht/H8xvr8lnaCrgJ7EdO348AfSGsX4PPJUOULKxny/cc9DVNGExaCrtqagsnm5M2mkWIZ+g==",
      "type": "package",
      "path": "system.diagnostics.diagnosticsource/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Diagnostics.DiagnosticSource.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.DiagnosticSource.targets",
        "content/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "contentFiles/any/net462/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "contentFiles/any/net8.0/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "contentFiles/any/net9.0/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "contentFiles/any/netstandard2.0/ILLink/ILLink.Descriptors.LibraryBuild.xml",
        "lib/net462/System.Diagnostics.DiagnosticSource.dll",
        "lib/net462/System.Diagnostics.DiagnosticSource.xml",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.xml",
        "system.diagnostics.diagnosticsource.9.0.3.nupkg.sha512",
        "system.diagnostics.diagnosticsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.IdentityModel.Tokens.Jwt/8.7.0": {
      "sha512": "8dKL3A9pVqYCJIXHd4H2epQqLxSvKeNxGonR0e5g89yMchyvsM/NLuB06otx29BicUd6+LUJZgNZmvYjjPsPGg==",
      "type": "package",
      "path": "system.identitymodel.tokens.jwt/8.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net462/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net472/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net472/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net6.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net6.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net8.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net9.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net9.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/netstandard2.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/netstandard2.0/System.IdentityModel.Tokens.Jwt.xml",
        "system.identitymodel.tokens.jwt.8.7.0.nupkg.sha512",
        "system.identitymodel.tokens.jwt.nuspec"
      ]
    },
    "System.Text.Encodings.Web/8.0.0": {
      "sha512": "yev/k9GHAEGx2Rg3/tU6MQh4HGBXJs70y7j1LaM1i/ER9po+6nnQ6RRqTJn1E7Xu0fbIFK80Nh5EoODxrbxwBQ==",
      "type": "package",
      "path": "system.text.encodings.web/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Text.Encodings.Web.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Text.Encodings.Web.targets",
        "lib/net462/System.Text.Encodings.Web.dll",
        "lib/net462/System.Text.Encodings.Web.xml",
        "lib/net6.0/System.Text.Encodings.Web.dll",
        "lib/net6.0/System.Text.Encodings.Web.xml",
        "lib/net7.0/System.Text.Encodings.Web.dll",
        "lib/net7.0/System.Text.Encodings.Web.xml",
        "lib/net8.0/System.Text.Encodings.Web.dll",
        "lib/net8.0/System.Text.Encodings.Web.xml",
        "lib/netstandard2.0/System.Text.Encodings.Web.dll",
        "lib/netstandard2.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net7.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net7.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.xml",
        "system.text.encodings.web.8.0.0.nupkg.sha512",
        "system.text.encodings.web.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "RequestManagement.Common/1.0.0": {
      "type": "project",
      "path": "../RequestManagement.Common/RequestManagement.Common.csproj",
      "msbuildProject": "../RequestManagement.Common/RequestManagement.Common.csproj"
    },
    "RequestManagement.Server/1.0.0": {
      "type": "project",
      "path": "../RequestManagement.Server/RequestManagement.Server.csproj",
      "msbuildProject": "../RequestManagement.Server/RequestManagement.Server.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net8.0-windows7.0": [
      "CommunityToolkit.Mvvm >= 8.4.0",
      "Google.Protobuf >= 3.30.2",
      "Grpc.Net.Client >= 2.70.0",
      "Grpc.Net.ClientFactory >= 2.70.0",
      "Grpc.Tools >= 2.71.0",
      "Microsoft.AspNetCore.Http.Abstractions >= 2.3.0",
      "RequestManagement.Common >= 1.0.0",
      "RequestManagement.Server >= 1.0.0"
    ]
  },
  "packageFolders": {
    "C:\\Users\\Thron\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {},
    "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
      "projectName": "WpfClient",
      "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
      "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
        "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
      ],
      "configFilePaths": [
        "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net8.0-windows"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "C:\\Program Files\\dotnet\\library-packs": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "projectReferences": {
            "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
              "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
            },
            "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
              "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      }
    },
    "frameworks": {
      "net8.0-windows7.0": {
        "targetAlias": "net8.0-windows",
        "dependencies": {
          "CommunityToolkit.Mvvm": {
            "target": "Package",
            "version": "[8.4.0, )"
          },
          "Google.Protobuf": {
            "target": "Package",
            "version": "[3.30.2, )"
          },
          "Grpc.Net.Client": {
            "target": "Package",
            "version": "[2.70.0, )"
          },
          "Grpc.Net.ClientFactory": {
            "target": "Package",
            "version": "[2.70.0, )"
          },
          "Grpc.Tools": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[2.71.0, )"
          },
          "Microsoft.AspNetCore.Http.Abstractions": {
            "target": "Package",
            "version": "[2.3.0, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          },
          "Microsoft.WindowsDesktop.App.WPF": {
            "privateAssets": "none"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}

//WpfClient.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_11m3sm4p_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_122ck3wr_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_1wb5wecb_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_2bt205vp_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_30jpsrd0_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_4az13mnw_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_5jn2zsbo_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_5mp05z1l_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_ajsffmw1_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_alkcioto_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_bkko53u0_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_c1pjeh5g_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_ctyrajcd_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_dfts25j0_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_dtnrde2p_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_fquilj42_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_ggbfulic_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_huj51alq_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_hxvvbjs1_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_iixs0amh_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_jbdadvgg_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_jc2nxsjq_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_jd3ttz53_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_l4gowteb_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_lqiov5vx_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_lqunjhwt_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_msedfypc_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_mthvs3yi_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_p4xqltvx_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_pke132ci_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_q1siaxpk_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_q25jazk4_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_qg4gij1w_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_qmaojpxe_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_qn5rokqm_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_qq2s2pon_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_rcuvthhv_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_umszrixc_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_v1iajqk2_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_vkpcfxah_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_w2o01yqq_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_xne1olbs_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_xsrxcoqd_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_ygkofd3n_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//WpfClient_ynysieo1_wpftmp.csproj.nuget.dgspec.json
{
  "format": 1,
  "restore": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {}
  },
  "projects": {
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "projectName": "RequestManagement.Common",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "projectName": "RequestManagement.Server",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.AspNetCore": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.14, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.3, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.7.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "projectName": "WpfClient",
        "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\WpfClient.csproj",
        "packagesPath": "C:\\Users\\Thron\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\WpfClient\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
          "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet\\"
        ],
        "configFilePaths": [
          "C:\\Users\\Thron\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "C:\\Program Files\\dotnet\\library-packs": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0-windows7.0": {
            "targetAlias": "net8.0-windows",
            "projectReferences": {
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Common\\RequestManagement.Common.csproj"
              },
              "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj": {
                "projectPath": "C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\RequestManagement.Server\\RequestManagement.Server.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        }
      },
      "frameworks": {
        "net8.0-windows7.0": {
          "targetAlias": "net8.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Google.Protobuf": {
              "target": "Package",
              "version": "[3.30.2, )"
            },
            "Grpc.Net.Client": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Net.ClientFactory": {
              "target": "Package",
              "version": "[2.70.0, )"
            },
            "Grpc.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[2.71.0, )"
            },
            "Microsoft.AspNetCore.Http.Abstractions": {
              "target": "Package",
              "version": "[2.3.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\8.0.403/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}

//AuthTokenStore.cs
using RequestManagement.Common.Models.Enums;

namespace WpfClient.Services;

public class AuthTokenStore
{
    private string _token;
    private UserRole _role;
    public void SetToken(string token) => _token = token;

    public string GetToken() => _token;

    public void ClearToken() => _token = null;

    public void SetRole(UserRole role) => _role = role;
    public UserRole GetRole() => _role;
}

//GrpcAuthService.cs
using Grpc.Core;
using RequestManagement.Server.Controllers;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services;

public class GrpcAuthService(IGrpcClientFactory clientFactory, AuthTokenStore tokenStore)
{
    private readonly AuthTokenStore _tokenStore = tokenStore ?? throw new ArgumentNullException(nameof(tokenStore));

    public async Task<AuthenticateResponse> AuthenticateAsync(string login, string password)
    {
        try
        {
            var request = new AuthenticateRequest { Login = login, Password = password };
            var authClient = clientFactory.CreateAuthClient();
            var response = await authClient.AuthenticateAsync(request);
            var token = response.Token;

            // Сохраняем токен в AuthTokenStore
            if (!string.IsNullOrEmpty(token))
            {
                _tokenStore.SetToken(token);
            }
            return (response.UserId == 0 ? null : response)!;
        }
        catch (RpcException ex)
        {
            throw new Exception($"Ошибка аутентификации: {ex.Status.Detail}", ex);
        }
    }
}

//GrpcClientFactory.cs
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using RequestManagement.Server.Controllers;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services;

public class GrpcClientFactory(IServiceProvider serviceProvider) : IGrpcClientFactory
{
    public AuthService.AuthServiceClient CreateAuthClient()
    {
        return serviceProvider.GetRequiredService<AuthService.AuthServiceClient>();
    }

    public RequestService.RequestServiceClient CreateRequestClient()
    {
        return serviceProvider.GetRequiredService<RequestService.RequestServiceClient>();
    }
    public StockService.StockServiceClient CreateStockClient()
    {
        return serviceProvider.GetRequiredService<StockService.StockServiceClient>();
    }
}

//GrpcDefectService.cs
using RequestManagement.Common.Interfaces;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using RequestManagement.Server.Controllers;
using Defect = RequestManagement.Common.Models.Defect;
using DefectGroup = RequestManagement.Common.Models.DefectGroup;
using Grpc.Core;
using RequestManagement.Common.Models;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services;

public class GrpcDefectService(IGrpcClientFactory clientFactory, AuthTokenStore tokenStore) : IDefectService
{
    public async Task<List<DefectGroup>> GetAllDefectGroupsAsync(string filter = "")
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var response = await client.GetAllDefectGroupsAsync(new GetAllDefectGroupsRequest { Filter = filter }, headers);
        return response.DefectGroup.Select(defectGroup => new DefectGroup { Id = defectGroup.Id, Name = defectGroup.Name }).ToList();
    }

    public async Task<int> CreateDefectGroupAsync(DefectGroup defectGroup)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.CreateDefectGroupAsync(new CreateDefectGroupRequest { DefectGroup = new RequestManagement.Server.Controllers.DefectGroup { Name = defectGroup.Name } }, headers);
        return result.Id;
    }

    public async Task<bool> UpdateDefectGroupAsync(DefectGroup defectGroup)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.UpdateDefectGroupAsync(new UpdateDefectGroupRequest { DefectGroup = new RequestManagement.Server.Controllers.DefectGroup { Name = defectGroup.Name } }, headers);
        return result.Success;
    }

    public async Task<bool> DeleteDefectGroupAsync(int id)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.DeleteDefectGroupAsync(new DeleteDefectGroupRequest { Id = id }, headers);
        return result.Success;
    }

    public async Task<List<Defect>> GetAllDefectsAsync(string filter = "")
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var response = await client.GetAllDefectsAsync(new GetAllDefectsRequest { Filter = filter }, headers);
        return response.Defect.Select(defect => new Defect { Id = defect.Id, Name = defect.Name, DefectGroupId = defect.DefectGroupId }).ToList();
    }

    public async Task<int> CreateDefectAsync(Defect defect)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.CreateDefectAsync(new CreateDefectRequest { Defect = new RequestManagement.Server.Controllers.Defect { Name = defect.Name, DefectGroupId = defect.DefectGroupId } }, headers);
        return result.Id;
    }

    public async Task<bool> UpdateDefectAsync(Defect defect)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.UpdateDefectAsync(new UpdateDefectRequest { Defect = new RequestManagement.Server.Controllers.Defect { Name = defect.Name, DefectGroupId = defect.DefectGroupId } }, headers);
        return result.Success;
    }

    public async Task<bool> DeleteDefectAsync(int id)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.DeleteDefectAsync(new DeleteDefectRequest { Id = id }, headers);
        return result.Success;
    }
}

//GrpcDriverService.cs
using RequestManagement.Common.Interfaces;
using Grpc.Core;
using RequestManagement.Server.Controllers;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services;

internal class GrpcDriverService(IGrpcClientFactory clientFactory, AuthTokenStore tokenStore) : IDriverService
{
    public async Task<List<RequestManagement.Common.Models.Driver>> GetAllDriversAsync(string filter = "")
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var response = await client.GetAllDriversAsync(new GetAllDriversRequest { Filter = filter }, headers);
        return response.Drivers.Select(driver => new RequestManagement.Common.Models.Driver { Id = driver.Id, FullName = driver.FullName, ShortName = driver.ShortName, Position = driver.Position}).ToList();
    }

    public async Task<int> CreateDriverAsync(RequestManagement.Common.Models.Driver driver)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.CreateDriverAsync(new CreateDriverRequest { Driver = new RequestManagement.Server.Controllers.Driver { FullName = driver.FullName, ShortName = driver.ShortName, Position = driver.Position }}, headers);
        return result.Id;
    }

    public async Task<bool> UpdateDriverAsync(RequestManagement.Common.Models.Driver driver)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.UpdateDriverAsync(new UpdateDriverRequest { Driver = new RequestManagement.Server.Controllers.Driver { Id = driver.Id, FullName = driver.FullName, ShortName = driver.ShortName, Position = driver.Position } }, headers);
        return result.Success;
    }

    public async Task<bool> DeleteDriverAsync(int id)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.DeleteDriverAsync(new DeleteDriverRequest { Id = id }, headers);
        return result.Success;
    }
}

//GrpcEquipmentService.cs
using Grpc.Core;
using RequestManagement.Common.Interfaces;
using RequestManagement.Server.Controllers;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services;

public class GrpcEquipmentService(IGrpcClientFactory clientFactory, AuthTokenStore tokenStore)
    : IEquipmentService
{
    public async Task<int> CreateEquipmentAsync(RequestManagement.Common.Models.Equipment equipment)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var request = new CreateEquipmentRequest { Name = equipment.Name, LicensePlate = equipment.StateNumber };
        var client = clientFactory.CreateRequestClient();
        var result = await client.CreateEquipmentAsync(request, headers);
        return result.Id;
    }

    public async Task<bool> UpdateEquipmentAsync(RequestManagement.Common.Models.Equipment equipment)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var request = new UpdateEquipmentRequest { Name = equipment.Name, LicensePlate = equipment.StateNumber };
        var client = clientFactory.CreateRequestClient();
        var result = await client.UpdateEquipmentAsync(request, headers);
        return result.Success;
    }

    public async Task<bool> DeleteEquipmentAsync(int id)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var request = new DeleteEquipmentRequest { Id = id};
        var client = clientFactory.CreateRequestClient();
        var result = await client.DeleteEquipmentAsync(request, headers);
        return result.Success;
    }

    public async Task<List<RequestManagement.Common.Models.Equipment>> GetAllEquipmentAsync(string filter = "")
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var response = await client.GetAllEquipmentAsync(new GetAllEquipmentRequest { Filter = filter }, headers);
        return response.Equipment.Select(equipment => new RequestManagement.Common.Models.Equipment { Id = equipment.Id, Name = equipment.Name, StateNumber = equipment.LicensePlate }).ToList();
    }
}

//GrpcNomenclatureService.cs
using RequestManagement.Common.Interfaces;
using Grpc.Core;
using RequestManagement.Server.Controllers;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services;

internal class GrpcNomenclatureService(IGrpcClientFactory clientFactory, AuthTokenStore tokenStore) : INomenclatureService
{
    public async Task<List<RequestManagement.Common.Models.Nomenclature>> GetAllNomenclaturesAsync(string filter = "")
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var response = await client.GetAllNomenclaturesAsync(new GetAllNomenclaturesRequest { Filter = filter }, headers);
        return response.Nomenclature.Select(nomenclature => new RequestManagement.Common.Models.Nomenclature { Id = nomenclature.Id, Name = nomenclature.Name,Code = nomenclature.Code,Article = nomenclature.Article,UnitOfMeasure = nomenclature.UnitOfMeasure}).ToList();
    }

    public async Task<int> CreateNomenclatureAsync(RequestManagement.Common.Models.Nomenclature nomenclature)
    {
        try
        {
            var headers = new Metadata();
            if (!string.IsNullOrEmpty(tokenStore.GetToken()))
            {
                headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
            }
            var client = clientFactory.CreateRequestClient();
            var result = await client.CreateNomenclatureAsync(new CreateNomenclatureRequest { Nomenclature = new RequestManagement.Server.Controllers.Nomenclature { Name = nomenclature.Name,Code = nomenclature.Code,Article = nomenclature.Article,UnitOfMeasure = nomenclature.UnitOfMeasure } }, headers);
            return result.Id;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            return -1;
        }
    }

    public async Task<bool> UpdateNomenclatureAsync(RequestManagement.Common.Models.Nomenclature nomenclature)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.UpdateNomenclatureAsync(new UpdateNomenclatureRequest { Nomenclature = new RequestManagement.Server.Controllers.Nomenclature { Id = nomenclature.Id, Name = nomenclature.Name,Code = nomenclature.Code,Article = nomenclature.Article,UnitOfMeasure = nomenclature.UnitOfMeasure } }, headers);
        return result.Success;
    }

    public async Task<bool> DeleteNomenclatureAsync(int id)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.DeleteNomenclatureAsync(new DeleteNomenclatureRequest { Id = id }, headers);
        return result.Success;
    }
}

//GrpcStockService.cs
using RequestManagement.Common.Interfaces;
using Grpc.Core;
using RequestManagement.Server.Controllers;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services;

internal class GrpcStockService(IGrpcClientFactory clientFactory, AuthTokenStore tokenStore) : IStockService
{
    public async Task<List<RequestManagement.Common.Models.Stock>> GetAllStocksAsync(
        int warehouseId,
        string filter = "",
        int initialQuantityFilterType = 0,
        double initialQuantity = 0,
        int receivedQuantityFilterType = 0,
        double receivedQuantity = 0,
        int consumedQuantityFilterType = 0,
        double consumedQuantity = 0,
        int finalQuantityFilterType = 0,
        double finalQuantity = 0
        )
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateStockClient();
        var response = await client.GetAllStockAsync(
            new GetAllStocksRequest
            {
                WarehouseId = warehouseId,
                Filter = filter,
                InitialQuantityFilterType = initialQuantityFilterType,
                InitialQuantity = initialQuantity,
                ReceivedQuantityFilterType = receivedQuantityFilterType,
                ReceivedQuantity = receivedQuantity,
                ConsumedQuantityFilterType = consumedQuantityFilterType,
                ConsumedQuantity = consumedQuantity,
                FinalQuantityFilterType = finalQuantityFilterType,
                FinalQuantity = finalQuantity
            }, headers);
        return response.Stocks.Select(stock => new RequestManagement.Common.Models.Stock
        {
            Id = stock.Id,
            WarehouseId = stock.WarehouseId,
            NomenclatureId = stock.NomenclatureId,
            InitialQuantity = (decimal)stock.InitialQuantity,
            ReceivedQuantity = (decimal)stock.ReceivedQuantity,
            ConsumedQuantity = (decimal)stock.ConsumedQuantity,
            Nomenclature = new RequestManagement.Common.Models.Nomenclature{Code = stock.Nomenclature.Code, Name = stock.Nomenclature.Name, Article = stock.Nomenclature.Article, UnitOfMeasure = stock.Nomenclature.UnitOfMeasure},
        }).ToList();
    }

    public async Task<int> CreateStockAsync(RequestManagement.Common.Models.Stock stock)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateStockClient();
        var result = await client.CreateStockAsync(new CreateStockRequest { WarehouseId = stock.WarehouseId, NomenclatureId = stock.NomenclatureId, InitialQuantity = (double)stock.InitialQuantity }, headers);
        return result.Id;
    }

    public async Task<bool> UpdateStockAsync(RequestManagement.Common.Models.Stock stock)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateStockClient();
        var result = await client.UpdateStockAsync(new UpdateStockRequest { Id = stock.Id, NomenclatureId = stock.NomenclatureId, InitialQuantity = (double)stock.InitialQuantity }, headers);
        return result.Success;
    }

    public async Task<bool> DeleteStockAsync(int id)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateStockClient();
        var result = await client.DeleteStockAsync(new DeleteStockRequest { Id = id }, headers);
        return result.Success;
    }
}

//GrpcWarehouseService.cs
using RequestManagement.Common.Interfaces;
using Grpc.Core;
using RequestManagement.Server.Controllers;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services;

internal class GrpcWarehouseService(IGrpcClientFactory clientFactory, AuthTokenStore tokenStore) : IWarehouseService
{
    public async Task<List<RequestManagement.Common.Models.Warehouse>> GetAllWarehousesAsync(string filter = "")
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var response = await client.GetAllWarehousesAsync(new GetAllWarehousesRequest { Filter = filter }, headers);
        return response.Warehouse.Select(warehouse => new RequestManagement.Common.Models.Warehouse { Id = warehouse.Id, Name = warehouse.Name}).ToList();
    }

    public async Task<int> CreateWarehouseAsync(RequestManagement.Common.Models.Warehouse warehouse)
    {
        try
        {
            var headers = new Metadata();
            if (!string.IsNullOrEmpty(tokenStore.GetToken()))
            {
                headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
            }
            var client = clientFactory.CreateRequestClient();
            var result = await client.CreateWarehouseAsync(new CreateWarehouseRequest { Warehouse = new RequestManagement.Server.Controllers.Warehouse { Name = warehouse.Name } }, headers);
            return result.Id;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            return -1;
        }
    }

    public async Task<bool> UpdateWarehouseAsync(RequestManagement.Common.Models.Warehouse warehouse)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.UpdateWarehouseAsync(new UpdateWarehouseRequest { Warehouse = new RequestManagement.Server.Controllers.Warehouse { Id = warehouse.Id, Name = warehouse.Name } }, headers);
        return result.Success;
    }

    public async Task<bool> DeleteWarehouseAsync(int id)
    {
        var headers = new Metadata();
        if (!string.IsNullOrEmpty(tokenStore.GetToken()))
        {
            headers.Add("Authorization", $"Bearer {tokenStore.GetToken()}");
        }
        var client = clientFactory.CreateRequestClient();
        var result = await client.DeleteWarehouseAsync(new DeleteWarehouseRequest { Id = id }, headers);
        return result.Success;
    }
}

//MessageBusService.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using WpfClient.Services.Interfaces;

namespace WpfClient.Services
{
    public class MessageBusService : IMessageBus
    {
        private readonly Dictionary<Type, List<object>> _subscribers = new();
        public void Subscribe<TMessage>(Func<TMessage, Task> handler)
        {
            if (handler == null) throw new ArgumentNullException(nameof(handler));

            var messageType = typeof(TMessage);
            if (!_subscribers.ContainsKey(messageType))
            {
                _subscribers[messageType] = [];
            }

            _subscribers[messageType].Add(handler);
        }
        public void Unsubscribe<TMessage>(Func<TMessage, Task> handler)
        {
            if (handler == null) throw new ArgumentNullException(nameof(handler));

            var messageType = typeof(TMessage);
            if (!_subscribers.TryGetValue(messageType, out var subscriber)) return;
            subscriber.Remove(handler);
            if (_subscribers[messageType].Count == 0)
            {
                _subscribers.Remove(messageType);
            }
        }
        public async Task Publish<TMessage>(TMessage message)
        {
            if (message == null) throw new ArgumentNullException(nameof(message));

            var messageType = typeof(TMessage);
            if (_subscribers.TryGetValue(messageType, out var subscriber))
            {
                var tasks = (from Func<TMessage, Task> asyncHandler in subscriber.ToArray() select asyncHandler(message)).ToList();
                await Task.WhenAll(tasks);
            }
        }
    }
}


//BaseViewModel.cs
namespace WpfClient.ViewModels;

public class BaseViewModel : System.ComponentModel.INotifyPropertyChanged
{
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

    protected void OnPropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
    }
}

//DefectGroupViewModel.cs
using System.Collections.ObjectModel;
using System.ComponentModel;
using Timer = System.Timers.Timer;
using System.Windows.Input;
using System.Windows.Threading;
using CommunityToolkit.Mvvm.Input;
using WpfClient.Services;
using RequestManagement.Server.Controllers;
using System.Runtime.CompilerServices;
using RequestManagement.Common.Interfaces;
using WpfClient.Services.Interfaces;
using WpfClient.Messages;
using RequestManagement.Server.Services;

namespace WpfClient.ViewModels;

public class DefectGroupViewModel : INotifyPropertyChanged
{
    private readonly IMessageBus _messageBus;
    public event PropertyChangedEventHandler? PropertyChanged;
    private readonly IDefectService _requestService;
    private DefectGroup ? _selectedDefectGroup;
    private string _newDefectGroupName;
    private readonly Timer _filterTimer;
    private string _filterText;
    private readonly Dispatcher _dispatcher;
    public event EventHandler CloseWindowRequested;
    public ObservableCollection<DefectGroup> DefectGroupList { get; } = [];
    public ICommand LoadDefectGroupCommand { get; }
    public ICommand AddDefectGroupCommand { get; }
    public ICommand UpdateDefectGroupCommand { get; }
    public ICommand DeleteDefectGroupCommand { get; }
    public ICommand SelectRowCommand { get; }
    public DefectGroupViewModel(IDefectService requestService, IMessageBus messageBus)
    {
        _requestService = requestService;
        _messageBus = messageBus;
        LoadDefectGroupCommand = new RelayCommand(Execute1);
        AddDefectGroupCommand = new RelayCommand(Execute2);
        UpdateDefectGroupCommand = new RelayCommand(Execute3);
        DeleteDefectGroupCommand = new RelayCommand(Execute4);
        SelectRowCommand = new RelayCommand(Execute5);
        _dispatcher = Dispatcher.CurrentDispatcher;
        _filterTimer = new Timer(1000) { AutoReset = false }; // Задержка 1 секунда
        _filterTimer.Elapsed += async (s, e) => await LoadDefectGroupAsync();
        return;
        async void Execute4() => await DeleteDefectGroupAsync();
        async void Execute3() => await UpdateDefectGroupAsync();
        async void Execute2() => await AddDefectGroupAsync();
        async void Execute1() => await LoadDefectGroupAsync();
        void Execute5() => SelectAndClose();
    }

    public string NewDefectGroupName
    {
        get => _newDefectGroupName;
        set
        {
            if (_newDefectGroupName == value) return;
            _newDefectGroupName = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }

    public async Task Load()
    {
        await LoadDefectGroupAsync();
    }
    private async Task DeleteDefectGroupAsync()
    {
        if (_selectedDefectGroup != null)
        {
            await _requestService.DeleteDefectGroupAsync(_selectedDefectGroup.Id);
            await LoadDefectGroupAsync(); // Обновляем список после удаления
            NewDefectGroupName = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DefectGroupUpdated));
        }
    }
    private async Task LoadDefectGroupAsync()
    {
        var filter = string.IsNullOrWhiteSpace(_filterText) ? "" : _filterText.Trim();
        var defectGroupList = await _requestService.GetAllDefectGroupsAsync(filter.ToLower());
        await _dispatcher.InvokeAsync(() =>
        {
            DefectGroupList.Clear();
            foreach (var item in defectGroupList)
            {
                DefectGroupList.Add(new DefectGroup { Id = item.Id, Name = item.Name });
            }
            return Task.CompletedTask;
        });
    }
    private async Task UpdateDefectGroupAsync()
    {
        if (_selectedDefectGroup != null && !string.IsNullOrEmpty(NewDefectGroupName.Trim()))
        {
            await _requestService.UpdateDefectGroupAsync(new RequestManagement.Common.Models.DefectGroup
            {
                Id = _selectedDefectGroup.Id,
                Name = _selectedDefectGroup.Name,
            });
            await LoadDefectGroupAsync();
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DefectGroupUpdated));
        }
    }
    private async Task AddDefectGroupAsync()
    {
        if (!string.IsNullOrWhiteSpace(NewDefectGroupName.Trim()))
        {
            await _requestService.CreateDefectGroupAsync(new RequestManagement.Common.Models.DefectGroup
            {
                Name = NewDefectGroupName
            });
            await LoadDefectGroupAsync();
            NewDefectGroupName = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DefectGroupUpdated));
        }
    }
    public DefectGroup? SelectedDefectGroup
    {
        get => _selectedDefectGroup ?? null;
        set
        {
            _selectedDefectGroup = value;
            AddToEdit();
        }
    }

    public string FilterText
    {
        get => _filterText;
        set
        {
            if (_filterText == value) return;
            _filterText = value;
            OnPropertyChanged();
            _filterTimer.Stop(); // Сбрасываем таймер при каждом вводе
            _filterTimer.Start(); // Запускаем таймер заново
        }
    }
    private void AddToEdit()
    {
        if (_selectedDefectGroup != null)
        {
            NewDefectGroupName = _selectedDefectGroup.Name;
        }
    }
    private void SelectAndClose()
    {
        if (_selectedDefectGroup != null)
        {
            CloseWindowRequested.Invoke(this, EventArgs.Empty);
        }
    }

    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

//DefectViewModel.cs
using System.Collections.ObjectModel;
using System.ComponentModel;
using Timer = System.Timers.Timer;
using System.Windows.Input;
using System.Windows.Threading;
using CommunityToolkit.Mvvm.Input;
using WpfClient.Services;
using RequestManagement.Server.Controllers;
using System.Runtime.CompilerServices;
using RequestManagement.Common.Interfaces;
using WpfClient.Services.Interfaces;
using WpfClient.Messages;

namespace WpfClient.ViewModels;

public class DefectViewModel : INotifyPropertyChanged
{
    private readonly IMessageBus _messageBus;
    public event PropertyChangedEventHandler? PropertyChanged;
    private readonly IDefectService _requestService;
    private DefectViewItem? _selectedDefect;
    private int _selectedDefectGroupIndex;
    private List<RequestManagement.Common.Models.DefectGroup> _defectGroupList = [];
    private List<RequestManagement.Common.Models.Defect> _defectList = [];
    private string _newDefectName;
    private readonly Timer _filterTimer;
    private string _filterText;
    private readonly Dispatcher _dispatcher;
    public event EventHandler CloseWindowRequested;
    public ObservableCollection<DefectViewItem> DefectList { get; } = [];
    public ObservableCollection<string> DefectGroupList { get; } = [];
    public ICommand LoadDefectCommand { get; }
    public ICommand AddDefectCommand { get; }
    public ICommand UpdateDefectCommand { get; }
    public ICommand DeleteDefectCommand { get; }
    public ICommand SelectRowCommand { get; }
    public ICommand UpdateDefectGroupListCommand { get; }

    public DefectViewModel(IDefectService requestService, IMessageBus messageBus)
    {
        _requestService = requestService;
        _messageBus = messageBus;
        _messageBus.Subscribe<UpdatedMessage>(OnUpdated);
        LoadDefectCommand = new RelayCommand(Execute1);
        AddDefectCommand = new RelayCommand(Execute2);
        UpdateDefectCommand = new RelayCommand(Execute3);
        DeleteDefectCommand = new RelayCommand(Execute4);
        SelectRowCommand = new RelayCommand(Execute5);
        UpdateDefectGroupListCommand = new RelayCommand(Execute6);
        _dispatcher = Dispatcher.CurrentDispatcher;
        _filterTimer = new Timer(1000) { AutoReset = false }; // Задержка 1 секунда
        _filterTimer.Elapsed += async (s, e) => await LoadDefectAsync();
        return;
        async void Execute4() => await DeleteDefectAsync();
        async void Execute3() => await UpdateDefectAsync();
        async void Execute2() => await AddDefectAsync();
        async void Execute1() => await LoadDefectAsync();
        void Execute5() => SelectAndClose();
        async void Execute6() => await LoadDefectGroupAsync();
    }

    private async Task OnUpdated(UpdatedMessage obj)
    {
        if (obj.Message == MessagesEnum.DefectGroupUpdated)
        {
            await LoadDefectGroupAsync();
        }
    }

    public string NewDefectName
    {
        get => _newDefectName;
        set
        {
            if (_newDefectName == value) return;
            _newDefectName = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }

    public async Task Load()
    {
        await LoadDefectGroupAsync();
        await LoadDefectAsync();
    }
    private async Task DeleteDefectAsync()
    {
        if (_selectedDefect != null)
        {
            await _requestService.DeleteDefectAsync(_selectedDefect.Id);
            await LoadDefectAsync(); // Обновляем список после удаления
            NewDefectName = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DefectUpdated));
        }
    }

    private async Task LoadDefectGroupAsync()
    {
        var filter = string.IsNullOrWhiteSpace(_filterText) ? "" : _filterText.Trim();
        _defectGroupList = await _requestService.GetAllDefectGroupsAsync(filter.ToLower());
        await _dispatcher.InvokeAsync(() =>
        {
            DefectGroupList.Clear();
            foreach (var item in _defectGroupList)
            {
                DefectGroupList.Add(item.Name);
            }
            SelectedDefectGroupIndex = -1;
            return Task.CompletedTask;
        });
    }
    private async Task LoadDefectAsync()
    {
        var filter = string.IsNullOrWhiteSpace(_filterText) ? "" : _filterText.Trim();
        _defectList = await _requestService.GetAllDefectsAsync(filter.ToLower());
        await _dispatcher.InvokeAsync(() =>
        {
            DefectList.Clear();
            foreach (var item in _defectList)
            {
                DefectList.Add(new DefectViewItem(item, _defectGroupList.First(x => x.Id == item.DefectGroupId).Name));
            }
            return Task.CompletedTask;
        });
    }
    private async Task UpdateDefectAsync()
    {
        if (_selectedDefect != null && !string.IsNullOrEmpty(NewDefectName.Trim()) && SelectedDefectGroupIndex != -1)
        {
            await _requestService.UpdateDefectAsync(new RequestManagement.Common.Models.Defect
            {
                Id = _selectedDefect.Id,
                Name = _selectedDefect.Name,
                DefectGroupId = _defectGroupList[_selectedDefectGroupIndex].Id
            });
            await LoadDefectAsync();
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DefectUpdated));
        }
    }
    private async Task AddDefectAsync()
    {
        if (!string.IsNullOrWhiteSpace(NewDefectName.Trim()) && SelectedDefectGroupIndex != -1)
        {
            await _requestService.CreateDefectAsync(new RequestManagement.Common.Models.Defect
            {
                Name = NewDefectName,
                DefectGroupId = _defectGroupList[_selectedDefectGroupIndex].Id
            });
            await LoadDefectAsync();
            NewDefectName = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DefectUpdated));
        }
    }
    public DefectViewItem? SelectedDefect
    {
        get => _selectedDefect ?? null;
        set
        {
            _selectedDefect = value;
            AddToEdit();
        }
    }

    public int SelectedDefectGroupIndex
    {
        get => _selectedDefectGroupIndex;
        set
        {
            _selectedDefectGroupIndex = value;
            OnPropertyChanged();
        }
    }

    public string FilterText
    {
        get => _filterText;
        set
        {
            if (_filterText == value) return;
            _filterText = value;
            OnPropertyChanged();
            _filterTimer.Stop(); // Сбрасываем таймер при каждом вводе
            _filterTimer.Start(); // Запускаем таймер заново
        }
    }
    private void AddToEdit()
    {
        if (_selectedDefect != null)
        {
            NewDefectName = _selectedDefect.Name;
            SelectedDefectGroupIndex = _defectGroupList.FindIndex(x => x.Id == _selectedDefect.DefectGroupId);
        }
    }
    private void SelectAndClose()
    {
        if (_selectedDefect != null)
        {
            CloseWindowRequested.Invoke(this, EventArgs.Empty);
        }
    }

    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }



    public class DefectViewItem(RequestManagement.Common.Models.Defect defect, string defectGroupName)
    {
        public int Id { get; set; } = defect.Id;
        public string Name { get; set; } = defect.Name;
        public int DefectGroupId { get; set; } = defect.DefectGroupId;
        public string DefectGroupName { get; set; } = defectGroupName;
    }
}

//DriverViewModel.cs
using System.ComponentModel;
using RequestManagement.Server.Controllers;
using System.Windows.Threading;
using System.Collections.ObjectModel;
using System.Windows.Input;
using Timer = System.Timers.Timer;
using System.Runtime.CompilerServices;
using CommunityToolkit.Mvvm.Input;
using RequestManagement.Common.Interfaces;
using WpfClient.Services.Interfaces;
using WpfClient.Messages;

namespace WpfClient.ViewModels;

public class DriverViewModel : INotifyPropertyChanged
{
    private readonly IMessageBus _messageBus;
    public event PropertyChangedEventHandler? PropertyChanged;
    private readonly IDriverService _requestService;
    private Driver? _selectedDriver;
    private string _newDriverFullName;
    private string _newDriverShortName;
    private string _newDriverPosition;
    private readonly Timer _filterTimer;
    private string _filterText;
    private readonly Dispatcher _dispatcher;
    public event EventHandler CloseWindowRequested;
    public ObservableCollection<Driver> DriverList { get; } = [];
    public ICommand LoadDriverCommand { get; }
    public ICommand AddDriverCommand { get; }
    public ICommand UpdateDriverCommand { get; }
    public ICommand DeleteDriverCommand { get; }
    public ICommand SelectRowCommand { get; }

    public DriverViewModel(IDriverService requestService, IMessageBus messageBus)
    {
        _requestService = requestService;
        _messageBus = messageBus;
        LoadDriverCommand = new RelayCommand(Execute1);
        AddDriverCommand = new RelayCommand(Execute2);
        UpdateDriverCommand = new RelayCommand(Execute3);
        DeleteDriverCommand = new RelayCommand(Execute4);
        SelectRowCommand = new RelayCommand(Execute5);
        _dispatcher = Dispatcher.CurrentDispatcher;
        _filterTimer = new Timer(1000) { AutoReset = false }; // Задержка 1 секунда
        _filterTimer.Elapsed += async (s, e) => await LoadDriverAsync();
        return;
        async void Execute4() => await DeleteDriverAsync();
        async void Execute3() => await UpdateDriverAsync();
        async void Execute2() => await AddDriverAsync();
        async void Execute1() => await LoadDriverAsync();
        void Execute5() => SelectAndClose();
    }

    public string FilterText
    {
        get => _filterText;
        set
        {
            if (_filterText == value) return;
            _filterText = value;
            OnPropertyChanged();
            _filterTimer.Stop(); // Сбрасываем таймер при каждом вводе
            _filterTimer.Start(); // Запускаем таймер заново
        }
    }
    public async Task Load()
    {
        await LoadDriverAsync();
    }
    private async Task DeleteDriverAsync()
    {
        if (_selectedDriver != null)
        {
            await _requestService.DeleteDriverAsync(_selectedDriver.Id);
            await LoadDriverAsync(); // Обновляем список после удаления
            NewDriverFullName = string.Empty;
            NewDriverShortName = string.Empty;
            NewDriverPosition = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DriverUpdated));
        }
    }
    private async Task LoadDriverAsync()
    {
        var filter = string.IsNullOrWhiteSpace(_filterText) ? "" : _filterText.Trim();
        var driverList = await _requestService.GetAllDriversAsync(filter.ToLower());
        await _dispatcher.InvokeAsync(() =>
        {
            DriverList.Clear();
            foreach (var item in driverList)
            {
                DriverList.Add(new Driver { Id = item.Id, FullName = item.FullName, ShortName = item.ShortName, Position = item.Position });
            }
            return Task.CompletedTask;
        });
    }
    private async Task UpdateDriverAsync()
    {
        if (_selectedDriver != null && !string.IsNullOrEmpty(NewDriverFullName.Trim()) && !string.IsNullOrEmpty(NewDriverShortName.Trim()) && !string.IsNullOrEmpty(NewDriverPosition.Trim()))
        {
            await _requestService.UpdateDriverAsync(new RequestManagement.Common.Models.Driver { Id = _selectedDriver.Id, FullName = NewDriverFullName, ShortName = NewDriverShortName, Position = NewDriverPosition });
            await LoadDriverAsync();
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DriverUpdated));
        }
    }
    private async Task AddDriverAsync()
    {
        if (!string.IsNullOrWhiteSpace(NewDriverFullName.Trim()) && !string.IsNullOrWhiteSpace(NewDriverShortName.Trim()) && !string.IsNullOrWhiteSpace(NewDriverPosition.Trim()))
        {
            await _requestService.CreateDriverAsync(new RequestManagement.Common.Models.Driver { FullName = NewDriverFullName, ShortName = NewDriverShortName, Position = NewDriverPosition });
            await LoadDriverAsync();
            NewDriverFullName = string.Empty;
            NewDriverShortName = string.Empty;
            NewDriverPosition = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.DriverUpdated));
        }
    }

    public string NewDriverFullName
    {
        get => _newDriverFullName;
        set
        {
            if (_newDriverFullName == value) return;
            _newDriverFullName = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }

    public string NewDriverShortName
    {
        get => _newDriverShortName;
        set
        {
            if (_newDriverShortName == value) return;
            _newDriverShortName = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }

    public string NewDriverPosition
    {
        get => _newDriverPosition;
        set
        {
            if (_newDriverPosition == value) return;
            _newDriverPosition = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }

    public Driver? SelectedDriver
    {
        get => _selectedDriver ?? null;
        set
        {
            _selectedDriver = value;
            AddToEdit();
        }
    }

    private void AddToEdit()
    {
        if (_selectedDriver != null)
        {
            NewDriverFullName = _selectedDriver.FullName;
            NewDriverShortName = _selectedDriver.ShortName;
            NewDriverPosition = _selectedDriver.Position;
        }
    }

    private void SelectAndClose()
    {
        if (_selectedDriver != null)
        {
            CloseWindowRequested?.Invoke(this, EventArgs.Empty);
        }
    }

    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

//EquipmentViewModel.cs
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Windows.Input;
using CommunityToolkit.Mvvm.Input;
using RequestManagement.Common.Interfaces;
using RequestManagement.Server.Controllers;
using WpfClient.Messages;
using WpfClient.Services.Interfaces;
using Dispatcher = System.Windows.Threading.Dispatcher;
using Timer = System.Timers.Timer;


namespace WpfClient.ViewModels;

public class EquipmentViewModel : INotifyPropertyChanged
{
    private readonly IMessageBus _messageBus;
    public event PropertyChangedEventHandler PropertyChanged;
    private readonly IEquipmentService _requestService;
    private Equipment? _selectedEquipment;
    private string _newEquipmentLicensePlate;
    private string _newEquipmentName;
    private readonly Timer _filterTimer;
    private string _filterText;
    private readonly Dispatcher _dispatcher;
    public event EventHandler CloseWindowRequested;
    public ObservableCollection<Equipment> EquipmentList { get; } = [];
    public ICommand LoadEquipmentCommand { get; }
    public ICommand AddEquipmentCommand { get; }
    public ICommand UpdateEquipmentCommand { get; }
    public ICommand DeleteEquipmentCommand { get; }
    public ICommand SelectRowCommand { get; }

    public string FilterText
    {
        get => _filterText;
        set
        {
            if (_filterText == value) return;
            _filterText = value;
            OnPropertyChanged();
            _filterTimer.Stop(); // Сбрасываем таймер при каждом вводе
            _filterTimer.Start(); // Запускаем таймер заново
        }
    }

    public string NewEquipmentName {
        get => _newEquipmentName;
        set
        {
            if (_newEquipmentName == value) return;
            _newEquipmentName = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }
    public string NewEquipmentLicensePlate {
        get => _newEquipmentLicensePlate;
        set
        {
            if (_newEquipmentLicensePlate == value) return;
            _newEquipmentLicensePlate = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }

    public Equipment? SelectedEquipment
    {
        get => _selectedEquipment ?? null;
        set
        {
            _selectedEquipment = value;
            AddToEdit();
        }
    }

    public EquipmentViewModel(IEquipmentService requestService, IMessageBus messageBus)
    {
        _requestService = requestService;
        _messageBus = messageBus;
        LoadEquipmentCommand = new RelayCommand(Execute);
        AddEquipmentCommand = new RelayCommand(Action);
        UpdateEquipmentCommand = new RelayCommand(Execute1);
        DeleteEquipmentCommand = new RelayCommand(Action1);
        SelectRowCommand = new RelayCommand(Action2);
        _dispatcher = Dispatcher.CurrentDispatcher;
        _filterTimer = new Timer(1000) { AutoReset = false }; // Задержка 1 секунда
        _filterTimer.Elapsed += async (s, e) => await LoadEquipmentAsync();
        return;

        async void Action1() => await DeleteEquipmentAsync();
        async void Execute1() => await UpdateEquipmentAsync();
        async void Action() => await AddEquipmentAsync();
        async void Execute() => await LoadEquipmentAsync();
        async void Action2() => await SelectAndClose();
    }

    private async Task SelectAndClose()
    {
        if (SelectedEquipment != null)
        {
            CloseWindowRequested?.Invoke(this, EventArgs.Empty);
        }
    }

    public async Task Load()
    {
        await LoadEquipmentAsync();
    }
    private async Task LoadEquipmentAsync()
    {
        var filter = string.IsNullOrWhiteSpace(_filterText) ? "" : _filterText.Trim();
        var equipmentList = await _requestService.GetAllEquipmentAsync(filter.ToLower());
        await _dispatcher.InvokeAsync(() =>
        {
            EquipmentList.Clear();
            foreach (var item in equipmentList)
            {
                EquipmentList.Add(new Equipment { Id = item.Id, Name = item.Name, LicensePlate = item.StateNumber });
            }
            return Task.CompletedTask;
        });
    }

    private Task AddToEdit()
    {
        if (_selectedEquipment != null)
        {
            NewEquipmentName = _selectedEquipment.Name;
            NewEquipmentLicensePlate = _selectedEquipment.LicensePlate;
        }
        return Task.CompletedTask;
    }
    private async Task AddEquipmentAsync()
    {
        if (!string.IsNullOrWhiteSpace(NewEquipmentName))
        {
            await _requestService.CreateEquipmentAsync(new RequestManagement.Common.Models.Equipment { Name = NewEquipmentName, StateNumber = NewEquipmentLicensePlate });
            await LoadEquipmentAsync(); // Обновляем список после добавления
            NewEquipmentName = string.Empty;
            NewEquipmentLicensePlate = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.EquipmentUpdated));
        }
    }

    private async Task UpdateEquipmentAsync()
    {
        if (_selectedEquipment != null && !string.IsNullOrEmpty(NewEquipmentName.Trim()))
        {
            await _requestService.UpdateEquipmentAsync(new RequestManagement.Common.Models.Equipment { Name = NewEquipmentName, StateNumber = NewEquipmentLicensePlate });
            await LoadEquipmentAsync(); // Обновляем список после изменения
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.EquipmentUpdated));
        }
    }

    private async Task DeleteEquipmentAsync()
    {
        if (_selectedEquipment != null)
        {
            await _requestService.DeleteEquipmentAsync(_selectedEquipment.Id);
            await LoadEquipmentAsync(); // Обновляем список после удаления
            NewEquipmentName = "";
            NewEquipmentLicensePlate = "";
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.EquipmentUpdated));
        }
    }
    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

//LoginViewModel.cs
using System.Windows;
using System.Windows.Input;
using RequestManagement.Common.Models.Enums;
using WpfClient.Helpers;
using WpfClient.Services;
using WpfClient.Views;

namespace WpfClient.ViewModels;

public class LoginViewModel
{
    private readonly GrpcAuthService _authService;
    private readonly MainMenuViewModel _mainMenuViewModel;
    private readonly AuthTokenStore _authTokenStore;

    public string Login { get; set; }
    public string Password { get; set; }
    public ICommand LoginCommand { get; }

    public LoginViewModel(GrpcAuthService authService, MainMenuViewModel mainMenuViewModel,AuthTokenStore authTokenStore)
    {
        _authService = authService;
        _mainMenuViewModel = mainMenuViewModel;
        _authTokenStore = authTokenStore;
        LoginCommand = new RelayCommand(async () => await LoginAsync());
    }

    private async Task LoginAsync()
    {
        var passwordBox = (Application.Current.MainWindow as MainWindow)?.passwordBox;
        if (passwordBox == null || string.IsNullOrWhiteSpace(Login) || string.IsNullOrWhiteSpace(passwordBox.Password))
        {
            MessageBox.Show("Введите логин и пароль.");
            return;
        }

        var token = await _authService.AuthenticateAsync(Login, passwordBox.Password);
        if (token != null && !string.IsNullOrEmpty(token.Token))
        {
            _authTokenStore.SetToken(token.Token);
            _authTokenStore.SetRole((UserRole)token.Role);
            var mainMenu = new MainMenu(_mainMenuViewModel);
            mainMenu.Show();
            Application.Current.MainWindow.Close();
        }
        else
        {
            MessageBox.Show("Ошибка входа. Проверьте логин и пароль.");
        }
    }
}

//MainMenuViewModel.cs
using RequestManagement.Common.Interfaces;
using System.Windows;
using System.Windows.Input;
using System.Windows.Media;
using RequestManagement.Common.Models;
using WpfClient.Helpers;
using WpfClient.Messages;
using WpfClient.Services.Interfaces;
using WpfClient.Views;
using System.Windows.Controls;

namespace WpfClient.ViewModels;

public class MainMenuViewModel
{
    private readonly EquipmentViewModel _equipmentViewModel;
    private readonly DriverViewModel _driverViewModel;
    private readonly DefectGroupViewModel _defectGroupViewModel;
    private readonly DefectViewModel _defectViewModel;
    private readonly WarehouseViewModel _warehouseViewModel;
    private readonly NomenclatureViewModel _nomenclatureViewModel;
    private readonly StockViewModel _stockViewModel;
    private readonly IMessageBus _messageBus;
    public UserControl StockControlProperty { get; }
    public ICommand ShowEquipmentCommand { get; }
    public ICommand ShowDriverCommand { get; }
    public ICommand ShowDefectGroupCommand { get; }
    public ICommand ShowDefectCommand { get; }
    public ICommand ShowWarehouseCommand { get; }
    public ICommand ShowNomenclatureCommand { get; }
    public ICommand ShowStockCommand { get; }
    public MainMenuViewModel(EquipmentViewModel equipmentViewModel, DriverViewModel driverViewModel, DefectGroupViewModel defectGroupViewModel, DefectViewModel defectViewModel, WarehouseViewModel warehouseViewModel, NomenclatureViewModel nomenclatureViewModel, IMessageBus messageBus, StockViewModel stockViewModel)
    {
        _equipmentViewModel = equipmentViewModel;
        _driverViewModel = driverViewModel;
        _defectGroupViewModel = defectGroupViewModel;
        _defectViewModel = defectViewModel;
        _warehouseViewModel = warehouseViewModel;
        _nomenclatureViewModel = nomenclatureViewModel;
        _messageBus = messageBus;
        _stockViewModel = stockViewModel;
        StockControlProperty = new StockView(_stockViewModel, true);
        _messageBus.Subscribe<SelectTaskMessage>(OnSelect);
        ShowEquipmentCommand = new RelayCommand(ShowEquipment);
        ShowDriverCommand = new RelayCommand(ShowDriver);
        ShowDefectGroupCommand = new RelayCommand(ShowDefectGroup);
        ShowDefectCommand = new RelayCommand(ShowDefect);
        ShowWarehouseCommand = new RelayCommand(ShowWarehouse);
        ShowNomenclatureCommand = new RelayCommand(ShowNomenclature);
        ShowStockCommand = new RelayCommand(ShowStock);
    }
    private void ShowStock()
    {
        ShowStock(true);
    }
    private void ShowNomenclature()
    {
        ShowNomenclature(true);
    }
    private void ShowWarehouse()
    {
        ShowWarehouse(true);
    }
    private void ShowDefect()
    {
        ShowDefect(true);
    }
    private void ShowDefectGroup()
    {
        ShowDefectGroup(true);
    }
    private void ShowDriver()
    {
        ShowDriver(true);
    }
    private void ShowEquipment()
    {
        ShowEquipment(true);
    }
    private Task OnSelect(SelectTaskMessage arg)
    {
        switch (arg.Message)
        {
            case MessagesEnum.SelectNomenclature:
                ShowNomenclature(false, arg.Caller);
                break;
            case MessagesEnum.SelectWarehouse:
                ShowWarehouse(false, arg.Caller);
                break;
        }

        return Task.CompletedTask;
    }
    private void ShowStock(bool editMode, Type? argCaller = null)
    {
        var stockView = new StockView(_stockViewModel, editMode);
        var window = new Window
        {
            Content = stockView,
            Title = "Транспорт и ДСТ",
            Width = 1000,
            Height = 600
        };
        window.ShowDialog();
    }
    private void ShowEquipment(bool editMode, Type? argCaller = null)
    {
        var equipmentView = new EquipmentView(_equipmentViewModel, editMode);
        var window = new Window
        {
            Content = equipmentView,
            Title = "Транспорт и ДСТ",
            Width = 800,
            Height = 600
        };
        _ = _equipmentViewModel.Load();
        window.ShowDialog();
    }
    private void ShowDriver(bool editMode, Type? argCaller = null)
    {
        var driverView = new DriverView(_driverViewModel, editMode);
        var window = new Window
        {
            Content = driverView,
            Title = "Сотрудники",
            Width = 800,
            Height = 600
        };
        _ = _driverViewModel.Load();
        window.ShowDialog();
    }
    private void ShowDefectGroup(bool editMode, Type? argCaller = null)
    {
        var defectGroupView = new DefectGroupView(_defectGroupViewModel, editMode);
        var window = new Window
        {
            Content = defectGroupView,
            Title = "Группы дефектов",
            Width = 800,
            Height = 600
        };
        _ = _defectGroupViewModel.Load();
        window.ShowDialog();
    }
    private void ShowDefect(bool editMode, Type? argCaller = null)
    {
        var defectView = new DefectView(_defectViewModel, editMode);
        var window = new Window
        {
            Content = defectView,
            Title = "Дефекты",
            Width = 800,
            Height = 600
        };
        _ = _defectViewModel.Load();
        window.ShowDialog();
    }
    private void ShowWarehouse(bool editMode, Type? argCaller = null)
    {
        var warehouseView = new WarehouseView(_warehouseViewModel, editMode);
        var window = new Window
        {
            Content = warehouseView,
            Title = "Склады",
            Width = 800,
            Height = 600
        };
        _ = _warehouseViewModel.Load();
        window.ShowDialog();
        if (_warehouseViewModel.SelectedWarehouse != null && argCaller != null)
        {
            _messageBus.Publish(
                new SelectResultMessage(
                    MessagesEnum.SelectWarehouse, argCaller, new Warehouse
                    {
                        Id = _warehouseViewModel.SelectedWarehouse.Id,
                        Name = _warehouseViewModel.SelectedWarehouse.Name
                    }));
        }
    }
    private void ShowNomenclature(bool editMode, Type? argCaller = null)
    {
        var nomenclatureView = new NomenclatureView(_nomenclatureViewModel, editMode);
        var window = new Window
        {
            Content = nomenclatureView,
            Title = "Номенклатура",
            Width = 800,
            Height = 600
        };
        _ = _nomenclatureViewModel.Load();
        window.ShowDialog();
        if (_nomenclatureViewModel.SelectedNomenclature != null && argCaller != null)
            _messageBus.Publish(
                new SelectResultMessage(
                    MessagesEnum.SelectNomenclature, argCaller, new Nomenclature
                    {
                        Id = _nomenclatureViewModel.SelectedNomenclature.Id,
                        Code = _nomenclatureViewModel.SelectedNomenclature.Code,
                        Article = _nomenclatureViewModel.SelectedNomenclature.Article,
                        Name = _nomenclatureViewModel.SelectedNomenclature.Name,
                        UnitOfMeasure = _nomenclatureViewModel.SelectedNomenclature.UnitOfMeasure
                    }));

    }
}

//NomenclatureViewModel.cs
using System.ComponentModel;
using RequestManagement.Server.Controllers;
using System.Windows.Threading;
using System.Collections.ObjectModel;
using System.Windows.Input;
using Timer = System.Timers.Timer;
using System.Runtime.CompilerServices;
using CommunityToolkit.Mvvm.Input;
using RequestManagement.Common.Interfaces;
using WpfClient.Services.Interfaces;
using WpfClient.Messages;

namespace WpfClient.ViewModels;

public class NomenclatureViewModel : INotifyPropertyChanged
{
    private readonly IMessageBus _messageBus;
    public event PropertyChangedEventHandler? PropertyChanged;
    private readonly INomenclatureService _requestService;
    private Nomenclature? _selectedNomenclature;
    private string _newNomenclatureCode;
    private string _newNomenclatureName;
    private string _newNomenclatureArticle;
    private string _newNomenclatureUnitOfMeasure;
    private readonly Timer _filterTimer;
    private string _filterText;
    private readonly Dispatcher _dispatcher;
    public event EventHandler CloseWindowRequested;
    public ObservableCollection<Nomenclature> NomenclatureList { get; } = [];
    public ICommand LoadNomenclatureCommand { get; }
    public ICommand AddNomenclatureCommand { get; }
    public ICommand UpdateNomenclatureCommand { get; }
    public ICommand DeleteNomenclatureCommand { get; }
    public ICommand SelectRowCommand { get; }

    public NomenclatureViewModel(INomenclatureService requestService, IMessageBus messageBus)
    {
        _requestService = requestService;
        _messageBus = messageBus;
        LoadNomenclatureCommand = new RelayCommand(Execute1);
        AddNomenclatureCommand = new RelayCommand(Execute2);
        UpdateNomenclatureCommand = new RelayCommand(Execute3);
        DeleteNomenclatureCommand = new RelayCommand(Execute4);
        SelectRowCommand = new RelayCommand(Execute5);
        _dispatcher = Dispatcher.CurrentDispatcher;
        _filterTimer = new Timer(1000) { AutoReset = false }; // Задержка 1 секунда
        _filterTimer.Elapsed += async (s, e) => await LoadNomenclatureAsync();
        return;
        async void Execute4() => await DeleteNomenclatureAsync();
        async void Execute3() => await UpdateNomenclatureAsync();
        async void Execute2() => await AddNomenclatureAsync();
        async void Execute1() => await LoadNomenclatureAsync();
        void Execute5() => SelectAndClose();
    }

    public string FilterText
    {
        get => _filterText;
        set
        {
            if (_filterText == value) return;
            _filterText = value;
            OnPropertyChanged();
            _filterTimer.Stop(); // Сбрасываем таймер при каждом вводе
            _filterTimer.Start(); // Запускаем таймер заново
        }
    }
    public async Task Load()
    {
        await LoadNomenclatureAsync();
    }
    private async Task DeleteNomenclatureAsync()
    {
        if (_selectedNomenclature != null)
        {
            await _requestService.DeleteNomenclatureAsync(_selectedNomenclature.Id);
            await LoadNomenclatureAsync(); // Обновляем список после удаления
            NewNomenclatureName = string.Empty;
            NewNomenclatureCode = string.Empty;
            NewNomenclatureUnitOfMeasure = string.Empty;
            NewNomenclatureArticle = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.NomenclatureUpdated));
        }
    }
    private async Task LoadNomenclatureAsync()
    {
        var filter = string.IsNullOrWhiteSpace(_filterText) ? "" : _filterText.Trim();
        var driverList = await _requestService.GetAllNomenclaturesAsync(filter.ToLower());
        await _dispatcher.InvokeAsync(() =>
        {
            NomenclatureList.Clear();
            foreach (var item in driverList)
            {
                NomenclatureList.Add(new Nomenclature { Id = item.Id, Name = item.Name, Code = item.Code, Article = item.Article, UnitOfMeasure = item.UnitOfMeasure });
            }
            return Task.CompletedTask;
        });
    }
    private async Task UpdateNomenclatureAsync()
    {
        if (_selectedNomenclature != null && !string.IsNullOrEmpty(NewNomenclatureName.Trim()) && !string.IsNullOrEmpty(NewNomenclatureCode.Trim()) && !string.IsNullOrEmpty(NewNomenclatureUnitOfMeasure.Trim()))
        {
            await _requestService.UpdateNomenclatureAsync(new RequestManagement.Common.Models.Nomenclature { Id = _selectedNomenclature.Id, Name = NewNomenclatureName, Code = NewNomenclatureCode, Article = NewNomenclatureArticle, UnitOfMeasure = NewNomenclatureUnitOfMeasure });
            await LoadNomenclatureAsync();
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.NomenclatureUpdated));
        }
    }
    private async Task AddNomenclatureAsync()
    {
        if (!string.IsNullOrWhiteSpace(NewNomenclatureName.Trim()) && !string.IsNullOrWhiteSpace(NewNomenclatureCode.Trim()) && !string.IsNullOrWhiteSpace(NewNomenclatureUnitOfMeasure.Trim()))
        {
            await _requestService.CreateNomenclatureAsync(new RequestManagement.Common.Models.Nomenclature { Name = NewNomenclatureName, Code = NewNomenclatureCode, Article = NewNomenclatureArticle, UnitOfMeasure = NewNomenclatureUnitOfMeasure });
            await LoadNomenclatureAsync();
            NewNomenclatureName = string.Empty;
            NewNomenclatureCode = string.Empty;
            NewNomenclatureUnitOfMeasure = string.Empty;
            NewNomenclatureArticle = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.NomenclatureUpdated));
        }
    }

    public string NewNomenclatureCode
    {
        get => _newNomenclatureCode;
        set
        {
            if (_newNomenclatureCode == value) return;
            _newNomenclatureCode = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }
    public string NewNomenclatureName
    {
        get => _newNomenclatureName;
        set
        {
            if (_newNomenclatureName == value) return;
            _newNomenclatureName = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }
    public string NewNomenclatureArticle
    {
        get => _newNomenclatureArticle;
        set
        {
            if (_newNomenclatureArticle == value) return;
            _newNomenclatureArticle = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }
    public string NewNomenclatureUnitOfMeasure
    {
        get => _newNomenclatureUnitOfMeasure;
        set
        {
            if (_newNomenclatureUnitOfMeasure == value) return;
            _newNomenclatureUnitOfMeasure = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }
    public Nomenclature? SelectedNomenclature
    {
        get => _selectedNomenclature ?? null;
        set
        {
            _selectedNomenclature = value;
            AddToEdit();
        }
    }

    private void AddToEdit()
    {
        if (_selectedNomenclature != null)
        {
            NewNomenclatureName = _selectedNomenclature.Name;
            NewNomenclatureCode = _selectedNomenclature.Code;
            NewNomenclatureArticle = _selectedNomenclature.Article;
            NewNomenclatureUnitOfMeasure = _selectedNomenclature.UnitOfMeasure;
        }
    }

    private void SelectAndClose()
    {
        if (_selectedNomenclature != null)
        {
            CloseWindowRequested?.Invoke(this, EventArgs.Empty);
        }
    }

    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

//StockViewModel.cs
using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using RequestManagement.Common.Interfaces;
using RequestManagement.Common.Models;
using RequestManagement.Server.Controllers;
using System;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Windows;
using WpfClient.Messages;
using WpfClient.Services.Interfaces;
using static System.Decimal;
using Nomenclature = RequestManagement.Common.Models.Nomenclature;
using Warehouse = RequestManagement.Common.Models.Warehouse;

namespace WpfClient.ViewModels
{
    public partial class StockViewModel : ObservableObject
    {
        private readonly IStockService _stockService;
        private readonly INomenclatureService _nomenclatureService;
        private readonly IWarehouseService _warehouseService;
        private readonly IMessageBus _messageBus;

        [ObservableProperty]
        private ObservableCollection<RequestManagement.Common.Models.Stock> _stocks = new();

        [ObservableProperty]
        private RequestManagement.Common.Models.Stock? _selectedStock;

        [ObservableProperty]
        private string _selectedNomenclatureName = string.Empty;

        [ObservableProperty]
        private string _initialQuantity = string.Empty;

        [ObservableProperty]
        private string _warehouseName = "Не выбран";

        [ObservableProperty]
        private int _warehouseId;

        [ObservableProperty]
        private int _initialQuantityFilterType;

        [ObservableProperty]
        private string _initialQuantityFilter = string.Empty;

        [ObservableProperty]
        private int _receivedQuantityFilterType;

        [ObservableProperty]
        private string _receivedQuantityFilter = string.Empty;

        [ObservableProperty]
        private int _consumedQuantityFilterType;

        [ObservableProperty]
        private string _consumedQuantityFilter = string.Empty;

        [ObservableProperty]
        private int _finalQuantityFilterType;

        [ObservableProperty]
        private string _finalQuantityFilter = string.Empty;

        [ObservableProperty]
        private string _nomenclatureFilter = string.Empty;
        public StockViewModel()
        {
            // Для дизайнера
        }
        public StockViewModel(IStockService stockService, INomenclatureService nomenclatureService, IWarehouseService warehouseService, IMessageBus messageBus)
        {
            _stockService = stockService ?? throw new ArgumentNullException(nameof(stockService));
            _nomenclatureService = nomenclatureService ?? throw new ArgumentNullException(nameof(nomenclatureService));
            _warehouseService = warehouseService ?? throw new ArgumentNullException(nameof(warehouseService));
            _messageBus = messageBus;
            _messageBus.Subscribe<SelectResultMessage>(OnSelect);
            //RefreshCommand.Execute(null);
        }

        private Task OnSelect(SelectResultMessage arg)
        {
            if (arg.Caller != typeof(IStockService) || arg.Item == null)
                return Task.CompletedTask;
            switch (arg.Message)
            {
                case MessagesEnum.SelectNomenclature:
                    if(SelectedStock == null) return Task.CompletedTask;
                    SelectedStock.Nomenclature = (Nomenclature)arg.Item;
                    SelectedStock.NomenclatureId = ((Nomenclature)arg.Item).Id;
                    SelectedNomenclatureName =
                        $"{SelectedStock.Nomenclature.Name} ({SelectedStock.Nomenclature.Article})({SelectedStock.Nomenclature.Code})";
                    break;
                case MessagesEnum.SelectWarehouse:
                    WarehouseId = ((Warehouse)arg.Item).Id;
                    WarehouseName = ((Warehouse)arg.Item).Name;
                    break;
            }
            return Task.CompletedTask;
        }

        partial void OnSelectedStockChanged(RequestManagement.Common.Models.Stock? value)
        {
            if (value != null)
            {
                SelectedNomenclatureName = $"{value.Nomenclature.Name} ({value.Nomenclature.Article})({value.Nomenclature.Code})";
                InitialQuantity = value.InitialQuantity.ToString("F2");
            }
            else
            {
                SelectedNomenclatureName = string.Empty;
                InitialQuantity = string.Empty;
            }
        }

        partial void OnInitialQuantityChanged(string value)
        {
            if (!Regex.IsMatch(value, @"^\d*([.,]\d{0,2})?$|^$"))
            {
                InitialQuantity = Regex.Replace(value, @"[^\d.,]", "");
                MessageBox.Show("Допустимы только цифры и запятая.", "Ошибка ввода", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        partial void OnNomenclatureFilterChanged(string value)
        {
            RefreshCommand.Execute(null);
        }

        [RelayCommand]
        private async Task SelectNomenclature()
        {
            await _messageBus.Publish(new SelectTaskMessage(MessagesEnum.SelectNomenclature,typeof(IStockService)));
        }

        [RelayCommand]
        private async Task SelectWarehouse()
        {
            await _messageBus.Publish(new SelectTaskMessage(MessagesEnum.SelectWarehouse, typeof(IStockService)));
        }

        [RelayCommand]
        private async Task Save()
        {
            if (SelectedStock == null)
            {
                MessageBox.Show("Выберите запись для сохранения.", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Warning);
                return;
            }

            if (!TryParse(InitialQuantity, out var initialQuantity))
            {
                MessageBox.Show("Некорректное значение начального количества.", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Warning);
                return;
            }

            SelectedStock.InitialQuantity = initialQuantity;
            //SelectedStock.NomenclatureId = 
            var success = await _stockService.UpdateStockAsync(SelectedStock);
            if (success)
            {
                await RefreshStocks();
            }
            else
            {
                MessageBox.Show("Ошибка при сохранении записи.", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        [RelayCommand]
        private async Task Delete()
        {
            if (SelectedStock == null)
            {
                MessageBox.Show("Выберите запись для удаления.", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Warning);
                return;
            }

            var result = MessageBox.Show("Вы уверены, что хотите удалить запись?", "Подтверждение", MessageBoxButton.YesNo, MessageBoxImage.Question);
            if (result == MessageBoxResult.Yes)
            {
                var success = await _stockService.DeleteStockAsync(SelectedStock.Id);
                if (success)
                {
                    await RefreshStocks();
                }
                else
                {
                    MessageBox.Show("Ошибка при удалении записи.", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
                }
            }
        }

        [RelayCommand]
        private async Task Refresh()
        {
            await RefreshStocks();
        }

        private async Task RefreshStocks()
        {
            try
            {
                TryParse(InitialQuantityFilter, out var initialQty);
                TryParse(ReceivedQuantityFilter, out var receivedQty);
                TryParse(ConsumedQuantityFilter, out var consumedQty);
                TryParse(FinalQuantityFilter, out var finalQty);

                var stocks = await _stockService.GetAllStocksAsync(
                    WarehouseId,
                    NomenclatureFilter,
                    InitialQuantityFilterType,
                    (double)initialQty,
                    ReceivedQuantityFilterType,
                    (double)receivedQty,
                    ConsumedQuantityFilterType,
                    (double)consumedQty,
                    FinalQuantityFilterType,
                    (double)finalQty);

                if (!string.IsNullOrWhiteSpace(NomenclatureFilter))
                {
                    var words = NomenclatureFilter.Split(' ', StringSplitOptions.RemoveEmptyEntries)
                        .Select(w => w.ToLower())
                        .ToList();

                    stocks = stocks.Where(s =>
                        words.All(w =>
                            s.Nomenclature.Name.ToLower().Contains(w) ||
                            s.Nomenclature.Code.ToLower().Contains(w) ||
                            s.Nomenclature.Article.ToLower().Contains(w) ||
                            s.Nomenclature.UnitOfMeasure.ToLower().Contains(w)))
                        .ToList();
                }

                Stocks = new ObservableCollection<RequestManagement.Common.Models.Stock>(stocks);
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка при загрузке данных: {ex.Message}", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }
}

//WarehouseViewModel.cs
using System.ComponentModel;
using RequestManagement.Server.Controllers;
using System.Windows.Threading;
using System.Collections.ObjectModel;
using System.Windows.Input;
using Timer = System.Timers.Timer;
using System.Runtime.CompilerServices;
using CommunityToolkit.Mvvm.Input;
using RequestManagement.Common.Interfaces;
using WpfClient.Services.Interfaces;
using WpfClient.Messages;

namespace WpfClient.ViewModels;

public class WarehouseViewModel : INotifyPropertyChanged
{
    private readonly IMessageBus _messageBus;
    public event PropertyChangedEventHandler? PropertyChanged;
    private readonly IWarehouseService _requestService;
    private Warehouse? _selectedWarehouse;
    private string _newWarehouseName;
    private readonly Timer _filterTimer;
    private string _filterText;
    private readonly Dispatcher _dispatcher;
    public event EventHandler CloseWindowRequested;
    public ObservableCollection<Warehouse> WarehouseList { get; } = [];
    public ICommand LoadWarehouseCommand { get; }
    public ICommand AddWarehouseCommand { get; }
    public ICommand UpdateWarehouseCommand { get; }
    public ICommand DeleteWarehouseCommand { get; }
    public ICommand SelectRowCommand { get; }

    public WarehouseViewModel(IWarehouseService requestService, IMessageBus messageBus)
    {
        _requestService = requestService;
        _messageBus = messageBus;
        LoadWarehouseCommand = new RelayCommand(Execute1);
        AddWarehouseCommand = new RelayCommand(Execute2);
        UpdateWarehouseCommand = new RelayCommand(Execute3);
        DeleteWarehouseCommand = new RelayCommand(Execute4);
        SelectRowCommand = new RelayCommand(Execute5);
        _dispatcher = Dispatcher.CurrentDispatcher;
        _filterTimer = new Timer(1000) { AutoReset = false }; // Задержка 1 секунда
        _filterTimer.Elapsed += async (s, e) => await LoadWarehouseAsync();
        return;
        async void Execute4() => await DeleteWarehouseAsync();
        async void Execute3() => await UpdateWarehouseAsync();
        async void Execute2() => await AddWarehouseAsync();
        async void Execute1() => await LoadWarehouseAsync();
        void Execute5() => SelectAndClose();
    }

    public string FilterText
    {
        get => _filterText;
        set
        {
            if (_filterText == value) return;
            _filterText = value;
            OnPropertyChanged();
            _filterTimer.Stop(); // Сбрасываем таймер при каждом вводе
            _filterTimer.Start(); // Запускаем таймер заново
        }
    }
    public async Task Load()
    {
        await LoadWarehouseAsync();
    }
    private async Task DeleteWarehouseAsync()
    {
        if (_selectedWarehouse != null)
        {
            await _requestService.DeleteWarehouseAsync(_selectedWarehouse.Id);
            await LoadWarehouseAsync(); // Обновляем список после удаления
            NewWarehouseName = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.WarehouseUpdated));
        }
    }
    private async Task LoadWarehouseAsync()
    {
        var filter = string.IsNullOrWhiteSpace(_filterText) ? "" : _filterText.Trim();
        var driverList = await _requestService.GetAllWarehousesAsync(filter.ToLower());
        await _dispatcher.InvokeAsync(() =>
        {
            WarehouseList.Clear();
            foreach (var item in driverList)
            {
                WarehouseList.Add(new Warehouse { Id = item.Id, Name = item.Name});
            }
            return Task.CompletedTask;
        });
    }
    private async Task UpdateWarehouseAsync()
    {
        if (_selectedWarehouse != null && !string.IsNullOrEmpty(NewWarehouseName.Trim()))
        {
            await _requestService.UpdateWarehouseAsync(new RequestManagement.Common.Models.Warehouse { Id = _selectedWarehouse.Id, Name = NewWarehouseName});
            await LoadWarehouseAsync();
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.WarehouseUpdated));
        }
    }
    private async Task AddWarehouseAsync()
    {
        if (!string.IsNullOrWhiteSpace(NewWarehouseName.Trim()))
        {
            await _requestService.CreateWarehouseAsync(new RequestManagement.Common.Models.Warehouse { Name = NewWarehouseName});
            await LoadWarehouseAsync();
            NewWarehouseName = string.Empty;
            await _messageBus.Publish(new UpdatedMessage(MessagesEnum.WarehouseUpdated));
        }
    }

    public string NewWarehouseName
    {
        get => _newWarehouseName;
        set
        {
            if (_newWarehouseName == value) return;
            _newWarehouseName = value;
            OnPropertyChanged(); // Уведомляем UI об изменении
        }
    }
    public Warehouse? SelectedWarehouse
    {
        get => _selectedWarehouse ?? null;
        set
        {
            _selectedWarehouse = value;
            AddToEdit();
        }
    }

    private void AddToEdit()
    {
        if (_selectedWarehouse != null)
        {
            NewWarehouseName = _selectedWarehouse.Name;
        }
    }

    private void SelectAndClose()
    {
        if (_selectedWarehouse != null)
        {
            CloseWindowRequested?.Invoke(this, EventArgs.Empty);
        }
    }

    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

//CreateRequestView.xaml.cs
using System.Windows.Controls;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для CreateRequestView.xaml
/// </summary>
public partial class CreateRequestView : UserControl
{
    public CreateRequestView()
    {
        InitializeComponent();
    }
}

//DefectGroupView.xaml.cs
using System.Windows;
using WpfClient.ViewModels;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для DefectGroupsView.xaml
/// </summary>
public partial class DefectGroupView
{
    private readonly bool _editMode;
    public DefectGroupView(DefectGroupViewModel viewModel, bool editMode)
    {
        InitializeComponent();
        DataContext = viewModel;
        viewModel.CloseWindowRequested += ViewModel_CloseWindowRequested;
        _editMode = editMode;
    }
    private void ViewModel_CloseWindowRequested(object? sender, EventArgs e)
    {
        if (!_editMode) Window.GetWindow(this)?.Close(); // Закрываем окно, содержащее UserControl
    }
}

//DefectView.xaml.cs
using System.Windows;
using WpfClient.ViewModels;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для DefectsView.xaml
/// </summary>
public partial class DefectView
{
    private readonly bool _editMode;
    public DefectView(DefectViewModel viewModel, bool editMode)
    {
        InitializeComponent();
        DataContext = viewModel;
        viewModel.CloseWindowRequested += ViewModel_CloseWindowRequested;
        _editMode = editMode;
    }
    private void ViewModel_CloseWindowRequested(object? sender, EventArgs e)
    {
        if (!_editMode) Window.GetWindow(this)?.Close(); // Закрываем окно, содержащее UserControl
    }
}

//DriverView.xaml.cs
using System.Windows;
using WpfClient.ViewModels;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для DriverView.xaml
/// </summary>
public partial class DriverView
{
    private readonly bool _editMode;
    public DriverView(DriverViewModel viewModel,bool editMode)
    {
        InitializeComponent();
        DataContext = viewModel;
        viewModel.CloseWindowRequested += ViewModel_CloseWindowRequested;
        _editMode = editMode;
    }
    private void ViewModel_CloseWindowRequested(object? sender, EventArgs e)
    {
        if(!_editMode) Window.GetWindow(this)?.Close(); // Закрываем окно, содержащее UserControl
    }
}

//EquipmentView.xaml.cs
using System.Windows;
using WpfClient.ViewModels;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для EquipmentView.xaml
/// </summary>
public partial class EquipmentView
{
    private readonly bool _editMode;
    public EquipmentView(EquipmentViewModel viewModel,bool editMode)
    {
        InitializeComponent();
        DataContext = viewModel;
        viewModel.CloseWindowRequested += ViewModel_CloseWindowRequested;
        _editMode = editMode;
    }
    private void ViewModel_CloseWindowRequested(object? sender, EventArgs e)
    {
        if(!_editMode) Window.GetWindow(this)?.Close(); // Закрываем окно, содержащее UserControl
    }
}

//MainMenu.xaml.cs
using System.Windows;
using WpfClient.ViewModels;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для Window1.xaml
/// </summary>
public partial class MainMenu : Window
{
    public MainMenu(MainMenuViewModel viewModel)
    {
        InitializeComponent();
        DataContext = viewModel;
        
    }
}

//MainWindow.xaml.cs
using System.Windows;
using WpfClient.ViewModels;

namespace WpfClient.Views;

public partial class MainWindow : Window
{
    public MainWindow(LoginViewModel viewModel)
    {
        InitializeComponent();
        DataContext = viewModel;

        // Проверка DataContext
        if (DataContext == null)
        {
            MessageBox.Show("DataContext не установлен!");
        }

        // Привязка пароля из PasswordBox
        passwordBox.PasswordChanged += (s, e) => viewModel.Password = passwordBox.Password;
    }
}

//NomenclatureView.xaml.cs
using System.Windows;
using WpfClient.ViewModels;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для NomenclatureView.xaml
/// </summary>
public partial class NomenclatureView
{
    private readonly bool _editMode;
    public NomenclatureView(NomenclatureViewModel viewModel,bool editMode)
    {
        InitializeComponent();
        DataContext = viewModel;
        viewModel.CloseWindowRequested += ViewModel_CloseWindowRequested;
        _editMode = editMode;
    }
    private void ViewModel_CloseWindowRequested(object? sender, EventArgs e)
    {
        if(!_editMode) Window.GetWindow(this)?.Close(); // Закрываем окно, содержащее UserControl
    }
}

//RequestsView.xaml.cs
using System.Windows.Controls;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для RequestsView.xaml
/// </summary>
public partial class RequestsView : UserControl
{
    public RequestsView()
    {
        InitializeComponent();
    }
}

//StockView.xaml.cs
using System.Text.RegularExpressions;
using System.Windows;
using System.Windows.Input;
using WpfClient.ViewModels;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для StockView.xaml
/// </summary>
public partial class StockView
{
    private readonly bool _editMode;
    public StockView(StockViewModel viewModel,bool editMode)
    {
        InitializeComponent();
        DataContext = viewModel;
        _editMode = editMode;
    }
    private void NumberValidationTextBox(object sender, TextCompositionEventArgs e)
    {
        var regex = new Regex("[^0-9,]+");
        e.Handled = regex.IsMatch(e.Text);
    }
}

//WarehouseView.xaml.cs
using System.Windows;
using WpfClient.ViewModels;

namespace WpfClient.Views;

/// <summary>
/// Логика взаимодействия для WarehouseView.xaml
/// </summary>
public partial class WarehouseView
{
    private readonly bool _editMode;
    public WarehouseView(WarehouseViewModel viewModel,bool editMode)
    {
        InitializeComponent();
        DataContext = viewModel;
        viewModel.CloseWindowRequested += ViewModel_CloseWindowRequested;
        _editMode = editMode;
    }
    private void ViewModel_CloseWindowRequested(object? sender, EventArgs e)
    {
        if(!_editMode) Window.GetWindow(this)?.Close(); // Закрываем окно, содержащее UserControl
    }
}

//IGrpcClientFactory.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using RequestManagement.Server.Controllers;

namespace WpfClient.Services.Interfaces;

public interface IGrpcClientFactory
{
    AuthService.AuthServiceClient CreateAuthClient();
    RequestService.RequestServiceClient CreateRequestClient();
    StockService.StockServiceClient CreateStockClient();
}

//IMessageBus.cs
// IMessageBus.cs
namespace WpfClient.Services.Interfaces;

public interface IMessageBus
{
    /// <summary>
    /// Подписывает асинхронный обработчик на сообщение определенного типа.
    /// </summary>
    /// <typeparam name="TMessage">Тип сообщения.</typeparam>
    /// <param name="handler">Асинхронный обработчик сообщения.</param>
    void Subscribe<TMessage>(Func<TMessage, Task> handler);

    /// <summary>
    /// Отписывает асинхронный обработчик от сообщения определенного типа.
    /// </summary>
    /// <typeparam name="TMessage">Тип сообщения.</typeparam>
    /// <param name="handler">Обработчик для удаления.</param>
    void Unsubscribe<TMessage>(Func<TMessage, Task> handler);

    /// <summary>
    /// Асинхронно публикует сообщение всем подписчикам.
    /// </summary>
    /// <typeparam name="TMessage">Тип сообщения.</typeparam>
    /// <param name="message">Сообщение для отправки.</param>
    /// <returns>Задача, завершающаяся после обработки всеми подписчиками.</returns>
    Task Publish<TMessage>(TMessage message);
}

//appsettings.Development.json
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  }
}


//appsettings.json
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "EndpointDefaults": {
      "Protocols": "Http2"
    }
  },
  "ConnectionStrings": {
    "DefaultConnection": "Host=localhost;Port=5433;Database=RequestManagement;Username=postgres;Password=Rektalus32281!"
  },
  "Jwt": {
    "Key": "Bkt1T0k2hm4EPFhlx9sujqOKNLvZruaR", // Секретный ключ (должен быть длиннее 16 символов)
    "Issuer": "RequestManagementServer",
    "Audience": "RequestManagementClient"
  }
}


//RequestManagement.Server.deps.json
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "RequestManagement.Server/1.0.0": {
        "dependencies": {
          "BCrypt.Net-Next": "4.0.3",
          "Google.Protobuf": "3.30.2",
          "Grpc.AspNetCore": "2.70.0",
          "Grpc.Tools": "2.71.0",
          "Microsoft.AspNetCore.Authentication.JwtBearer": "8.0.14",
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.EntityFrameworkCore.Tools": "9.0.3",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "RequestManagement.Common": "1.0.0",
          "System.IdentityModel.Tokens.Jwt": "8.7.0"
        },
        "runtime": {
          "RequestManagement.Server.dll": {}
        }
      },
      "BCrypt.Net-Next/4.0.3": {
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "assemblyVersion": "4.0.3.0",
            "fileVersion": "4.0.3.0"
          }
        }
      },
      "Google.Protobuf/3.30.2": {
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "assemblyVersion": "3.30.2.0",
            "fileVersion": "3.30.2.0"
          }
        }
      },
      "Grpc.AspNetCore/2.70.0": {
        "dependencies": {
          "Google.Protobuf": "3.30.2",
          "Grpc.AspNetCore.Server.ClientFactory": "2.70.0",
          "Grpc.Tools": "2.71.0"
        }
      },
      "Grpc.AspNetCore.Server/2.70.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
        "dependencies": {
          "Grpc.AspNetCore.Server": "2.70.0",
          "Grpc.Net.ClientFactory": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Core.Api/2.70.0": {
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.Client/2.70.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.70.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.ClientFactory/2.70.0": {
        "dependencies": {
          "Grpc.Net.Client": "2.70.0",
          "Microsoft.Extensions.Http": "6.0.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.ClientFactory.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.Common/2.70.0": {
        "dependencies": {
          "Grpc.Core.Api": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Tools/2.71.0": {},
      "Humanizer.Core/2.14.1": {
        "runtime": {
          "lib/net6.0/Humanizer.dll": {
            "assemblyVersion": "2.14.0.0",
            "fileVersion": "2.14.1.48190"
          }
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "assemblyVersion": "8.0.14.0",
            "fileVersion": "8.0.1425.11221"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "Microsoft.Bcl.Memory/9.0.0": {
        "runtime": {
          "lib/net8.0/Microsoft.Bcl.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.24.52809"
          }
        }
      },
      "Microsoft.Build.Framework/17.8.3": {},
      "Microsoft.Build.Locator/1.7.8": {
        "runtime": {
          "lib/net6.0/Microsoft.Build.Locator.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.7.8.28074"
          }
        }
      },
      "Microsoft.CodeAnalysis.Analyzers/3.3.4": {},
      "Microsoft.CodeAnalysis.Common/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Analyzers": "3.3.4",
          "System.Collections.Immutable": "7.0.0",
          "System.Reflection.Metadata": "7.0.0",
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "System.Composition": "7.0.0",
          "System.IO.Pipelines": "9.0.3",
          "System.Threading.Channels": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
        "dependencies": {
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0",
          "System.Text.Json": "9.0.3"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          },
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.3": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.3",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {},
      "Microsoft.EntityFrameworkCore.Design/9.0.3": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.Build.Locator": "1.7.8",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.CSharp.Workspaces": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.MSBuild": "4.8.0",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyModel": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3",
          "Mono.TextTemplating": "3.0.0",
          "System.Text.Json": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.3": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Tools/9.0.3": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Design": "9.0.3"
        }
      },
      "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.DependencyModel/9.0.3": {
        "dependencies": {
          "System.Text.Encodings.Web": "9.0.3",
          "System.Text.Json": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "assemblyVersion": "9.0.0.3",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Http/6.0.0": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        }
      },
      "Microsoft.Extensions.Logging/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "System.Diagnostics.DiagnosticSource": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Options/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Primitives/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.7.0": {
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.7.0": {
        "dependencies": {
          "Microsoft.Bcl.Memory": "9.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.IdentityModel.Logging": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Mono.TextTemplating/3.0.0": {
        "dependencies": {
          "System.CodeDom": "6.0.0"
        },
        "runtime": {
          "lib/net6.0/Mono.TextTemplating.dll": {
            "assemblyVersion": "3.0.0.0",
            "fileVersion": "3.0.0.1"
          }
        }
      },
      "Npgsql/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.3.0"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.3",
          "Npgsql": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "assemblyVersion": "9.0.4.0",
            "fileVersion": "9.0.4.0"
          }
        }
      },
      "System.CodeDom/6.0.0": {
        "runtime": {
          "lib/net6.0/System.CodeDom.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Collections.Immutable/7.0.0": {},
      "System.Composition/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Convention": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0",
          "System.Composition.TypedParts": "7.0.0"
        }
      },
      "System.Composition.AttributedModel/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.AttributedModel.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Convention/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Convention.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Hosting/7.0.0": {
        "dependencies": {
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Hosting.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Runtime/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.Runtime.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.TypedParts/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.TypedParts.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.3": {
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "System.IO.Pipelines/9.0.3": {
        "runtime": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.Reflection.Metadata/7.0.0": {
        "dependencies": {
          "System.Collections.Immutable": "7.0.0"
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {},
      "System.Text.Encodings.Web/9.0.3": {
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "rid": "browser",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.Text.Json/9.0.3": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.3",
          "System.Text.Encodings.Web": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.Threading.Channels/7.0.0": {},
      "RequestManagement.Common/1.0.0": {
        "runtime": {
          "RequestManagement.Common.dll": {
            "assemblyVersion": "1.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "RequestManagement.Server/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "BCrypt.Net-Next/4.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "path": "bcrypt.net-next/4.0.3",
      "hashPath": "bcrypt.net-next.4.0.3.nupkg.sha512"
    },
    "Google.Protobuf/3.30.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Y2aOVLIt75yeeEWigg9V9YnjsEm53sADtLGq0gLhwaXpk3iu8tYSoauolyhenagA2sWno2TQ2WujI0HQd6s1Vw==",
      "path": "google.protobuf/3.30.2",
      "hashPath": "google.protobuf.3.30.2.nupkg.sha512"
    },
    "Grpc.AspNetCore/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-s29ST5F2/PZLzOnfqfeDn0emAZajBtYnV9G7hkbK8Eu9+XphoL3KfiEsg2eBsx7P9YYQXcksDbE+CbHApMZeJA==",
      "path": "grpc.aspnetcore/2.70.0",
      "hashPath": "grpc.aspnetcore.2.70.0.nupkg.sha512"
    },
    "Grpc.AspNetCore.Server/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9d6JuMLSxwOX4zERV7HBwq1XL8DD48a6FSoxD5dDXrCz/o0HqMXE2+lRcXHckOlz1JCesznW8XMMJdsU1FfY7w==",
      "path": "grpc.aspnetcore.server/2.70.0",
      "hashPath": "grpc.aspnetcore.server.2.70.0.nupkg.sha512"
    },
    "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-k4GrvUAgVWm7DyhnV55MHdX4bQSpZVEQmlZO3bdSmGZ+z6Hx+CwDlhqiReczCm6qbzSUbS1YW0t7z7UEObTwKA==",
      "path": "grpc.aspnetcore.server.clientfactory/2.70.0",
      "hashPath": "grpc.aspnetcore.server.clientfactory.2.70.0.nupkg.sha512"
    },
    "Grpc.Core.Api/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-66UotvWcSIq41oiQhLWcQACyKPM4umxXNiht5DQTLZJfNwEswWOcS7Z0xIEHyNIBE7ZpjotH22bEjTkvhPxmVw==",
      "path": "grpc.core.api/2.70.0",
      "hashPath": "grpc.core.api.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.Client/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xNv0FFCVJa5S1beUtye82WFCxKThuE1jbN8DO1x1Rj8VSIWXLBUmfSID5a1fGzsU2R/EMfwPoWclJ2RMfQuGXw==",
      "path": "grpc.net.client/2.70.0",
      "hashPath": "grpc.net.client.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.ClientFactory/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Qg+93oj/8RdEw3PnLZNNYWnWCWyJYC/ZYZcjeln/pLaxLaPvdXES1peiqSJUI4wLFZ1JwGlbWt8+nM1i2E7ihg==",
      "path": "grpc.net.clientfactory/2.70.0",
      "hashPath": "grpc.net.clientfactory.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.Common/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-rBdEUMyCwa+iB8mqC6JKyPbj3SBHHkReJj/yy/XKJI63GcG6w9DJMMGTVcYHqq4Ci2W4m0HT4jt2pFfFscar8g==",
      "path": "grpc.net.common/2.70.0",
      "hashPath": "grpc.net.common.2.70.0.nupkg.sha512"
    },
    "Grpc.Tools/2.71.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-r8zHZm7kHdMrtujnkcuQ0BNDH2969at/8Va1ZzQgVblaQzR7tm8JlA3G+5Z5IFbvvf9PcAr1/VcoSR+g7j4Nyw==",
      "path": "grpc.tools/2.71.0",
      "hashPath": "grpc.tools.2.71.0.nupkg.sha512"
    },
    "Humanizer.Core/2.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lQKvtaTDOXnoVJ20ibTuSIOf2i0uO0MPbDhd1jm238I+U/2ZnRENj0cktKZhtchBMtCUSRQ5v4xBCUbKNmyVMw==",
      "path": "humanizer.core/2.14.1",
      "hashPath": "humanizer.core.2.14.1.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-e19jmWJAQucbPYk3/fihJMDCYfv6CO+Qwp34pOehUSCbaHROw6FZ551SN1D0s9Btl0U/QHfuwFq6Z8Oa2ktE6g==",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.14",
      "hashPath": "microsoft.aspnetcore.authentication.jwtbearer.8.0.14.nupkg.sha512"
    },
    "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3aeMZ1N0lJoSyzqiP03hqemtb1BijhsJADdobn/4nsMJ8V1H+CrpuduUe4hlRdx+ikBQju1VGjMD1GJ3Sk05Eg==",
      "path": "microsoft.bcl.asyncinterfaces/7.0.0",
      "hashPath": "microsoft.bcl.asyncinterfaces.7.0.0.nupkg.sha512"
    },
    "Microsoft.Bcl.Memory/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bTUtGfpGyJnohQzjdXbtc7MqNzkv7CWUSRz54+ucNm0i32rZiIU0VdVPHDBShOl1qhVKRjW8mnEBz3d2vH93tQ==",
      "path": "microsoft.bcl.memory/9.0.0",
      "hashPath": "microsoft.bcl.memory.9.0.0.nupkg.sha512"
    },
    "Microsoft.Build.Framework/17.8.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NrQZJW8TlKVPx72yltGb8SVz3P5mNRk9fNiD/ao8jRSk48WqIIdCn99q4IjlVmPcruuQ+yLdjNQLL8Rb4c916g==",
      "path": "microsoft.build.framework/17.8.3",
      "hashPath": "microsoft.build.framework.17.8.3.nupkg.sha512"
    },
    "Microsoft.Build.Locator/1.7.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-sPy10x527Ph16S2u0yGME4S6ohBKJ69WfjeGG/bvELYeZVmJdKjxgnlL8cJJJLGV/cZIRqSfB12UDB8ICakOog==",
      "path": "microsoft.build.locator/1.7.8",
      "hashPath": "microsoft.build.locator.1.7.8.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-AxkxcPR+rheX0SmvpLVIGLhOUXAKG56a64kV9VQZ4y9gR9ZmPXnqZvHJnmwLSwzrEP6junUF11vuc+aqo5r68g==",
      "path": "microsoft.codeanalysis.analyzers/3.3.4",
      "hashPath": "microsoft.codeanalysis.analyzers.3.3.4.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/jR+e/9aT+BApoQJABlVCKnnggGQbvGh7BKq2/wI1LamxC+LbzhcLj4Vj7gXCofl1n4E521YfF9w0WcASGg/KA==",
      "path": "microsoft.codeanalysis.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+3+qfdb/aaGD8PZRCrsdobbzGs1m9u119SkkJt8e/mk3xLJz/udLtS2T6nY27OTXxBBw10HzAbC8Z9w08VyP/g==",
      "path": "microsoft.codeanalysis.csharp/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3amm4tq4Lo8/BGvg9p3BJh3S9nKq2wqCXfS7138i69TUpo/bD+XvD0hNurpEBtcNZhi1FyutiomKJqVF39ugYA==",
      "path": "microsoft.codeanalysis.csharp.workspaces/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.workspaces.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LXyV+MJKsKRu3FGJA3OmSk40OUIa/dQCFLOnm5X8MNcujx7hzGu8o+zjXlb/cy5xUdZK2UKYb9YaQ2E8m9QehQ==",
      "path": "microsoft.codeanalysis.workspaces.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IEYreI82QZKklp54yPHxZNG9EKSK6nHEkeuf+0Asie9llgS1gp0V1hw7ODG+QyoB7MuAnNQHmeV1Per/ECpv6A==",
      "path": "microsoft.codeanalysis.workspaces.msbuild/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.msbuild.4.8.0.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ji6fWE8bFWTvqaMue49RSCcAeqlec13hAbitTBZyz/RmYsQDhqM9VkWUoXS1x1mjcsyWjc5EQr2XyuAkwp0eNQ==",
      "path": "microsoft.entityframeworkcore/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HQH7HgwTl6IyasW7t6F2+ihuHLDmf9+8XaS41v8VHN5Z7x5ZMQIiHCbwxme4P5ICAjBG6VsWcjMCoh4fHbEwJg==",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-M+iOxejD3HqPV8/KE148wIehHA3cmMF+FgnpiN8CFB7DLokVSKQPPrwtHjcrNYJ/BDEssviEPNok/jtQWxj7xA==",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.analyzers.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Design/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-n5ZrAZ4RFELxYjJxN74lzmFlRrtSpYEYZfZcIJIWPGjSigwJsbya2CnOdjSVDPyfx3rKl9rzbd72D2DNHBJWeA==",
      "path": "microsoft.entityframeworkcore.design/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.design.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xsS+5TM7M5f3tCSRaSbzouGCoIgD2zokQxBGXvf9z3DusRztWvT1NNT9XJaY2JoK1qEEDcHah8is6azYmpZhIg==",
      "path": "microsoft.entityframeworkcore.relational/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.relational.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Tools/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-c2kkyHhkop9WAbBWgm64apzPbzMeu0iKsRW3cn5kxSge0SQNxSlkAOtnO4L9dc8YwCAtFFyAZrxVFekxyvxKwQ==",
      "path": "microsoft.entityframeworkcore.tools/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.tools.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-t8b0R6wtqC4o0hJ+oQkLPydw2MMLEoLEpQXCWbzXAm9NBMOngkDZNcvwF6DxbYdL5SlfZJXbYmiOxKZmwHNgNg==",
      "path": "microsoft.extensions.caching.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.caching.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Memory/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TXggBGDDd6r+J7FV09plXpzGmWcknVyoDsHlY2qcCbcAhmb0eH7Q9IkfIZl54/zEedVTa9jPgiPFTxH9WuCGMQ==",
      "path": "microsoft.extensions.caching.memory/9.0.3",
      "hashPath": "microsoft.extensions.caching.memory.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-q5qlbm6GRUrle2ZZxy9aqS/wWoc+mRD3JeP6rcpiJTh5XcemYkplAcJKq8lU11ZfPom5lfbZZfnQvDqcUhqD5Q==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lDbxJpkl6X8KZGpkAxgrrthQ42YeiR0xjPp7KPx+sCPc3ZbpaIbjzd0QQ+9kDdK2RU2DOl3pc6tQyAgEZY3V0A==",
      "path": "microsoft.extensions.dependencyinjection/9.0.3",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TfaHPSe39NyL2wxkisRxXK7xvHGZYBZ+dy3r+mqGvnxKgAPdHkMu3QMQZI4pquP6W5FIQBqs8FJpWV8ffCgDqQ==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyModel/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-194P+NOekDXrPHmM2R8678T4bRfZ2isQXDDAsXKE5qI0QLUnXbwB0upljAkyxk+Kkt1DV1tV+9tHOtHEEh3ksw==",
      "path": "microsoft.extensions.dependencymodel/9.0.3",
      "hashPath": "microsoft.extensions.dependencymodel.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Http/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-15+pa2G0bAMHbHewaQIdr/y6ag2H3yh4rd9hTXavtWDzQBkvpe2RMqFg8BxDpcQWssmjmBApGPcw93QRz6YcMg==",
      "path": "microsoft.extensions.http/6.0.0",
      "hashPath": "microsoft.extensions.http.6.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-utIi2R1nm+PCWkvWBf1Ou6LWqg9iLfHU23r8yyU9VCvda4dEs7xbTZSwGa5KuwbpzpgCbHCIuKaFHB3zyFmnGw==",
      "path": "microsoft.extensions.logging/9.0.3",
      "hashPath": "microsoft.extensions.logging.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-H/MBMLt9A/69Ux4OrV7oCKt3DcMT04o5SCqDolulzQA66TLFEpYYb4qedMs/uwrLtyHXGuDGWKZse/oa8W9AZw==",
      "path": "microsoft.extensions.logging.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xE7MpY70lkw1oiid5y6FbL9dVw8oLfkx8RhSNGN8sSzBlCqGn0SyT3Fqc8tZnDaPIq7Z8R9RTKlS564DS+MV3g==",
      "path": "microsoft.extensions.options/9.0.3",
      "hashPath": "microsoft.extensions.options.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yCCJHvBcRyqapMSNzP+kTc57Eaavq2cr5Tmuil6/XVnipQf5xmskxakSQ1enU6S4+fNg3sJ27WcInV64q24JsA==",
      "path": "microsoft.extensions.primitives/9.0.3",
      "hashPath": "microsoft.extensions.primitives.9.0.3.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Abstractions/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OQd5aVepYvh5evOmBMeAYjMIpEcTf1ZCBZaU7Nh/RlhhdXefjFDJeP1L2F2zeNT1unFr+wUu/h3Ac2Xb4BXU6w==",
      "path": "microsoft.identitymodel.abstractions/8.7.0",
      "hashPath": "microsoft.identitymodel.abstractions.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-uzsSAWhNhbrkWbQKBTE8QhzviU6sr3bJ1Bkv7gERlhswfSKOp7HsxTRLTPBpx/whQ/GRRHEwMg8leRIPbMrOgw==",
      "path": "microsoft.identitymodel.jsonwebtokens/8.7.0",
      "hashPath": "microsoft.identitymodel.jsonwebtokens.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Logging/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Bs0TznPAu+nxa9rAVHJ+j3CYECHJkT3tG8AyBfhFYlT5ldsDhoxFT7J+PKxJHLf+ayqWfvDZHHc4639W2FQCxA==",
      "path": "microsoft.identitymodel.logging/8.7.0",
      "hashPath": "microsoft.identitymodel.logging.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Tokens/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5Z6voXjRXAnGklhmZd1mKz89UhcF5ZQQZaZc2iKrOuL4Li1UihG2vlJx8IbiFAOIxy/xdbsAm0A+WZEaH5fxng==",
      "path": "microsoft.identitymodel.tokens/8.7.0",
      "hashPath": "microsoft.identitymodel.tokens.8.7.0.nupkg.sha512"
    },
    "Mono.TextTemplating/3.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YqueG52R/Xej4VVbKuRIodjiAhV0HR/XVbLbNrJhCZnzjnSjgMJ/dCdV0akQQxavX6hp/LC6rqLGLcXeQYU7XA==",
      "path": "mono.texttemplating/3.0.0",
      "hashPath": "mono.texttemplating.3.0.0.nupkg.sha512"
    },
    "Npgsql/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "path": "npgsql/9.0.3",
      "hashPath": "npgsql.9.0.3.nupkg.sha512"
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "hashPath": "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512"
    },
    "System.CodeDom/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-CPc6tWO1LAer3IzfZufDBRL+UZQcj5uS207NHALQzP84Vp/z6wF0Aa0YZImOQY8iStY0A2zI/e3ihKNPfUm8XA==",
      "path": "system.codedom/6.0.0",
      "hashPath": "system.codedom.6.0.0.nupkg.sha512"
    },
    "System.Collections.Immutable/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dQPcs0U1IKnBdRDBkrCTi1FoajSTBzLcVTpjO4MBCMC7f4pDOIPzgBoX8JjG7X6uZRJ8EBxsi8+DR1JuwjnzOQ==",
      "path": "system.collections.immutable/7.0.0",
      "hashPath": "system.collections.immutable.7.0.0.nupkg.sha512"
    },
    "System.Composition/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tRwgcAkDd85O8Aq6zHDANzQaq380cek9lbMg5Qma46u5BZXq/G+XvIYmu+UI+BIIZ9zssXLYrkTykEqxxvhcmg==",
      "path": "system.composition/7.0.0",
      "hashPath": "system.composition.7.0.0.nupkg.sha512"
    },
    "System.Composition.AttributedModel/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2QzClqjElKxgI1jK1Jztnq44/8DmSuTSGGahXqQ4TdEV0h9s2KikQZIgcEqVzR7OuWDFPGLHIprBJGQEPr8fAQ==",
      "path": "system.composition.attributedmodel/7.0.0",
      "hashPath": "system.composition.attributedmodel.7.0.0.nupkg.sha512"
    },
    "System.Composition.Convention/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IMhTlpCs4HmlD8B+J8/kWfwX7vrBBOs6xyjSTzBlYSs7W4OET4tlkR/Sg9NG8jkdJH9Mymq0qGdYS1VPqRTBnQ==",
      "path": "system.composition.convention/7.0.0",
      "hashPath": "system.composition.convention.7.0.0.nupkg.sha512"
    },
    "System.Composition.Hosting/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eB6gwN9S+54jCTBJ5bpwMOVerKeUfGGTYCzz3QgDr1P55Gg/Wb27ShfPIhLMjmZ3MoAKu8uUSv6fcCdYJTN7Bg==",
      "path": "system.composition.hosting/7.0.0",
      "hashPath": "system.composition.hosting.7.0.0.nupkg.sha512"
    },
    "System.Composition.Runtime/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-aZJ1Zr5Txe925rbo4742XifEyW0MIni1eiUebmcrP3HwLXZ3IbXUj4MFMUH/RmnJOAQiS401leg/2Sz1MkApDw==",
      "path": "system.composition.runtime/7.0.0",
      "hashPath": "system.composition.runtime.7.0.0.nupkg.sha512"
    },
    "System.Composition.TypedParts/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ZK0KNPfbtxVceTwh+oHNGUOYV2WNOHReX2AXipuvkURC7s/jPwoWfsu3SnDBDgofqbiWr96geofdQ2erm/KTHg==",
      "path": "system.composition.typedparts/7.0.0",
      "hashPath": "system.composition.typedparts.7.0.0.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-cBA+28xDW33tSiGht/H8xvr8lnaCrgJ7EdO348AfSGsX4PPJUOULKxny/cc9DVNGExaCrtqagsnm5M2mkWIZ+g==",
      "path": "system.diagnostics.diagnosticsource/9.0.3",
      "hashPath": "system.diagnostics.diagnosticsource.9.0.3.nupkg.sha512"
    },
    "System.IdentityModel.Tokens.Jwt/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-8dKL3A9pVqYCJIXHd4H2epQqLxSvKeNxGonR0e5g89yMchyvsM/NLuB06otx29BicUd6+LUJZgNZmvYjjPsPGg==",
      "path": "system.identitymodel.tokens.jwt/8.7.0",
      "hashPath": "system.identitymodel.tokens.jwt.8.7.0.nupkg.sha512"
    },
    "System.IO.Pipelines/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-aP1Qh9llcEmo0qN+VKvVDHFMe5Cqpfb1VjhBO7rjmxCXtLs3IfVSOiNqqLBZ/4Qbcr4J0SDdJq9S7EKAGpnwEA==",
      "path": "system.io.pipelines/9.0.3",
      "hashPath": "system.io.pipelines.9.0.3.nupkg.sha512"
    },
    "System.Reflection.Metadata/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-MclTG61lsD9sYdpNz9xsKBzjsmsfCtcMZYXz/IUr2zlhaTaABonlr1ESeompTgM+Xk+IwtGYU7/voh3YWB/fWw==",
      "path": "system.reflection.metadata/7.0.0",
      "hashPath": "system.reflection.metadata.7.0.0.nupkg.sha512"
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "hashPath": "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512"
    },
    "System.Text.Encodings.Web/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5L+iI4fBMtGwt4FHLQh40/rgdbxnw6lHaLkR3gbaHG97TohzUv+z/oP03drsTR1lKCLhOkp40cFnHYOQLtpT5A==",
      "path": "system.text.encodings.web/9.0.3",
      "hashPath": "system.text.encodings.web.9.0.3.nupkg.sha512"
    },
    "System.Text.Json/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-r2JRkLjsYrq5Dpo7+y3Wa73OfirZPdVhxiTJWwZ+oJM7FOAe0LkM3GlH+pgkNRdd1G1kwUbmRCdmh4uoaWwu1g==",
      "path": "system.text.json/9.0.3",
      "hashPath": "system.text.json.9.0.3.nupkg.sha512"
    },
    "System.Threading.Channels/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-qmeeYNROMsONF6ndEZcIQ+VxR4Q/TX/7uIVLJqtwIWL7dDWeh0l1UIqgo4wYyjG//5lUNhwkLDSFl+pAWO6oiA==",
      "path": "system.threading.channels/7.0.0",
      "hashPath": "system.threading.channels.7.0.0.nupkg.sha512"
    },
    "RequestManagement.Common/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}

//RequestManagement.Server.runtimeconfig.json
{
  "runtimeOptions": {
    "tfm": "net8.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.AspNetCore.App",
        "version": "8.0.0"
      }
    ],
    "configProperties": {
      "System.GC.Server": true,
      "System.Reflection.NullabilityInfoContext.IsSupported": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}

//WpfClient.deps.json
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "WpfClient/1.0.0": {
        "dependencies": {
          "CommunityToolkit.Mvvm": "8.4.0",
          "Google.Protobuf": "3.30.2",
          "Grpc.Net.Client": "2.70.0",
          "Grpc.Net.ClientFactory": "2.70.0",
          "Grpc.Tools": "2.71.0",
          "Microsoft.AspNetCore.Http.Abstractions": "2.3.0",
          "RequestManagement.Common": "1.0.0",
          "RequestManagement.Server": "1.0.0"
        },
        "runtime": {
          "WpfClient.dll": {}
        }
      },
      "BCrypt.Net-Next/4.0.3": {
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "assemblyVersion": "4.0.3.0",
            "fileVersion": "4.0.3.0"
          }
        }
      },
      "CommunityToolkit.Mvvm/8.4.0": {
        "runtime": {
          "lib/net8.0/CommunityToolkit.Mvvm.dll": {
            "assemblyVersion": "8.4.0.0",
            "fileVersion": "8.4.0.1"
          }
        }
      },
      "Google.Protobuf/3.30.2": {
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "assemblyVersion": "3.30.2.0",
            "fileVersion": "3.30.2.0"
          }
        }
      },
      "Grpc.AspNetCore/2.70.0": {
        "dependencies": {
          "Google.Protobuf": "3.30.2",
          "Grpc.AspNetCore.Server.ClientFactory": "2.70.0",
          "Grpc.Tools": "2.71.0"
        }
      },
      "Grpc.AspNetCore.Server/2.70.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
        "dependencies": {
          "Grpc.AspNetCore.Server": "2.70.0",
          "Grpc.Net.ClientFactory": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Core.Api/2.70.0": {
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.Client/2.70.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.70.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.ClientFactory/2.70.0": {
        "dependencies": {
          "Grpc.Net.Client": "2.70.0",
          "Microsoft.Extensions.Http": "6.0.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.ClientFactory.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.Common/2.70.0": {
        "dependencies": {
          "Grpc.Core.Api": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Tools/2.71.0": {},
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "assemblyVersion": "8.0.14.0",
            "fileVersion": "8.0.1425.11221"
          }
        }
      },
      "Microsoft.AspNetCore.Http.Abstractions/2.3.0": {
        "dependencies": {
          "Microsoft.AspNetCore.Http.Features": "2.3.0",
          "System.Text.Encodings.Web": "8.0.0"
        }
      },
      "Microsoft.AspNetCore.Http.Features/2.3.0": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        }
      },
      "Microsoft.Bcl.Memory/9.0.0": {
        "runtime": {
          "lib/net8.0/Microsoft.Bcl.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.24.52809"
          }
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.3": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.3",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {},
      "Microsoft.EntityFrameworkCore.Relational/9.0.1": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.1",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "assemblyVersion": "9.0.1.0",
            "fileVersion": "9.0.124.61002"
          }
        }
      },
      "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.124.61010"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Http/6.0.0": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        }
      },
      "Microsoft.Extensions.Logging/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "System.Diagnostics.DiagnosticSource": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Options/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Primitives/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.7.0": {
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.7.0": {
        "dependencies": {
          "Microsoft.Bcl.Memory": "9.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.IdentityModel.Logging": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Npgsql/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.3.0"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.1",
          "Npgsql": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "assemblyVersion": "9.0.4.0",
            "fileVersion": "9.0.4.0"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.3": {
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "System.Text.Encodings.Web/8.0.0": {},
      "RequestManagement.Common/1.0.0": {
        "runtime": {
          "RequestManagement.Common.dll": {
            "assemblyVersion": "1.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RequestManagement.Server/1.0.0": {
        "dependencies": {
          "BCrypt.Net-Next": "4.0.3",
          "Google.Protobuf": "3.30.2",
          "Grpc.AspNetCore": "2.70.0",
          "Microsoft.AspNetCore.Authentication.JwtBearer": "8.0.14",
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "RequestManagement.Common": "1.0.0",
          "System.IdentityModel.Tokens.Jwt": "8.7.0"
        },
        "runtime": {
          "RequestManagement.Server.dll": {
            "assemblyVersion": "1.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "WpfClient/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "BCrypt.Net-Next/4.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "path": "bcrypt.net-next/4.0.3",
      "hashPath": "bcrypt.net-next.4.0.3.nupkg.sha512"
    },
    "CommunityToolkit.Mvvm/8.4.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tqVU8yc/ADO9oiTRyTnwhFN68hCwvkliMierptWOudIAvWY1mWCh5VFh+guwHJmpMwfg0J0rY+yyd5Oy7ty9Uw==",
      "path": "communitytoolkit.mvvm/8.4.0",
      "hashPath": "communitytoolkit.mvvm.8.4.0.nupkg.sha512"
    },
    "Google.Protobuf/3.30.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Y2aOVLIt75yeeEWigg9V9YnjsEm53sADtLGq0gLhwaXpk3iu8tYSoauolyhenagA2sWno2TQ2WujI0HQd6s1Vw==",
      "path": "google.protobuf/3.30.2",
      "hashPath": "google.protobuf.3.30.2.nupkg.sha512"
    },
    "Grpc.AspNetCore/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-s29ST5F2/PZLzOnfqfeDn0emAZajBtYnV9G7hkbK8Eu9+XphoL3KfiEsg2eBsx7P9YYQXcksDbE+CbHApMZeJA==",
      "path": "grpc.aspnetcore/2.70.0",
      "hashPath": "grpc.aspnetcore.2.70.0.nupkg.sha512"
    },
    "Grpc.AspNetCore.Server/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9d6JuMLSxwOX4zERV7HBwq1XL8DD48a6FSoxD5dDXrCz/o0HqMXE2+lRcXHckOlz1JCesznW8XMMJdsU1FfY7w==",
      "path": "grpc.aspnetcore.server/2.70.0",
      "hashPath": "grpc.aspnetcore.server.2.70.0.nupkg.sha512"
    },
    "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-k4GrvUAgVWm7DyhnV55MHdX4bQSpZVEQmlZO3bdSmGZ+z6Hx+CwDlhqiReczCm6qbzSUbS1YW0t7z7UEObTwKA==",
      "path": "grpc.aspnetcore.server.clientfactory/2.70.0",
      "hashPath": "grpc.aspnetcore.server.clientfactory.2.70.0.nupkg.sha512"
    },
    "Grpc.Core.Api/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-66UotvWcSIq41oiQhLWcQACyKPM4umxXNiht5DQTLZJfNwEswWOcS7Z0xIEHyNIBE7ZpjotH22bEjTkvhPxmVw==",
      "path": "grpc.core.api/2.70.0",
      "hashPath": "grpc.core.api.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.Client/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xNv0FFCVJa5S1beUtye82WFCxKThuE1jbN8DO1x1Rj8VSIWXLBUmfSID5a1fGzsU2R/EMfwPoWclJ2RMfQuGXw==",
      "path": "grpc.net.client/2.70.0",
      "hashPath": "grpc.net.client.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.ClientFactory/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Qg+93oj/8RdEw3PnLZNNYWnWCWyJYC/ZYZcjeln/pLaxLaPvdXES1peiqSJUI4wLFZ1JwGlbWt8+nM1i2E7ihg==",
      "path": "grpc.net.clientfactory/2.70.0",
      "hashPath": "grpc.net.clientfactory.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.Common/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-rBdEUMyCwa+iB8mqC6JKyPbj3SBHHkReJj/yy/XKJI63GcG6w9DJMMGTVcYHqq4Ci2W4m0HT4jt2pFfFscar8g==",
      "path": "grpc.net.common/2.70.0",
      "hashPath": "grpc.net.common.2.70.0.nupkg.sha512"
    },
    "Grpc.Tools/2.71.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-r8zHZm7kHdMrtujnkcuQ0BNDH2969at/8Va1ZzQgVblaQzR7tm8JlA3G+5Z5IFbvvf9PcAr1/VcoSR+g7j4Nyw==",
      "path": "grpc.tools/2.71.0",
      "hashPath": "grpc.tools.2.71.0.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-e19jmWJAQucbPYk3/fihJMDCYfv6CO+Qwp34pOehUSCbaHROw6FZ551SN1D0s9Btl0U/QHfuwFq6Z8Oa2ktE6g==",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.14",
      "hashPath": "microsoft.aspnetcore.authentication.jwtbearer.8.0.14.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Http.Abstractions/2.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-39r9PPrjA6s0blyFv5qarckjNkaHRA5B+3b53ybuGGNTXEj1/DStQJ4NWjFL6QTRQpL9zt7nDyKxZdJOlcnq+Q==",
      "path": "microsoft.aspnetcore.http.abstractions/2.3.0",
      "hashPath": "microsoft.aspnetcore.http.abstractions.2.3.0.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Http.Features/2.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-f10WUgcsKqrkmnz6gt8HeZ7kyKjYN30PO7cSic1lPtH7paPtnQqXPOveul/SIPI43PhRD4trttg4ywnrEmmJpA==",
      "path": "microsoft.aspnetcore.http.features/2.3.0",
      "hashPath": "microsoft.aspnetcore.http.features.2.3.0.nupkg.sha512"
    },
    "Microsoft.Bcl.Memory/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bTUtGfpGyJnohQzjdXbtc7MqNzkv7CWUSRz54+ucNm0i32rZiIU0VdVPHDBShOl1qhVKRjW8mnEBz3d2vH93tQ==",
      "path": "microsoft.bcl.memory/9.0.0",
      "hashPath": "microsoft.bcl.memory.9.0.0.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ji6fWE8bFWTvqaMue49RSCcAeqlec13hAbitTBZyz/RmYsQDhqM9VkWUoXS1x1mjcsyWjc5EQr2XyuAkwp0eNQ==",
      "path": "microsoft.entityframeworkcore/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HQH7HgwTl6IyasW7t6F2+ihuHLDmf9+8XaS41v8VHN5Z7x5ZMQIiHCbwxme4P5ICAjBG6VsWcjMCoh4fHbEwJg==",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-M+iOxejD3HqPV8/KE148wIehHA3cmMF+FgnpiN8CFB7DLokVSKQPPrwtHjcrNYJ/BDEssviEPNok/jtQWxj7xA==",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.analyzers.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-7Iu0h4oevRvH4IwPzmxuIJGYRt55TapoREGlluk75KCO7lenN0+QnzCl6cQDY48uDoxAUpJbpK2xW7o8Ix69dw==",
      "path": "microsoft.entityframeworkcore.relational/9.0.1",
      "hashPath": "microsoft.entityframeworkcore.relational.9.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-t8b0R6wtqC4o0hJ+oQkLPydw2MMLEoLEpQXCWbzXAm9NBMOngkDZNcvwF6DxbYdL5SlfZJXbYmiOxKZmwHNgNg==",
      "path": "microsoft.extensions.caching.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.caching.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Memory/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TXggBGDDd6r+J7FV09plXpzGmWcknVyoDsHlY2qcCbcAhmb0eH7Q9IkfIZl54/zEedVTa9jPgiPFTxH9WuCGMQ==",
      "path": "microsoft.extensions.caching.memory/9.0.3",
      "hashPath": "microsoft.extensions.caching.memory.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+4hfFIY1UjBCXFTTOd+ojlDPq6mep3h5Vq5SYE3Pjucr7dNXmq4S/6P/LoVnZFz2e/5gWp/om4svUFgznfULcA==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.1",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lDbxJpkl6X8KZGpkAxgrrthQ42YeiR0xjPp7KPx+sCPc3ZbpaIbjzd0QQ+9kDdK2RU2DOl3pc6tQyAgEZY3V0A==",
      "path": "microsoft.extensions.dependencyinjection/9.0.3",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TfaHPSe39NyL2wxkisRxXK7xvHGZYBZ+dy3r+mqGvnxKgAPdHkMu3QMQZI4pquP6W5FIQBqs8FJpWV8ffCgDqQ==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Http/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-15+pa2G0bAMHbHewaQIdr/y6ag2H3yh4rd9hTXavtWDzQBkvpe2RMqFg8BxDpcQWssmjmBApGPcw93QRz6YcMg==",
      "path": "microsoft.extensions.http/6.0.0",
      "hashPath": "microsoft.extensions.http.6.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-utIi2R1nm+PCWkvWBf1Ou6LWqg9iLfHU23r8yyU9VCvda4dEs7xbTZSwGa5KuwbpzpgCbHCIuKaFHB3zyFmnGw==",
      "path": "microsoft.extensions.logging/9.0.3",
      "hashPath": "microsoft.extensions.logging.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-H/MBMLt9A/69Ux4OrV7oCKt3DcMT04o5SCqDolulzQA66TLFEpYYb4qedMs/uwrLtyHXGuDGWKZse/oa8W9AZw==",
      "path": "microsoft.extensions.logging.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xE7MpY70lkw1oiid5y6FbL9dVw8oLfkx8RhSNGN8sSzBlCqGn0SyT3Fqc8tZnDaPIq7Z8R9RTKlS564DS+MV3g==",
      "path": "microsoft.extensions.options/9.0.3",
      "hashPath": "microsoft.extensions.options.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yCCJHvBcRyqapMSNzP+kTc57Eaavq2cr5Tmuil6/XVnipQf5xmskxakSQ1enU6S4+fNg3sJ27WcInV64q24JsA==",
      "path": "microsoft.extensions.primitives/9.0.3",
      "hashPath": "microsoft.extensions.primitives.9.0.3.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Abstractions/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OQd5aVepYvh5evOmBMeAYjMIpEcTf1ZCBZaU7Nh/RlhhdXefjFDJeP1L2F2zeNT1unFr+wUu/h3Ac2Xb4BXU6w==",
      "path": "microsoft.identitymodel.abstractions/8.7.0",
      "hashPath": "microsoft.identitymodel.abstractions.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-uzsSAWhNhbrkWbQKBTE8QhzviU6sr3bJ1Bkv7gERlhswfSKOp7HsxTRLTPBpx/whQ/GRRHEwMg8leRIPbMrOgw==",
      "path": "microsoft.identitymodel.jsonwebtokens/8.7.0",
      "hashPath": "microsoft.identitymodel.jsonwebtokens.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Logging/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Bs0TznPAu+nxa9rAVHJ+j3CYECHJkT3tG8AyBfhFYlT5ldsDhoxFT7J+PKxJHLf+ayqWfvDZHHc4639W2FQCxA==",
      "path": "microsoft.identitymodel.logging/8.7.0",
      "hashPath": "microsoft.identitymodel.logging.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Tokens/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5Z6voXjRXAnGklhmZd1mKz89UhcF5ZQQZaZc2iKrOuL4Li1UihG2vlJx8IbiFAOIxy/xdbsAm0A+WZEaH5fxng==",
      "path": "microsoft.identitymodel.tokens/8.7.0",
      "hashPath": "microsoft.identitymodel.tokens.8.7.0.nupkg.sha512"
    },
    "Npgsql/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "path": "npgsql/9.0.3",
      "hashPath": "npgsql.9.0.3.nupkg.sha512"
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "hashPath": "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-cBA+28xDW33tSiGht/H8xvr8lnaCrgJ7EdO348AfSGsX4PPJUOULKxny/cc9DVNGExaCrtqagsnm5M2mkWIZ+g==",
      "path": "system.diagnostics.diagnosticsource/9.0.3",
      "hashPath": "system.diagnostics.diagnosticsource.9.0.3.nupkg.sha512"
    },
    "System.IdentityModel.Tokens.Jwt/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-8dKL3A9pVqYCJIXHd4H2epQqLxSvKeNxGonR0e5g89yMchyvsM/NLuB06otx29BicUd6+LUJZgNZmvYjjPsPGg==",
      "path": "system.identitymodel.tokens.jwt/8.7.0",
      "hashPath": "system.identitymodel.tokens.jwt.8.7.0.nupkg.sha512"
    },
    "System.Text.Encodings.Web/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yev/k9GHAEGx2Rg3/tU6MQh4HGBXJs70y7j1LaM1i/ER9po+6nnQ6RRqTJn1E7Xu0fbIFK80Nh5EoODxrbxwBQ==",
      "path": "system.text.encodings.web/8.0.0",
      "hashPath": "system.text.encodings.web.8.0.0.nupkg.sha512"
    },
    "RequestManagement.Common/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RequestManagement.Server/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}

//WpfClient.runtimeconfig.json
{
  "runtimeOptions": {
    "tfm": "net8.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.WindowsDesktop.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.AspNetCore.App",
        "version": "8.0.0"
      }
    ],
    "configProperties": {
      "MVVMTOOLKIT_ENABLE_INOTIFYPROPERTYCHANGING_SUPPORT": true,
      "System.Reflection.NullabilityInfoContext.IsSupported": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": true
    }
  }
}

//.NETCoreApp,Version=v8.0.AssemblyAttributes.cs
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]


//App.g.cs
#pragma checksum "..\..\..\App.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "B7056FFB96123ECEAF46D64561BA76ED28640082"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient {
    
    
    /// <summary>
    /// App
    /// </summary>
    public partial class App : System.Windows.Application {
        
        /// <summary>
        /// Application Entry Point.
        /// </summary>
        [System.STAThreadAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public static void Main() {
            WpfClient.App app = new WpfClient.App();
            app.Run();
        }
    }
}



//App.g.i.cs
#pragma checksum "..\..\..\App.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "B7056FFB96123ECEAF46D64561BA76ED28640082"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient {
    
    
    /// <summary>
    /// App
    /// </summary>
    public partial class App : System.Windows.Application {
        
        /// <summary>
        /// Application Entry Point.
        /// </summary>
        [System.STAThreadAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public static void Main() {
            WpfClient.App app = new WpfClient.App();
            app.Run();
        }
    }
}



//Auth.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: auth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RequestManagement.Server.Controllers {

  /// <summary>Holder for reflection information generated from auth.proto</summary>
  public static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgphdXRoLnByb3RvEgRhdXRoIjYKE0F1dGhlbnRpY2F0ZVJlcXVlc3QSDQoF",
            "bG9naW4YASABKAkSEAoIcGFzc3dvcmQYAiABKAkiUwoUQXV0aGVudGljYXRl",
            "UmVzcG9uc2USDwoHdXNlcl9pZBgBIAEoBRINCgVsb2dpbhgCIAEoCRIMCgRy",
            "b2xlGAMgASgFEg0KBXRva2VuGAQgASgJIjoKEEF1dGhvcml6ZVJlcXVlc3QS",
            "DwoHdXNlcl9pZBgBIAEoBRIVCg1yZXF1aXJlZF9yb2xlGAIgASgFIioKEUF1",
            "dGhvcml6ZVJlc3BvbnNlEhUKDWlzX2F1dGhvcml6ZWQYASABKAgykgEKC0F1",
            "dGhTZXJ2aWNlEkUKDEF1dGhlbnRpY2F0ZRIZLmF1dGguQXV0aGVudGljYXRl",
            "UmVxdWVzdBoaLmF1dGguQXV0aGVudGljYXRlUmVzcG9uc2USPAoJQXV0aG9y",
            "aXplEhYuYXV0aC5BdXRob3JpemVSZXF1ZXN0GhcuYXV0aC5BdXRob3JpemVS",
            "ZXNwb25zZUInqgIkUmVxdWVzdE1hbmFnZW1lbnQuU2VydmVyLkNvbnRyb2xs",
            "ZXJzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.AuthenticateRequest), global::RequestManagement.Server.Controllers.AuthenticateRequest.Parser, new[]{ "Login", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.AuthenticateResponse), global::RequestManagement.Server.Controllers.AuthenticateResponse.Parser, new[]{ "UserId", "Login", "Role", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.AuthorizeRequest), global::RequestManagement.Server.Controllers.AuthorizeRequest.Parser, new[]{ "UserId", "RequiredRole" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.AuthorizeResponse), global::RequestManagement.Server.Controllers.AuthorizeResponse.Parser, new[]{ "IsAuthorized" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Запрос на аутентификацию
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthenticateRequest : pb::IMessage<AuthenticateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthenticateRequest> _parser = new pb::MessageParser<AuthenticateRequest>(() => new AuthenticateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthenticateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest(AuthenticateRequest other) : this() {
      login_ = other.login_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest Clone() {
      return new AuthenticateRequest(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private string login_ = "";
    /// <summary>
    /// Логин пользователя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// Пароль пользователя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthenticateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthenticateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Ответ на аутентификацию
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthenticateResponse : pb::IMessage<AuthenticateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthenticateResponse> _parser = new pb::MessageParser<AuthenticateResponse>(() => new AuthenticateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthenticateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse(AuthenticateResponse other) : this() {
      userId_ = other.userId_;
      login_ = other.login_;
      role_ = other.role_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse Clone() {
      return new AuthenticateResponse(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    /// ID пользователя (0, если аутентификация не удалась)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 2;
    private string login_ = "";
    /// <summary>
    /// Логин пользователя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 3;
    private int role_;
    /// <summary>
    /// Роль пользователя (enum UserRole)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 4;
    private string token_ = "";
    /// <summary>
    /// JWT-токен для дальнейших запросов
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthenticateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Login != other.Login) return false;
      if (Role != other.Role) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Role != 0) hash ^= Role.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Login.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Login);
      }
      if (Role != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Role);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Login.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Login);
      }
      if (Role != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Role);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Role != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthenticateResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Role != 0) {
        Role = other.Role;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            Login = input.ReadString();
            break;
          }
          case 24: {
            Role = input.ReadInt32();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            Login = input.ReadString();
            break;
          }
          case 24: {
            Role = input.ReadInt32();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Запрос на проверку прав доступа
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthorizeRequest : pb::IMessage<AuthorizeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthorizeRequest> _parser = new pb::MessageParser<AuthorizeRequest>(() => new AuthorizeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthorizeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeRequest(AuthorizeRequest other) : this() {
      userId_ = other.userId_;
      requiredRole_ = other.requiredRole_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeRequest Clone() {
      return new AuthorizeRequest(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    /// ID пользователя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "required_role" field.</summary>
    public const int RequiredRoleFieldNumber = 2;
    private int requiredRole_;
    /// <summary>
    /// Требуемая роль (enum UserRole)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequiredRole {
      get { return requiredRole_; }
      set {
        requiredRole_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthorizeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthorizeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (RequiredRole != other.RequiredRole) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (RequiredRole != 0) hash ^= RequiredRole.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (RequiredRole != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RequiredRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (RequiredRole != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RequiredRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (RequiredRole != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequiredRole);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthorizeRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.RequiredRole != 0) {
        RequiredRole = other.RequiredRole;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            RequiredRole = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            RequiredRole = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Ответ на проверку прав доступа
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthorizeResponse : pb::IMessage<AuthorizeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthorizeResponse> _parser = new pb::MessageParser<AuthorizeResponse>(() => new AuthorizeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthorizeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeResponse(AuthorizeResponse other) : this() {
      isAuthorized_ = other.isAuthorized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizeResponse Clone() {
      return new AuthorizeResponse(this);
    }

    /// <summary>Field number for the "is_authorized" field.</summary>
    public const int IsAuthorizedFieldNumber = 1;
    private bool isAuthorized_;
    /// <summary>
    /// Признак наличия прав
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAuthorized {
      get { return isAuthorized_; }
      set {
        isAuthorized_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthorizeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthorizeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsAuthorized != other.IsAuthorized) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsAuthorized != false) hash ^= IsAuthorized.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsAuthorized != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsAuthorized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsAuthorized != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsAuthorized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsAuthorized != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthorizeResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsAuthorized != false) {
        IsAuthorized = other.IsAuthorized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsAuthorized = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsAuthorized = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code


//AuthGrpc.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: auth.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RequestManagement.Server.Controllers {
  /// <summary>
  /// Сервис аутентификации
  /// </summary>
  public static partial class AuthService
  {
    static readonly string __ServiceName = "auth.AuthService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.AuthenticateRequest> __Marshaller_auth_AuthenticateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.AuthenticateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.AuthenticateResponse> __Marshaller_auth_AuthenticateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.AuthenticateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.AuthorizeRequest> __Marshaller_auth_AuthorizeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.AuthorizeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.AuthorizeResponse> __Marshaller_auth_AuthorizeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.AuthorizeResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.AuthenticateRequest, global::RequestManagement.Server.Controllers.AuthenticateResponse> __Method_Authenticate = new grpc::Method<global::RequestManagement.Server.Controllers.AuthenticateRequest, global::RequestManagement.Server.Controllers.AuthenticateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Authenticate",
        __Marshaller_auth_AuthenticateRequest,
        __Marshaller_auth_AuthenticateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.AuthorizeRequest, global::RequestManagement.Server.Controllers.AuthorizeResponse> __Method_Authorize = new grpc::Method<global::RequestManagement.Server.Controllers.AuthorizeRequest, global::RequestManagement.Server.Controllers.AuthorizeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Authorize",
        __Marshaller_auth_AuthorizeRequest,
        __Marshaller_auth_AuthorizeResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RequestManagement.Server.Controllers.AuthReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for AuthService</summary>
    public partial class AuthServiceClient : grpc::ClientBase<AuthServiceClient>
    {
      /// <summary>Creates a new client for AuthService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AuthServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AuthService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AuthServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AuthServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AuthServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.AuthenticateResponse Authenticate(global::RequestManagement.Server.Controllers.AuthenticateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Authenticate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.AuthenticateResponse Authenticate(global::RequestManagement.Server.Controllers.AuthenticateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Authenticate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.AuthenticateResponse> AuthenticateAsync(global::RequestManagement.Server.Controllers.AuthenticateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AuthenticateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.AuthenticateResponse> AuthenticateAsync(global::RequestManagement.Server.Controllers.AuthenticateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Authenticate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.AuthorizeResponse Authorize(global::RequestManagement.Server.Controllers.AuthorizeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Authorize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.AuthorizeResponse Authorize(global::RequestManagement.Server.Controllers.AuthorizeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Authorize, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.AuthorizeResponse> AuthorizeAsync(global::RequestManagement.Server.Controllers.AuthorizeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AuthorizeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.AuthorizeResponse> AuthorizeAsync(global::RequestManagement.Server.Controllers.AuthorizeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Authorize, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AuthServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AuthServiceClient(configuration);
      }
    }

  }
}
#endregion


//GeneratedInternalTypeHelper.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XamlGeneratedNamespace {
    
    
    /// <summary>
    /// GeneratedInternalTypeHelper
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    public sealed class GeneratedInternalTypeHelper : System.Windows.Markup.InternalTypeHelper {
        
        /// <summary>
        /// CreateInstance
        /// </summary>
        protected override object CreateInstance(System.Type type, System.Globalization.CultureInfo culture) {
            return System.Activator.CreateInstance(type, ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) 
                            | (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.CreateInstance)), null, null, culture);
        }
        
        /// <summary>
        /// GetPropertyValue
        /// </summary>
        protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
            return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
        }
        
        /// <summary>
        /// SetPropertyValue
        /// </summary>
        protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
            propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
        }
        
        /// <summary>
        /// CreateDelegate
        /// </summary>
        protected override System.Delegate CreateDelegate(System.Type delegateType, object target, string handler) {
            return ((System.Delegate)(target.GetType().InvokeMember("_CreateDelegate", (System.Reflection.BindingFlags.InvokeMethod 
                            | (System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance)), null, target, new object[] {
                        delegateType,
                        handler}, null)));
        }
        
        /// <summary>
        /// AddEventHandler
        /// </summary>
        protected override void AddEventHandler(System.Reflection.EventInfo eventInfo, object target, System.Delegate handler) {
            eventInfo.AddEventHandler(target, handler);
        }
    }
}



//GeneratedInternalTypeHelper.g.i.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XamlGeneratedNamespace {
    
    
    /// <summary>
    /// GeneratedInternalTypeHelper
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    public sealed class GeneratedInternalTypeHelper : System.Windows.Markup.InternalTypeHelper {
        
        /// <summary>
        /// CreateInstance
        /// </summary>
        protected override object CreateInstance(System.Type type, System.Globalization.CultureInfo culture) {
            return System.Activator.CreateInstance(type, ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) 
                            | (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.CreateInstance)), null, null, culture);
        }
        
        /// <summary>
        /// GetPropertyValue
        /// </summary>
        protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
            return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
        }
        
        /// <summary>
        /// SetPropertyValue
        /// </summary>
        protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
            propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
        }
        
        /// <summary>
        /// CreateDelegate
        /// </summary>
        protected override System.Delegate CreateDelegate(System.Type delegateType, object target, string handler) {
            return ((System.Delegate)(target.GetType().InvokeMember("_CreateDelegate", (System.Reflection.BindingFlags.InvokeMethod 
                            | (System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance)), null, target, new object[] {
                        delegateType,
                        handler}, null)));
        }
        
        /// <summary>
        /// AddEventHandler
        /// </summary>
        protected override void AddEventHandler(System.Reflection.EventInfo eventInfo, object target, System.Delegate handler) {
            eventInfo.AddEventHandler(target, handler);
        }
    }
}



//Request.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RequestManagement.Server.Controllers {

  /// <summary>Holder for reflection information generated from request.proto</summary>
  public static partial class RequestReflection {

    #region Descriptor
    /// <summary>File descriptor for request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1yZXF1ZXN0LnByb3RvIigKFkdldEFsbEVxdWlwbWVudFJlcXVlc3QSDgoG",
            "ZmlsdGVyGAEgASgJIjgKF0dldEFsbEVxdWlwbWVudFJlc3BvbnNlEh0KCWVx",
            "dWlwbWVudBgBIAMoCzIKLkVxdWlwbWVudCI9ChZDcmVhdGVFcXVpcG1lbnRS",
            "ZXF1ZXN0EgwKBG5hbWUYASABKAkSFQoNbGljZW5zZV9wbGF0ZRgCIAEoCSIl",
            "ChdDcmVhdGVFcXVpcG1lbnRSZXNwb25zZRIKCgJpZBgBIAEoBSJJChZVcGRh",
            "dGVFcXVpcG1lbnRSZXF1ZXN0EgoKAmlkGAEgASgFEgwKBG5hbWUYAiABKAkS",
            "FQoNbGljZW5zZV9wbGF0ZRgDIAEoCSIqChdVcGRhdGVFcXVpcG1lbnRSZXNw",
            "b25zZRIPCgdzdWNjZXNzGAEgASgIIiQKFkRlbGV0ZUVxdWlwbWVudFJlcXVl",
            "c3QSCgoCaWQYASABKAUiKgoXRGVsZXRlRXF1aXBtZW50UmVzcG9uc2USDwoH",
            "c3VjY2VzcxgBIAEoCCI8CglFcXVpcG1lbnQSCgoCaWQYASABKAUSDAoEbmFt",
            "ZRgCIAEoCRIVCg1saWNlbnNlX3BsYXRlGAMgASgJIiYKFEdldEFsbERyaXZl",
            "cnNSZXF1ZXN0Eg4KBmZpbHRlchgBIAEoCSIxChVHZXRBbGxEcml2ZXJzUmVz",
            "cG9uc2USGAoHZHJpdmVycxgBIAMoCzIHLkRyaXZlciIuChNDcmVhdGVEcml2",
            "ZXJSZXF1ZXN0EhcKBmRyaXZlchgBIAEoCzIHLkRyaXZlciIiChRDcmVhdGVE",
            "cml2ZXJSZXNwb25zZRIKCgJpZBgBIAEoBSIuChNVcGRhdGVEcml2ZXJSZXF1",
            "ZXN0EhcKBmRyaXZlchgBIAEoCzIHLkRyaXZlciInChRVcGRhdGVEcml2ZXJS",
            "ZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIiEKE0RlbGV0ZURyaXZlclJlcXVl",
            "c3QSCgoCaWQYASABKAUiJwoURGVsZXRlRHJpdmVyUmVzcG9uc2USDwoHc3Vj",
            "Y2VzcxgBIAEoCCJNCgZEcml2ZXISCgoCaWQYASABKAUSEQoJZnVsbF9uYW1l",
            "GAIgASgJEhIKCnNob3J0X25hbWUYAyABKAkSEAoIcG9zaXRpb24YBCABKAki",
            "KwoZR2V0QWxsRGVmZWN0R3JvdXBzUmVxdWVzdBIOCgZmaWx0ZXIYASABKAki",
            "PwoaR2V0QWxsRGVmZWN0R3JvdXBzUmVzcG9uc2USIQoLZGVmZWN0R3JvdXAY",
            "ASADKAsyDC5EZWZlY3RHcm91cCI9ChhDcmVhdGVEZWZlY3RHcm91cFJlcXVl",
            "c3QSIQoLZGVmZWN0R3JvdXAYASABKAsyDC5EZWZlY3RHcm91cCInChlDcmVh",
            "dGVEZWZlY3RHcm91cFJlc3BvbnNlEgoKAmlkGAEgASgFIj0KGFVwZGF0ZURl",
            "ZmVjdEdyb3VwUmVxdWVzdBIhCgtkZWZlY3RHcm91cBgBIAEoCzIMLkRlZmVj",
            "dEdyb3VwIiwKGVVwZGF0ZURlZmVjdEdyb3VwUmVzcG9uc2USDwoHc3VjY2Vz",
            "cxgBIAEoCCImChhEZWxldGVEZWZlY3RHcm91cFJlcXVlc3QSCgoCaWQYASAB",
            "KAUiLAoZRGVsZXRlRGVmZWN0R3JvdXBSZXNwb25zZRIPCgdzdWNjZXNzGAEg",
            "ASgIIicKC0RlZmVjdEdyb3VwEgoKAmlkGAEgASgFEgwKBG5hbWUYAiABKAki",
            "JgoUR2V0QWxsRGVmZWN0c1JlcXVlc3QSDgoGZmlsdGVyGAEgASgJIjAKFUdl",
            "dEFsbERlZmVjdHNSZXNwb25zZRIXCgZkZWZlY3QYASADKAsyBy5EZWZlY3Qi",
            "LgoTQ3JlYXRlRGVmZWN0UmVxdWVzdBIXCgZkZWZlY3QYASABKAsyBy5EZWZl",
            "Y3QiIgoUQ3JlYXRlRGVmZWN0UmVzcG9uc2USCgoCaWQYASABKAUiLgoTVXBk",
            "YXRlRGVmZWN0UmVxdWVzdBIXCgZkZWZlY3QYASABKAsyBy5EZWZlY3QiJwoU",
            "VXBkYXRlRGVmZWN0UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCIhChNEZWxl",
            "dGVEZWZlY3RSZXF1ZXN0EgoKAmlkGAEgASgFIicKFERlbGV0ZURlZmVjdFJl",
            "c3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiOQoGRGVmZWN0EgoKAmlkGAEgASgF",
            "EgwKBG5hbWUYAiABKAkSFQoNZGVmZWN0R3JvdXBJZBgDIAEoBSIpChdHZXRB",
            "bGxXYXJlaG91c2VzUmVxdWVzdBIOCgZmaWx0ZXIYASABKAkiOQoYR2V0QWxs",
            "V2FyZWhvdXNlc1Jlc3BvbnNlEh0KCXdhcmVob3VzZRgBIAMoCzIKLldhcmVo",
            "b3VzZSI3ChZDcmVhdGVXYXJlaG91c2VSZXF1ZXN0Eh0KCXdhcmVob3VzZRgB",
            "IAEoCzIKLldhcmVob3VzZSIlChdDcmVhdGVXYXJlaG91c2VSZXNwb25zZRIK",
            "CgJpZBgBIAEoBSI3ChZVcGRhdGVXYXJlaG91c2VSZXF1ZXN0Eh0KCXdhcmVo",
            "b3VzZRgBIAEoCzIKLldhcmVob3VzZSIqChdVcGRhdGVXYXJlaG91c2VSZXNw",
            "b25zZRIPCgdzdWNjZXNzGAEgASgIIiQKFkRlbGV0ZVdhcmVob3VzZVJlcXVl",
            "c3QSCgoCaWQYASABKAUiKgoXRGVsZXRlV2FyZWhvdXNlUmVzcG9uc2USDwoH",
            "c3VjY2VzcxgBIAEoCCIlCglXYXJlaG91c2USCgoCaWQYASABKAUSDAoEbmFt",
            "ZRgCIAEoCSIsChpHZXRBbGxOb21lbmNsYXR1cmVzUmVxdWVzdBIOCgZmaWx0",
            "ZXIYASABKAkiQgobR2V0QWxsTm9tZW5jbGF0dXJlc1Jlc3BvbnNlEiMKDG5v",
            "bWVuY2xhdHVyZRgBIAMoCzINLk5vbWVuY2xhdHVyZSJAChlDcmVhdGVOb21l",
            "bmNsYXR1cmVSZXF1ZXN0EiMKDG5vbWVuY2xhdHVyZRgBIAEoCzINLk5vbWVu",
            "Y2xhdHVyZSIoChpDcmVhdGVOb21lbmNsYXR1cmVSZXNwb25zZRIKCgJpZBgB",
            "IAEoBSJAChlVcGRhdGVOb21lbmNsYXR1cmVSZXF1ZXN0EiMKDG5vbWVuY2xh",
            "dHVyZRgBIAEoCzINLk5vbWVuY2xhdHVyZSItChpVcGRhdGVOb21lbmNsYXR1",
            "cmVSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIicKGURlbGV0ZU5vbWVuY2xh",
            "dHVyZVJlcXVlc3QSCgoCaWQYASABKAUiLQoaRGVsZXRlTm9tZW5jbGF0dXJl",
            "UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCJeCgxOb21lbmNsYXR1cmUSCgoC",
            "aWQYASABKAUSDAoEY29kZRgCIAEoCRIMCgRuYW1lGAMgASgJEg8KB2FydGlj",
            "bGUYBCABKAkSFQoNdW5pdE9mTWVhc3VyZRgFIAEoCTKjDQoOUmVxdWVzdFNl",
            "cnZpY2USRAoPR2V0QWxsRXF1aXBtZW50EhcuR2V0QWxsRXF1aXBtZW50UmVx",
            "dWVzdBoYLkdldEFsbEVxdWlwbWVudFJlc3BvbnNlEkQKD0NyZWF0ZUVxdWlw",
            "bWVudBIXLkNyZWF0ZUVxdWlwbWVudFJlcXVlc3QaGC5DcmVhdGVFcXVpcG1l",
            "bnRSZXNwb25zZRJECg9VcGRhdGVFcXVpcG1lbnQSFy5VcGRhdGVFcXVpcG1l",
            "bnRSZXF1ZXN0GhguVXBkYXRlRXF1aXBtZW50UmVzcG9uc2USRAoPRGVsZXRl",
            "RXF1aXBtZW50EhcuRGVsZXRlRXF1aXBtZW50UmVxdWVzdBoYLkRlbGV0ZUVx",
            "dWlwbWVudFJlc3BvbnNlEj4KDUdldEFsbERyaXZlcnMSFS5HZXRBbGxEcml2",
            "ZXJzUmVxdWVzdBoWLkdldEFsbERyaXZlcnNSZXNwb25zZRI7CgxDcmVhdGVE",
            "cml2ZXISFC5DcmVhdGVEcml2ZXJSZXF1ZXN0GhUuQ3JlYXRlRHJpdmVyUmVz",
            "cG9uc2USOwoMVXBkYXRlRHJpdmVyEhQuVXBkYXRlRHJpdmVyUmVxdWVzdBoV",
            "LlVwZGF0ZURyaXZlclJlc3BvbnNlEjsKDERlbGV0ZURyaXZlchIULkRlbGV0",
            "ZURyaXZlclJlcXVlc3QaFS5EZWxldGVEcml2ZXJSZXNwb25zZRJNChJHZXRB",
            "bGxEZWZlY3RHcm91cHMSGi5HZXRBbGxEZWZlY3RHcm91cHNSZXF1ZXN0Ghsu",
            "R2V0QWxsRGVmZWN0R3JvdXBzUmVzcG9uc2USSgoRQ3JlYXRlRGVmZWN0R3Jv",
            "dXASGS5DcmVhdGVEZWZlY3RHcm91cFJlcXVlc3QaGi5DcmVhdGVEZWZlY3RH",
            "cm91cFJlc3BvbnNlEkoKEVVwZGF0ZURlZmVjdEdyb3VwEhkuVXBkYXRlRGVm",
            "ZWN0R3JvdXBSZXF1ZXN0GhouVXBkYXRlRGVmZWN0R3JvdXBSZXNwb25zZRJK",
            "ChFEZWxldGVEZWZlY3RHcm91cBIZLkRlbGV0ZURlZmVjdEdyb3VwUmVxdWVz",
            "dBoaLkRlbGV0ZURlZmVjdEdyb3VwUmVzcG9uc2USPgoNR2V0QWxsRGVmZWN0",
            "cxIVLkdldEFsbERlZmVjdHNSZXF1ZXN0GhYuR2V0QWxsRGVmZWN0c1Jlc3Bv",
            "bnNlEjsKDENyZWF0ZURlZmVjdBIULkNyZWF0ZURlZmVjdFJlcXVlc3QaFS5D",
            "cmVhdGVEZWZlY3RSZXNwb25zZRI7CgxVcGRhdGVEZWZlY3QSFC5VcGRhdGVE",
            "ZWZlY3RSZXF1ZXN0GhUuVXBkYXRlRGVmZWN0UmVzcG9uc2USOwoMRGVsZXRl",
            "RGVmZWN0EhQuRGVsZXRlRGVmZWN0UmVxdWVzdBoVLkRlbGV0ZURlZmVjdFJl",
            "c3BvbnNlEkcKEEdldEFsbFdhcmVob3VzZXMSGC5HZXRBbGxXYXJlaG91c2Vz",
            "UmVxdWVzdBoZLkdldEFsbFdhcmVob3VzZXNSZXNwb25zZRJECg9DcmVhdGVX",
            "YXJlaG91c2USFy5DcmVhdGVXYXJlaG91c2VSZXF1ZXN0GhguQ3JlYXRlV2Fy",
            "ZWhvdXNlUmVzcG9uc2USRAoPVXBkYXRlV2FyZWhvdXNlEhcuVXBkYXRlV2Fy",
            "ZWhvdXNlUmVxdWVzdBoYLlVwZGF0ZVdhcmVob3VzZVJlc3BvbnNlEkQKD0Rl",
            "bGV0ZVdhcmVob3VzZRIXLkRlbGV0ZVdhcmVob3VzZVJlcXVlc3QaGC5EZWxl",
            "dGVXYXJlaG91c2VSZXNwb25zZRJQChNHZXRBbGxOb21lbmNsYXR1cmVzEhsu",
            "R2V0QWxsTm9tZW5jbGF0dXJlc1JlcXVlc3QaHC5HZXRBbGxOb21lbmNsYXR1",
            "cmVzUmVzcG9uc2USTQoSQ3JlYXRlTm9tZW5jbGF0dXJlEhouQ3JlYXRlTm9t",
            "ZW5jbGF0dXJlUmVxdWVzdBobLkNyZWF0ZU5vbWVuY2xhdHVyZVJlc3BvbnNl",
            "Ek0KElVwZGF0ZU5vbWVuY2xhdHVyZRIaLlVwZGF0ZU5vbWVuY2xhdHVyZVJl",
            "cXVlc3QaGy5VcGRhdGVOb21lbmNsYXR1cmVSZXNwb25zZRJNChJEZWxldGVO",
            "b21lbmNsYXR1cmUSGi5EZWxldGVOb21lbmNsYXR1cmVSZXF1ZXN0GhsuRGVs",
            "ZXRlTm9tZW5jbGF0dXJlUmVzcG9uc2VCJ6oCJFJlcXVlc3RNYW5hZ2VtZW50",
            "LlNlcnZlci5Db250cm9sbGVyc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllEquipmentRequest), global::RequestManagement.Server.Controllers.GetAllEquipmentRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllEquipmentResponse), global::RequestManagement.Server.Controllers.GetAllEquipmentResponse.Parser, new[]{ "Equipment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateEquipmentRequest), global::RequestManagement.Server.Controllers.CreateEquipmentRequest.Parser, new[]{ "Name", "LicensePlate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateEquipmentResponse), global::RequestManagement.Server.Controllers.CreateEquipmentResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateEquipmentRequest), global::RequestManagement.Server.Controllers.UpdateEquipmentRequest.Parser, new[]{ "Id", "Name", "LicensePlate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateEquipmentResponse), global::RequestManagement.Server.Controllers.UpdateEquipmentResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteEquipmentRequest), global::RequestManagement.Server.Controllers.DeleteEquipmentRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteEquipmentResponse), global::RequestManagement.Server.Controllers.DeleteEquipmentResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Equipment), global::RequestManagement.Server.Controllers.Equipment.Parser, new[]{ "Id", "Name", "LicensePlate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDriversRequest), global::RequestManagement.Server.Controllers.GetAllDriversRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDriversResponse), global::RequestManagement.Server.Controllers.GetAllDriversResponse.Parser, new[]{ "Drivers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDriverRequest), global::RequestManagement.Server.Controllers.CreateDriverRequest.Parser, new[]{ "Driver" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDriverResponse), global::RequestManagement.Server.Controllers.CreateDriverResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDriverRequest), global::RequestManagement.Server.Controllers.UpdateDriverRequest.Parser, new[]{ "Driver" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDriverResponse), global::RequestManagement.Server.Controllers.UpdateDriverResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDriverRequest), global::RequestManagement.Server.Controllers.DeleteDriverRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDriverResponse), global::RequestManagement.Server.Controllers.DeleteDriverResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Driver), global::RequestManagement.Server.Controllers.Driver.Parser, new[]{ "Id", "FullName", "ShortName", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest), global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse), global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse.Parser, new[]{ "DefectGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDefectGroupRequest), global::RequestManagement.Server.Controllers.CreateDefectGroupRequest.Parser, new[]{ "DefectGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDefectGroupResponse), global::RequestManagement.Server.Controllers.CreateDefectGroupResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest), global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest.Parser, new[]{ "DefectGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse), global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest), global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse), global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DefectGroup), global::RequestManagement.Server.Controllers.DefectGroup.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDefectsRequest), global::RequestManagement.Server.Controllers.GetAllDefectsRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllDefectsResponse), global::RequestManagement.Server.Controllers.GetAllDefectsResponse.Parser, new[]{ "Defect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDefectRequest), global::RequestManagement.Server.Controllers.CreateDefectRequest.Parser, new[]{ "Defect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateDefectResponse), global::RequestManagement.Server.Controllers.CreateDefectResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDefectRequest), global::RequestManagement.Server.Controllers.UpdateDefectRequest.Parser, new[]{ "Defect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateDefectResponse), global::RequestManagement.Server.Controllers.UpdateDefectResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDefectRequest), global::RequestManagement.Server.Controllers.DeleteDefectRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteDefectResponse), global::RequestManagement.Server.Controllers.DeleteDefectResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Defect), global::RequestManagement.Server.Controllers.Defect.Parser, new[]{ "Id", "Name", "DefectGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllWarehousesRequest), global::RequestManagement.Server.Controllers.GetAllWarehousesRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllWarehousesResponse), global::RequestManagement.Server.Controllers.GetAllWarehousesResponse.Parser, new[]{ "Warehouse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateWarehouseRequest), global::RequestManagement.Server.Controllers.CreateWarehouseRequest.Parser, new[]{ "Warehouse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateWarehouseResponse), global::RequestManagement.Server.Controllers.CreateWarehouseResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateWarehouseRequest), global::RequestManagement.Server.Controllers.UpdateWarehouseRequest.Parser, new[]{ "Warehouse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateWarehouseResponse), global::RequestManagement.Server.Controllers.UpdateWarehouseResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteWarehouseRequest), global::RequestManagement.Server.Controllers.DeleteWarehouseRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteWarehouseResponse), global::RequestManagement.Server.Controllers.DeleteWarehouseResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Warehouse), global::RequestManagement.Server.Controllers.Warehouse.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest), global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse), global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse.Parser, new[]{ "Nomenclature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateNomenclatureRequest), global::RequestManagement.Server.Controllers.CreateNomenclatureRequest.Parser, new[]{ "Nomenclature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateNomenclatureResponse), global::RequestManagement.Server.Controllers.CreateNomenclatureResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest), global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest.Parser, new[]{ "Nomenclature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse), global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest), global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse), global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Nomenclature), global::RequestManagement.Server.Controllers.Nomenclature.Parser, new[]{ "Id", "Code", "Name", "Article", "UnitOfMeasure" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Сообщения для оборудования
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllEquipmentRequest : pb::IMessage<GetAllEquipmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllEquipmentRequest> _parser = new pb::MessageParser<GetAllEquipmentRequest>(() => new GetAllEquipmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllEquipmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentRequest(GetAllEquipmentRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentRequest Clone() {
      return new GetAllEquipmentRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllEquipmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllEquipmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllEquipmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllEquipmentResponse : pb::IMessage<GetAllEquipmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllEquipmentResponse> _parser = new pb::MessageParser<GetAllEquipmentResponse>(() => new GetAllEquipmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllEquipmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentResponse(GetAllEquipmentResponse other) : this() {
      equipment_ = other.equipment_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllEquipmentResponse Clone() {
      return new GetAllEquipmentResponse(this);
    }

    /// <summary>Field number for the "equipment" field.</summary>
    public const int EquipmentFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Equipment> _repeated_equipment_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Equipment.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Equipment> equipment_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Equipment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Equipment> Equipment {
      get { return equipment_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllEquipmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllEquipmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!equipment_.Equals(other.equipment_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= equipment_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      equipment_.WriteTo(output, _repeated_equipment_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      equipment_.WriteTo(ref output, _repeated_equipment_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += equipment_.CalculateSize(_repeated_equipment_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllEquipmentResponse other) {
      if (other == null) {
        return;
      }
      equipment_.Add(other.equipment_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            equipment_.AddEntriesFrom(input, _repeated_equipment_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            equipment_.AddEntriesFrom(ref input, _repeated_equipment_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateEquipmentRequest : pb::IMessage<CreateEquipmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEquipmentRequest> _parser = new pb::MessageParser<CreateEquipmentRequest>(() => new CreateEquipmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEquipmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentRequest(CreateEquipmentRequest other) : this() {
      name_ = other.name_;
      licensePlate_ = other.licensePlate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentRequest Clone() {
      return new CreateEquipmentRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license_plate" field.</summary>
    public const int LicensePlateFieldNumber = 2;
    private string licensePlate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LicensePlate {
      get { return licensePlate_; }
      set {
        licensePlate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEquipmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEquipmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (LicensePlate != other.LicensePlate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LicensePlate.Length != 0) hash ^= LicensePlate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LicensePlate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicensePlate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEquipmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LicensePlate.Length != 0) {
        LicensePlate = other.LicensePlate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateEquipmentResponse : pb::IMessage<CreateEquipmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEquipmentResponse> _parser = new pb::MessageParser<CreateEquipmentResponse>(() => new CreateEquipmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEquipmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentResponse(CreateEquipmentResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEquipmentResponse Clone() {
      return new CreateEquipmentResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEquipmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEquipmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEquipmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateEquipmentRequest : pb::IMessage<UpdateEquipmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateEquipmentRequest> _parser = new pb::MessageParser<UpdateEquipmentRequest>(() => new UpdateEquipmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateEquipmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentRequest(UpdateEquipmentRequest other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      licensePlate_ = other.licensePlate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentRequest Clone() {
      return new UpdateEquipmentRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license_plate" field.</summary>
    public const int LicensePlateFieldNumber = 3;
    private string licensePlate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LicensePlate {
      get { return licensePlate_; }
      set {
        licensePlate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateEquipmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateEquipmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (LicensePlate != other.LicensePlate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LicensePlate.Length != 0) hash ^= LicensePlate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LicensePlate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicensePlate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateEquipmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LicensePlate.Length != 0) {
        LicensePlate = other.LicensePlate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateEquipmentResponse : pb::IMessage<UpdateEquipmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateEquipmentResponse> _parser = new pb::MessageParser<UpdateEquipmentResponse>(() => new UpdateEquipmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateEquipmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentResponse(UpdateEquipmentResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateEquipmentResponse Clone() {
      return new UpdateEquipmentResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateEquipmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateEquipmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateEquipmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteEquipmentRequest : pb::IMessage<DeleteEquipmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteEquipmentRequest> _parser = new pb::MessageParser<DeleteEquipmentRequest>(() => new DeleteEquipmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteEquipmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentRequest(DeleteEquipmentRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentRequest Clone() {
      return new DeleteEquipmentRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteEquipmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteEquipmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteEquipmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteEquipmentResponse : pb::IMessage<DeleteEquipmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteEquipmentResponse> _parser = new pb::MessageParser<DeleteEquipmentResponse>(() => new DeleteEquipmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteEquipmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentResponse(DeleteEquipmentResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteEquipmentResponse Clone() {
      return new DeleteEquipmentResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteEquipmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteEquipmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteEquipmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Equipment : pb::IMessage<Equipment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Equipment> _parser = new pb::MessageParser<Equipment>(() => new Equipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Equipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment(Equipment other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      licensePlate_ = other.licensePlate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment Clone() {
      return new Equipment(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license_plate" field.</summary>
    public const int LicensePlateFieldNumber = 3;
    private string licensePlate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LicensePlate {
      get { return licensePlate_; }
      set {
        licensePlate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Equipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Equipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (LicensePlate != other.LicensePlate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LicensePlate.Length != 0) hash ^= LicensePlate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LicensePlate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LicensePlate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LicensePlate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicensePlate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Equipment other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LicensePlate.Length != 0) {
        LicensePlate = other.LicensePlate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            LicensePlate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDriversRequest : pb::IMessage<GetAllDriversRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDriversRequest> _parser = new pb::MessageParser<GetAllDriversRequest>(() => new GetAllDriversRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDriversRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversRequest(GetAllDriversRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversRequest Clone() {
      return new GetAllDriversRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    /// <summary>
    /// Фильтр для поиска по имени или должности
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDriversRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDriversRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDriversRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDriversResponse : pb::IMessage<GetAllDriversResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDriversResponse> _parser = new pb::MessageParser<GetAllDriversResponse>(() => new GetAllDriversResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDriversResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversResponse(GetAllDriversResponse other) : this() {
      drivers_ = other.drivers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDriversResponse Clone() {
      return new GetAllDriversResponse(this);
    }

    /// <summary>Field number for the "drivers" field.</summary>
    public const int DriversFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Driver> _repeated_drivers_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Driver.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Driver> drivers_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Driver>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Driver> Drivers {
      get { return drivers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDriversResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDriversResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!drivers_.Equals(other.drivers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= drivers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      drivers_.WriteTo(output, _repeated_drivers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      drivers_.WriteTo(ref output, _repeated_drivers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += drivers_.CalculateSize(_repeated_drivers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDriversResponse other) {
      if (other == null) {
        return;
      }
      drivers_.Add(other.drivers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            drivers_.AddEntriesFrom(input, _repeated_drivers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            drivers_.AddEntriesFrom(ref input, _repeated_drivers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDriverRequest : pb::IMessage<CreateDriverRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDriverRequest> _parser = new pb::MessageParser<CreateDriverRequest>(() => new CreateDriverRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDriverRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverRequest(CreateDriverRequest other) : this() {
      driver_ = other.driver_ != null ? other.driver_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverRequest Clone() {
      return new CreateDriverRequest(this);
    }

    /// <summary>Field number for the "driver" field.</summary>
    public const int DriverFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Driver driver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Driver Driver {
      get { return driver_; }
      set {
        driver_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDriverRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDriverRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Driver, other.Driver)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (driver_ != null) hash ^= Driver.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (driver_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Driver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (driver_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Driver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (driver_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Driver);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDriverRequest other) {
      if (other == null) {
        return;
      }
      if (other.driver_ != null) {
        if (driver_ == null) {
          Driver = new global::RequestManagement.Server.Controllers.Driver();
        }
        Driver.MergeFrom(other.Driver);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (driver_ == null) {
              Driver = new global::RequestManagement.Server.Controllers.Driver();
            }
            input.ReadMessage(Driver);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (driver_ == null) {
              Driver = new global::RequestManagement.Server.Controllers.Driver();
            }
            input.ReadMessage(Driver);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDriverResponse : pb::IMessage<CreateDriverResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDriverResponse> _parser = new pb::MessageParser<CreateDriverResponse>(() => new CreateDriverResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDriverResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverResponse(CreateDriverResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDriverResponse Clone() {
      return new CreateDriverResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID созданного водителя
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDriverResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDriverResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDriverResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDriverRequest : pb::IMessage<UpdateDriverRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDriverRequest> _parser = new pb::MessageParser<UpdateDriverRequest>(() => new UpdateDriverRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDriverRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverRequest(UpdateDriverRequest other) : this() {
      driver_ = other.driver_ != null ? other.driver_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverRequest Clone() {
      return new UpdateDriverRequest(this);
    }

    /// <summary>Field number for the "driver" field.</summary>
    public const int DriverFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Driver driver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Driver Driver {
      get { return driver_; }
      set {
        driver_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDriverRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDriverRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Driver, other.Driver)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (driver_ != null) hash ^= Driver.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (driver_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Driver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (driver_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Driver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (driver_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Driver);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDriverRequest other) {
      if (other == null) {
        return;
      }
      if (other.driver_ != null) {
        if (driver_ == null) {
          Driver = new global::RequestManagement.Server.Controllers.Driver();
        }
        Driver.MergeFrom(other.Driver);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (driver_ == null) {
              Driver = new global::RequestManagement.Server.Controllers.Driver();
            }
            input.ReadMessage(Driver);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (driver_ == null) {
              Driver = new global::RequestManagement.Server.Controllers.Driver();
            }
            input.ReadMessage(Driver);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDriverResponse : pb::IMessage<UpdateDriverResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDriverResponse> _parser = new pb::MessageParser<UpdateDriverResponse>(() => new UpdateDriverResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDriverResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverResponse(UpdateDriverResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDriverResponse Clone() {
      return new UpdateDriverResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDriverResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDriverResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDriverResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDriverRequest : pb::IMessage<DeleteDriverRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDriverRequest> _parser = new pb::MessageParser<DeleteDriverRequest>(() => new DeleteDriverRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDriverRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverRequest(DeleteDriverRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverRequest Clone() {
      return new DeleteDriverRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDriverRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDriverRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDriverRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDriverResponse : pb::IMessage<DeleteDriverResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDriverResponse> _parser = new pb::MessageParser<DeleteDriverResponse>(() => new DeleteDriverResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDriverResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverResponse(DeleteDriverResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDriverResponse Clone() {
      return new DeleteDriverResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDriverResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDriverResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDriverResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Driver : pb::IMessage<Driver>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Driver> _parser = new pb::MessageParser<Driver>(() => new Driver());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Driver> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Driver() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Driver(Driver other) : this() {
      id_ = other.id_;
      fullName_ = other.fullName_;
      shortName_ = other.shortName_;
      position_ = other.position_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Driver Clone() {
      return new Driver(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "full_name" field.</summary>
    public const int FullNameFieldNumber = 2;
    private string fullName_ = "";
    /// <summary>
    /// Полное ФИО
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "short_name" field.</summary>
    public const int ShortNameFieldNumber = 3;
    private string shortName_ = "";
    /// <summary>
    /// Фамилия с инициалами
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShortName {
      get { return shortName_; }
      set {
        shortName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private string position_ = "";
    /// <summary>
    /// Должность
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Position {
      get { return position_; }
      set {
        position_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Driver);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Driver other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FullName != other.FullName) return false;
      if (ShortName != other.ShortName) return false;
      if (Position != other.Position) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (ShortName.Length != 0) hash ^= ShortName.GetHashCode();
      if (Position.Length != 0) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FullName);
      }
      if (ShortName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ShortName);
      }
      if (Position.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FullName);
      }
      if (ShortName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ShortName);
      }
      if (Position.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (ShortName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortName);
      }
      if (Position.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Driver other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.ShortName.Length != 0) {
        ShortName = other.ShortName;
      }
      if (other.Position.Length != 0) {
        Position = other.Position;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FullName = input.ReadString();
            break;
          }
          case 26: {
            ShortName = input.ReadString();
            break;
          }
          case 34: {
            Position = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FullName = input.ReadString();
            break;
          }
          case 26: {
            ShortName = input.ReadString();
            break;
          }
          case 34: {
            Position = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDefectGroupsRequest : pb::IMessage<GetAllDefectGroupsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDefectGroupsRequest> _parser = new pb::MessageParser<GetAllDefectGroupsRequest>(() => new GetAllDefectGroupsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDefectGroupsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsRequest(GetAllDefectGroupsRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsRequest Clone() {
      return new GetAllDefectGroupsRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDefectGroupsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDefectGroupsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDefectGroupsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDefectGroupsResponse : pb::IMessage<GetAllDefectGroupsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDefectGroupsResponse> _parser = new pb::MessageParser<GetAllDefectGroupsResponse>(() => new GetAllDefectGroupsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDefectGroupsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsResponse(GetAllDefectGroupsResponse other) : this() {
      defectGroup_ = other.defectGroup_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectGroupsResponse Clone() {
      return new GetAllDefectGroupsResponse(this);
    }

    /// <summary>Field number for the "defectGroup" field.</summary>
    public const int DefectGroupFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.DefectGroup> _repeated_defectGroup_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.DefectGroup.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.DefectGroup> defectGroup_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.DefectGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.DefectGroup> DefectGroup {
      get { return defectGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDefectGroupsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDefectGroupsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!defectGroup_.Equals(other.defectGroup_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= defectGroup_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      defectGroup_.WriteTo(output, _repeated_defectGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      defectGroup_.WriteTo(ref output, _repeated_defectGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += defectGroup_.CalculateSize(_repeated_defectGroup_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDefectGroupsResponse other) {
      if (other == null) {
        return;
      }
      defectGroup_.Add(other.defectGroup_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            defectGroup_.AddEntriesFrom(input, _repeated_defectGroup_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            defectGroup_.AddEntriesFrom(ref input, _repeated_defectGroup_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDefectGroupRequest : pb::IMessage<CreateDefectGroupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDefectGroupRequest> _parser = new pb::MessageParser<CreateDefectGroupRequest>(() => new CreateDefectGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDefectGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupRequest(CreateDefectGroupRequest other) : this() {
      defectGroup_ = other.defectGroup_ != null ? other.defectGroup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupRequest Clone() {
      return new CreateDefectGroupRequest(this);
    }

    /// <summary>Field number for the "defectGroup" field.</summary>
    public const int DefectGroupFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.DefectGroup defectGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.DefectGroup DefectGroup {
      get { return defectGroup_; }
      set {
        defectGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDefectGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDefectGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DefectGroup, other.DefectGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (defectGroup_ != null) hash ^= DefectGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defectGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefectGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defectGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefectGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (defectGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefectGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDefectGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.defectGroup_ != null) {
        if (defectGroup_ == null) {
          DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
        }
        DefectGroup.MergeFrom(other.DefectGroup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defectGroup_ == null) {
              DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
            }
            input.ReadMessage(DefectGroup);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defectGroup_ == null) {
              DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
            }
            input.ReadMessage(DefectGroup);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDefectGroupResponse : pb::IMessage<CreateDefectGroupResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDefectGroupResponse> _parser = new pb::MessageParser<CreateDefectGroupResponse>(() => new CreateDefectGroupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDefectGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupResponse(CreateDefectGroupResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectGroupResponse Clone() {
      return new CreateDefectGroupResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDefectGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDefectGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDefectGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDefectGroupRequest : pb::IMessage<UpdateDefectGroupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDefectGroupRequest> _parser = new pb::MessageParser<UpdateDefectGroupRequest>(() => new UpdateDefectGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDefectGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupRequest(UpdateDefectGroupRequest other) : this() {
      defectGroup_ = other.defectGroup_ != null ? other.defectGroup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupRequest Clone() {
      return new UpdateDefectGroupRequest(this);
    }

    /// <summary>Field number for the "defectGroup" field.</summary>
    public const int DefectGroupFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.DefectGroup defectGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.DefectGroup DefectGroup {
      get { return defectGroup_; }
      set {
        defectGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDefectGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDefectGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DefectGroup, other.DefectGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (defectGroup_ != null) hash ^= DefectGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defectGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefectGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defectGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefectGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (defectGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefectGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDefectGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.defectGroup_ != null) {
        if (defectGroup_ == null) {
          DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
        }
        DefectGroup.MergeFrom(other.DefectGroup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defectGroup_ == null) {
              DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
            }
            input.ReadMessage(DefectGroup);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defectGroup_ == null) {
              DefectGroup = new global::RequestManagement.Server.Controllers.DefectGroup();
            }
            input.ReadMessage(DefectGroup);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDefectGroupResponse : pb::IMessage<UpdateDefectGroupResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDefectGroupResponse> _parser = new pb::MessageParser<UpdateDefectGroupResponse>(() => new UpdateDefectGroupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDefectGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupResponse(UpdateDefectGroupResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectGroupResponse Clone() {
      return new UpdateDefectGroupResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDefectGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDefectGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDefectGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDefectGroupRequest : pb::IMessage<DeleteDefectGroupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDefectGroupRequest> _parser = new pb::MessageParser<DeleteDefectGroupRequest>(() => new DeleteDefectGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDefectGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupRequest(DeleteDefectGroupRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupRequest Clone() {
      return new DeleteDefectGroupRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDefectGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDefectGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDefectGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDefectGroupResponse : pb::IMessage<DeleteDefectGroupResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDefectGroupResponse> _parser = new pb::MessageParser<DeleteDefectGroupResponse>(() => new DeleteDefectGroupResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDefectGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupResponse(DeleteDefectGroupResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectGroupResponse Clone() {
      return new DeleteDefectGroupResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDefectGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDefectGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDefectGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DefectGroup : pb::IMessage<DefectGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DefectGroup> _parser = new pb::MessageParser<DefectGroup>(() => new DefectGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DefectGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectGroup(DefectGroup other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectGroup Clone() {
      return new DefectGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DefectGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DefectGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DefectGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDefectsRequest : pb::IMessage<GetAllDefectsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDefectsRequest> _parser = new pb::MessageParser<GetAllDefectsRequest>(() => new GetAllDefectsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDefectsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsRequest(GetAllDefectsRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsRequest Clone() {
      return new GetAllDefectsRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDefectsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDefectsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDefectsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllDefectsResponse : pb::IMessage<GetAllDefectsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllDefectsResponse> _parser = new pb::MessageParser<GetAllDefectsResponse>(() => new GetAllDefectsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllDefectsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsResponse(GetAllDefectsResponse other) : this() {
      defect_ = other.defect_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllDefectsResponse Clone() {
      return new GetAllDefectsResponse(this);
    }

    /// <summary>Field number for the "defect" field.</summary>
    public const int DefectFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Defect> _repeated_defect_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Defect.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Defect> defect_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Defect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Defect> Defect {
      get { return defect_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllDefectsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllDefectsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!defect_.Equals(other.defect_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= defect_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      defect_.WriteTo(output, _repeated_defect_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      defect_.WriteTo(ref output, _repeated_defect_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += defect_.CalculateSize(_repeated_defect_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllDefectsResponse other) {
      if (other == null) {
        return;
      }
      defect_.Add(other.defect_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            defect_.AddEntriesFrom(input, _repeated_defect_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            defect_.AddEntriesFrom(ref input, _repeated_defect_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDefectRequest : pb::IMessage<CreateDefectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDefectRequest> _parser = new pb::MessageParser<CreateDefectRequest>(() => new CreateDefectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDefectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectRequest(CreateDefectRequest other) : this() {
      defect_ = other.defect_ != null ? other.defect_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectRequest Clone() {
      return new CreateDefectRequest(this);
    }

    /// <summary>Field number for the "defect" field.</summary>
    public const int DefectFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Defect defect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Defect Defect {
      get { return defect_; }
      set {
        defect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDefectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDefectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Defect, other.Defect)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (defect_ != null) hash ^= Defect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Defect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Defect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (defect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Defect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDefectRequest other) {
      if (other == null) {
        return;
      }
      if (other.defect_ != null) {
        if (defect_ == null) {
          Defect = new global::RequestManagement.Server.Controllers.Defect();
        }
        Defect.MergeFrom(other.Defect);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defect_ == null) {
              Defect = new global::RequestManagement.Server.Controllers.Defect();
            }
            input.ReadMessage(Defect);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defect_ == null) {
              Defect = new global::RequestManagement.Server.Controllers.Defect();
            }
            input.ReadMessage(Defect);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDefectResponse : pb::IMessage<CreateDefectResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDefectResponse> _parser = new pb::MessageParser<CreateDefectResponse>(() => new CreateDefectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDefectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectResponse(CreateDefectResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDefectResponse Clone() {
      return new CreateDefectResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDefectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDefectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDefectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDefectRequest : pb::IMessage<UpdateDefectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDefectRequest> _parser = new pb::MessageParser<UpdateDefectRequest>(() => new UpdateDefectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDefectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectRequest(UpdateDefectRequest other) : this() {
      defect_ = other.defect_ != null ? other.defect_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectRequest Clone() {
      return new UpdateDefectRequest(this);
    }

    /// <summary>Field number for the "defect" field.</summary>
    public const int DefectFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Defect defect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Defect Defect {
      get { return defect_; }
      set {
        defect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDefectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDefectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Defect, other.Defect)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (defect_ != null) hash ^= Defect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Defect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Defect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (defect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Defect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDefectRequest other) {
      if (other == null) {
        return;
      }
      if (other.defect_ != null) {
        if (defect_ == null) {
          Defect = new global::RequestManagement.Server.Controllers.Defect();
        }
        Defect.MergeFrom(other.Defect);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defect_ == null) {
              Defect = new global::RequestManagement.Server.Controllers.Defect();
            }
            input.ReadMessage(Defect);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defect_ == null) {
              Defect = new global::RequestManagement.Server.Controllers.Defect();
            }
            input.ReadMessage(Defect);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDefectResponse : pb::IMessage<UpdateDefectResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDefectResponse> _parser = new pb::MessageParser<UpdateDefectResponse>(() => new UpdateDefectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDefectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectResponse(UpdateDefectResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDefectResponse Clone() {
      return new UpdateDefectResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDefectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDefectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDefectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDefectRequest : pb::IMessage<DeleteDefectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDefectRequest> _parser = new pb::MessageParser<DeleteDefectRequest>(() => new DeleteDefectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDefectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectRequest(DeleteDefectRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectRequest Clone() {
      return new DeleteDefectRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDefectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDefectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDefectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDefectResponse : pb::IMessage<DeleteDefectResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDefectResponse> _parser = new pb::MessageParser<DeleteDefectResponse>(() => new DeleteDefectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDefectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectResponse(DeleteDefectResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDefectResponse Clone() {
      return new DeleteDefectResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDefectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDefectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDefectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Defect : pb::IMessage<Defect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Defect> _parser = new pb::MessageParser<Defect>(() => new Defect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Defect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect(Defect other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      defectGroupId_ = other.defectGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect Clone() {
      return new Defect(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "defectGroupId" field.</summary>
    public const int DefectGroupIdFieldNumber = 3;
    private int defectGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefectGroupId {
      get { return defectGroupId_; }
      set {
        defectGroupId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Defect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Defect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (DefectGroupId != other.DefectGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DefectGroupId != 0) hash ^= DefectGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DefectGroupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefectGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DefectGroupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefectGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DefectGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefectGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Defect other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DefectGroupId != 0) {
        DefectGroupId = other.DefectGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DefectGroupId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DefectGroupId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllWarehousesRequest : pb::IMessage<GetAllWarehousesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllWarehousesRequest> _parser = new pb::MessageParser<GetAllWarehousesRequest>(() => new GetAllWarehousesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllWarehousesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesRequest(GetAllWarehousesRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesRequest Clone() {
      return new GetAllWarehousesRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllWarehousesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllWarehousesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllWarehousesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllWarehousesResponse : pb::IMessage<GetAllWarehousesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllWarehousesResponse> _parser = new pb::MessageParser<GetAllWarehousesResponse>(() => new GetAllWarehousesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllWarehousesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesResponse(GetAllWarehousesResponse other) : this() {
      warehouse_ = other.warehouse_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllWarehousesResponse Clone() {
      return new GetAllWarehousesResponse(this);
    }

    /// <summary>Field number for the "warehouse" field.</summary>
    public const int WarehouseFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Warehouse> _repeated_warehouse_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Warehouse.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Warehouse> warehouse_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Warehouse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Warehouse> Warehouse {
      get { return warehouse_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllWarehousesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllWarehousesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!warehouse_.Equals(other.warehouse_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= warehouse_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      warehouse_.WriteTo(output, _repeated_warehouse_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      warehouse_.WriteTo(ref output, _repeated_warehouse_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += warehouse_.CalculateSize(_repeated_warehouse_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllWarehousesResponse other) {
      if (other == null) {
        return;
      }
      warehouse_.Add(other.warehouse_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            warehouse_.AddEntriesFrom(input, _repeated_warehouse_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            warehouse_.AddEntriesFrom(ref input, _repeated_warehouse_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateWarehouseRequest : pb::IMessage<CreateWarehouseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateWarehouseRequest> _parser = new pb::MessageParser<CreateWarehouseRequest>(() => new CreateWarehouseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateWarehouseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseRequest(CreateWarehouseRequest other) : this() {
      warehouse_ = other.warehouse_ != null ? other.warehouse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseRequest Clone() {
      return new CreateWarehouseRequest(this);
    }

    /// <summary>Field number for the "warehouse" field.</summary>
    public const int WarehouseFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Warehouse warehouse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Warehouse Warehouse {
      get { return warehouse_; }
      set {
        warehouse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateWarehouseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateWarehouseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Warehouse, other.Warehouse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (warehouse_ != null) hash ^= Warehouse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (warehouse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Warehouse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (warehouse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Warehouse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (warehouse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Warehouse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateWarehouseRequest other) {
      if (other == null) {
        return;
      }
      if (other.warehouse_ != null) {
        if (warehouse_ == null) {
          Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
        }
        Warehouse.MergeFrom(other.Warehouse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (warehouse_ == null) {
              Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
            }
            input.ReadMessage(Warehouse);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (warehouse_ == null) {
              Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
            }
            input.ReadMessage(Warehouse);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateWarehouseResponse : pb::IMessage<CreateWarehouseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateWarehouseResponse> _parser = new pb::MessageParser<CreateWarehouseResponse>(() => new CreateWarehouseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateWarehouseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseResponse(CreateWarehouseResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateWarehouseResponse Clone() {
      return new CreateWarehouseResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateWarehouseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateWarehouseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateWarehouseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateWarehouseRequest : pb::IMessage<UpdateWarehouseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateWarehouseRequest> _parser = new pb::MessageParser<UpdateWarehouseRequest>(() => new UpdateWarehouseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateWarehouseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseRequest(UpdateWarehouseRequest other) : this() {
      warehouse_ = other.warehouse_ != null ? other.warehouse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseRequest Clone() {
      return new UpdateWarehouseRequest(this);
    }

    /// <summary>Field number for the "warehouse" field.</summary>
    public const int WarehouseFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Warehouse warehouse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Warehouse Warehouse {
      get { return warehouse_; }
      set {
        warehouse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateWarehouseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateWarehouseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Warehouse, other.Warehouse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (warehouse_ != null) hash ^= Warehouse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (warehouse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Warehouse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (warehouse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Warehouse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (warehouse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Warehouse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateWarehouseRequest other) {
      if (other == null) {
        return;
      }
      if (other.warehouse_ != null) {
        if (warehouse_ == null) {
          Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
        }
        Warehouse.MergeFrom(other.Warehouse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (warehouse_ == null) {
              Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
            }
            input.ReadMessage(Warehouse);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (warehouse_ == null) {
              Warehouse = new global::RequestManagement.Server.Controllers.Warehouse();
            }
            input.ReadMessage(Warehouse);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateWarehouseResponse : pb::IMessage<UpdateWarehouseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateWarehouseResponse> _parser = new pb::MessageParser<UpdateWarehouseResponse>(() => new UpdateWarehouseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateWarehouseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseResponse(UpdateWarehouseResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateWarehouseResponse Clone() {
      return new UpdateWarehouseResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateWarehouseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateWarehouseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateWarehouseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteWarehouseRequest : pb::IMessage<DeleteWarehouseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteWarehouseRequest> _parser = new pb::MessageParser<DeleteWarehouseRequest>(() => new DeleteWarehouseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteWarehouseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseRequest(DeleteWarehouseRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseRequest Clone() {
      return new DeleteWarehouseRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteWarehouseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteWarehouseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteWarehouseRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteWarehouseResponse : pb::IMessage<DeleteWarehouseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteWarehouseResponse> _parser = new pb::MessageParser<DeleteWarehouseResponse>(() => new DeleteWarehouseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteWarehouseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseResponse(DeleteWarehouseResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWarehouseResponse Clone() {
      return new DeleteWarehouseResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteWarehouseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteWarehouseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteWarehouseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Warehouse : pb::IMessage<Warehouse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Warehouse> _parser = new pb::MessageParser<Warehouse>(() => new Warehouse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Warehouse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Warehouse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Warehouse(Warehouse other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Warehouse Clone() {
      return new Warehouse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Warehouse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Warehouse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Warehouse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllNomenclaturesRequest : pb::IMessage<GetAllNomenclaturesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllNomenclaturesRequest> _parser = new pb::MessageParser<GetAllNomenclaturesRequest>(() => new GetAllNomenclaturesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllNomenclaturesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesRequest(GetAllNomenclaturesRequest other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesRequest Clone() {
      return new GetAllNomenclaturesRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllNomenclaturesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllNomenclaturesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllNomenclaturesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllNomenclaturesResponse : pb::IMessage<GetAllNomenclaturesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllNomenclaturesResponse> _parser = new pb::MessageParser<GetAllNomenclaturesResponse>(() => new GetAllNomenclaturesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllNomenclaturesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesResponse(GetAllNomenclaturesResponse other) : this() {
      nomenclature_ = other.nomenclature_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllNomenclaturesResponse Clone() {
      return new GetAllNomenclaturesResponse(this);
    }

    /// <summary>Field number for the "nomenclature" field.</summary>
    public const int NomenclatureFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Nomenclature> _repeated_nomenclature_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Nomenclature.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Nomenclature> nomenclature_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Nomenclature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Nomenclature> Nomenclature {
      get { return nomenclature_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllNomenclaturesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllNomenclaturesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nomenclature_.Equals(other.nomenclature_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nomenclature_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      nomenclature_.WriteTo(output, _repeated_nomenclature_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      nomenclature_.WriteTo(ref output, _repeated_nomenclature_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += nomenclature_.CalculateSize(_repeated_nomenclature_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllNomenclaturesResponse other) {
      if (other == null) {
        return;
      }
      nomenclature_.Add(other.nomenclature_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nomenclature_.AddEntriesFrom(input, _repeated_nomenclature_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            nomenclature_.AddEntriesFrom(ref input, _repeated_nomenclature_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateNomenclatureRequest : pb::IMessage<CreateNomenclatureRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateNomenclatureRequest> _parser = new pb::MessageParser<CreateNomenclatureRequest>(() => new CreateNomenclatureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateNomenclatureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureRequest(CreateNomenclatureRequest other) : this() {
      nomenclature_ = other.nomenclature_ != null ? other.nomenclature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureRequest Clone() {
      return new CreateNomenclatureRequest(this);
    }

    /// <summary>Field number for the "nomenclature" field.</summary>
    public const int NomenclatureFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Nomenclature nomenclature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Nomenclature Nomenclature {
      get { return nomenclature_; }
      set {
        nomenclature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateNomenclatureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateNomenclatureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Nomenclature, other.Nomenclature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nomenclature_ != null) hash ^= Nomenclature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nomenclature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nomenclature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nomenclature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nomenclature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateNomenclatureRequest other) {
      if (other == null) {
        return;
      }
      if (other.nomenclature_ != null) {
        if (nomenclature_ == null) {
          Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
        }
        Nomenclature.MergeFrom(other.Nomenclature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateNomenclatureResponse : pb::IMessage<CreateNomenclatureResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateNomenclatureResponse> _parser = new pb::MessageParser<CreateNomenclatureResponse>(() => new CreateNomenclatureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateNomenclatureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureResponse(CreateNomenclatureResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateNomenclatureResponse Clone() {
      return new CreateNomenclatureResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateNomenclatureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateNomenclatureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateNomenclatureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateNomenclatureRequest : pb::IMessage<UpdateNomenclatureRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateNomenclatureRequest> _parser = new pb::MessageParser<UpdateNomenclatureRequest>(() => new UpdateNomenclatureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateNomenclatureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureRequest(UpdateNomenclatureRequest other) : this() {
      nomenclature_ = other.nomenclature_ != null ? other.nomenclature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureRequest Clone() {
      return new UpdateNomenclatureRequest(this);
    }

    /// <summary>Field number for the "nomenclature" field.</summary>
    public const int NomenclatureFieldNumber = 1;
    private global::RequestManagement.Server.Controllers.Nomenclature nomenclature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.Nomenclature Nomenclature {
      get { return nomenclature_; }
      set {
        nomenclature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateNomenclatureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateNomenclatureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Nomenclature, other.Nomenclature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nomenclature_ != null) hash ^= Nomenclature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nomenclature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nomenclature_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nomenclature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nomenclature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateNomenclatureRequest other) {
      if (other == null) {
        return;
      }
      if (other.nomenclature_ != null) {
        if (nomenclature_ == null) {
          Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
        }
        Nomenclature.MergeFrom(other.Nomenclature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.Nomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateNomenclatureResponse : pb::IMessage<UpdateNomenclatureResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateNomenclatureResponse> _parser = new pb::MessageParser<UpdateNomenclatureResponse>(() => new UpdateNomenclatureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateNomenclatureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureResponse(UpdateNomenclatureResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateNomenclatureResponse Clone() {
      return new UpdateNomenclatureResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateNomenclatureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateNomenclatureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateNomenclatureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteNomenclatureRequest : pb::IMessage<DeleteNomenclatureRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteNomenclatureRequest> _parser = new pb::MessageParser<DeleteNomenclatureRequest>(() => new DeleteNomenclatureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteNomenclatureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureRequest(DeleteNomenclatureRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureRequest Clone() {
      return new DeleteNomenclatureRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteNomenclatureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteNomenclatureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteNomenclatureRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteNomenclatureResponse : pb::IMessage<DeleteNomenclatureResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteNomenclatureResponse> _parser = new pb::MessageParser<DeleteNomenclatureResponse>(() => new DeleteNomenclatureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteNomenclatureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureResponse(DeleteNomenclatureResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteNomenclatureResponse Clone() {
      return new DeleteNomenclatureResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteNomenclatureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteNomenclatureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteNomenclatureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Nomenclature : pb::IMessage<Nomenclature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Nomenclature> _parser = new pb::MessageParser<Nomenclature>(() => new Nomenclature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Nomenclature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Nomenclature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Nomenclature(Nomenclature other) : this() {
      id_ = other.id_;
      code_ = other.code_;
      name_ = other.name_;
      article_ = other.article_;
      unitOfMeasure_ = other.unitOfMeasure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Nomenclature Clone() {
      return new Nomenclature(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "article" field.</summary>
    public const int ArticleFieldNumber = 4;
    private string article_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Article {
      get { return article_; }
      set {
        article_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unitOfMeasure" field.</summary>
    public const int UnitOfMeasureFieldNumber = 5;
    private string unitOfMeasure_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnitOfMeasure {
      get { return unitOfMeasure_; }
      set {
        unitOfMeasure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Nomenclature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Nomenclature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Code != other.Code) return false;
      if (Name != other.Name) return false;
      if (Article != other.Article) return false;
      if (UnitOfMeasure != other.UnitOfMeasure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Article.Length != 0) hash ^= Article.GetHashCode();
      if (UnitOfMeasure.Length != 0) hash ^= UnitOfMeasure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Article.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Article.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Article.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Nomenclature other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Article.Length != 0) {
        Article = other.Article;
      }
      if (other.UnitOfMeasure.Length != 0) {
        UnitOfMeasure = other.UnitOfMeasure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Article = input.ReadString();
            break;
          }
          case 42: {
            UnitOfMeasure = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Article = input.ReadString();
            break;
          }
          case 42: {
            UnitOfMeasure = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code


//RequestGrpc.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: request.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RequestManagement.Server.Controllers {
  public static partial class RequestService
  {
    static readonly string __ServiceName = "RequestService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllEquipmentRequest> __Marshaller_GetAllEquipmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllEquipmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllEquipmentResponse> __Marshaller_GetAllEquipmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllEquipmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateEquipmentRequest> __Marshaller_CreateEquipmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateEquipmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateEquipmentResponse> __Marshaller_CreateEquipmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateEquipmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateEquipmentRequest> __Marshaller_UpdateEquipmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateEquipmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateEquipmentResponse> __Marshaller_UpdateEquipmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateEquipmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteEquipmentRequest> __Marshaller_DeleteEquipmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteEquipmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteEquipmentResponse> __Marshaller_DeleteEquipmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteEquipmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDriversRequest> __Marshaller_GetAllDriversRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDriversRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDriversResponse> __Marshaller_GetAllDriversResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDriversResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDriverRequest> __Marshaller_CreateDriverRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDriverRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDriverResponse> __Marshaller_CreateDriverResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDriverResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDriverRequest> __Marshaller_UpdateDriverRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDriverRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDriverResponse> __Marshaller_UpdateDriverResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDriverResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDriverRequest> __Marshaller_DeleteDriverRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDriverRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDriverResponse> __Marshaller_DeleteDriverResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDriverResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest> __Marshaller_GetAllDefectGroupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse> __Marshaller_GetAllDefectGroupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDefectGroupRequest> __Marshaller_CreateDefectGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDefectGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDefectGroupResponse> __Marshaller_CreateDefectGroupResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDefectGroupResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest> __Marshaller_UpdateDefectGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse> __Marshaller_UpdateDefectGroupResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest> __Marshaller_DeleteDefectGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse> __Marshaller_DeleteDefectGroupResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDefectsRequest> __Marshaller_GetAllDefectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDefectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllDefectsResponse> __Marshaller_GetAllDefectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllDefectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDefectRequest> __Marshaller_CreateDefectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDefectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateDefectResponse> __Marshaller_CreateDefectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateDefectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDefectRequest> __Marshaller_UpdateDefectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDefectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateDefectResponse> __Marshaller_UpdateDefectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateDefectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDefectRequest> __Marshaller_DeleteDefectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDefectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteDefectResponse> __Marshaller_DeleteDefectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteDefectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllWarehousesRequest> __Marshaller_GetAllWarehousesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllWarehousesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllWarehousesResponse> __Marshaller_GetAllWarehousesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllWarehousesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateWarehouseRequest> __Marshaller_CreateWarehouseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateWarehouseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateWarehouseResponse> __Marshaller_CreateWarehouseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateWarehouseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateWarehouseRequest> __Marshaller_UpdateWarehouseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateWarehouseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateWarehouseResponse> __Marshaller_UpdateWarehouseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateWarehouseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteWarehouseRequest> __Marshaller_DeleteWarehouseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteWarehouseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteWarehouseResponse> __Marshaller_DeleteWarehouseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteWarehouseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest> __Marshaller_GetAllNomenclaturesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse> __Marshaller_GetAllNomenclaturesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateNomenclatureRequest> __Marshaller_CreateNomenclatureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateNomenclatureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateNomenclatureResponse> __Marshaller_CreateNomenclatureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateNomenclatureResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest> __Marshaller_UpdateNomenclatureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse> __Marshaller_UpdateNomenclatureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest> __Marshaller_DeleteNomenclatureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse> __Marshaller_DeleteNomenclatureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllEquipmentRequest, global::RequestManagement.Server.Controllers.GetAllEquipmentResponse> __Method_GetAllEquipment = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllEquipmentRequest, global::RequestManagement.Server.Controllers.GetAllEquipmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllEquipment",
        __Marshaller_GetAllEquipmentRequest,
        __Marshaller_GetAllEquipmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateEquipmentRequest, global::RequestManagement.Server.Controllers.CreateEquipmentResponse> __Method_CreateEquipment = new grpc::Method<global::RequestManagement.Server.Controllers.CreateEquipmentRequest, global::RequestManagement.Server.Controllers.CreateEquipmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEquipment",
        __Marshaller_CreateEquipmentRequest,
        __Marshaller_CreateEquipmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateEquipmentRequest, global::RequestManagement.Server.Controllers.UpdateEquipmentResponse> __Method_UpdateEquipment = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateEquipmentRequest, global::RequestManagement.Server.Controllers.UpdateEquipmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEquipment",
        __Marshaller_UpdateEquipmentRequest,
        __Marshaller_UpdateEquipmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteEquipmentRequest, global::RequestManagement.Server.Controllers.DeleteEquipmentResponse> __Method_DeleteEquipment = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteEquipmentRequest, global::RequestManagement.Server.Controllers.DeleteEquipmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEquipment",
        __Marshaller_DeleteEquipmentRequest,
        __Marshaller_DeleteEquipmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllDriversRequest, global::RequestManagement.Server.Controllers.GetAllDriversResponse> __Method_GetAllDrivers = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllDriversRequest, global::RequestManagement.Server.Controllers.GetAllDriversResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDrivers",
        __Marshaller_GetAllDriversRequest,
        __Marshaller_GetAllDriversResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateDriverRequest, global::RequestManagement.Server.Controllers.CreateDriverResponse> __Method_CreateDriver = new grpc::Method<global::RequestManagement.Server.Controllers.CreateDriverRequest, global::RequestManagement.Server.Controllers.CreateDriverResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDriver",
        __Marshaller_CreateDriverRequest,
        __Marshaller_CreateDriverResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateDriverRequest, global::RequestManagement.Server.Controllers.UpdateDriverResponse> __Method_UpdateDriver = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateDriverRequest, global::RequestManagement.Server.Controllers.UpdateDriverResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDriver",
        __Marshaller_UpdateDriverRequest,
        __Marshaller_UpdateDriverResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteDriverRequest, global::RequestManagement.Server.Controllers.DeleteDriverResponse> __Method_DeleteDriver = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteDriverRequest, global::RequestManagement.Server.Controllers.DeleteDriverResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDriver",
        __Marshaller_DeleteDriverRequest,
        __Marshaller_DeleteDriverResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest, global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse> __Method_GetAllDefectGroups = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest, global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDefectGroups",
        __Marshaller_GetAllDefectGroupsRequest,
        __Marshaller_GetAllDefectGroupsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateDefectGroupRequest, global::RequestManagement.Server.Controllers.CreateDefectGroupResponse> __Method_CreateDefectGroup = new grpc::Method<global::RequestManagement.Server.Controllers.CreateDefectGroupRequest, global::RequestManagement.Server.Controllers.CreateDefectGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDefectGroup",
        __Marshaller_CreateDefectGroupRequest,
        __Marshaller_CreateDefectGroupResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest, global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse> __Method_UpdateDefectGroup = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest, global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDefectGroup",
        __Marshaller_UpdateDefectGroupRequest,
        __Marshaller_UpdateDefectGroupResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest, global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse> __Method_DeleteDefectGroup = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest, global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDefectGroup",
        __Marshaller_DeleteDefectGroupRequest,
        __Marshaller_DeleteDefectGroupResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllDefectsRequest, global::RequestManagement.Server.Controllers.GetAllDefectsResponse> __Method_GetAllDefects = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllDefectsRequest, global::RequestManagement.Server.Controllers.GetAllDefectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDefects",
        __Marshaller_GetAllDefectsRequest,
        __Marshaller_GetAllDefectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateDefectRequest, global::RequestManagement.Server.Controllers.CreateDefectResponse> __Method_CreateDefect = new grpc::Method<global::RequestManagement.Server.Controllers.CreateDefectRequest, global::RequestManagement.Server.Controllers.CreateDefectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDefect",
        __Marshaller_CreateDefectRequest,
        __Marshaller_CreateDefectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateDefectRequest, global::RequestManagement.Server.Controllers.UpdateDefectResponse> __Method_UpdateDefect = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateDefectRequest, global::RequestManagement.Server.Controllers.UpdateDefectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDefect",
        __Marshaller_UpdateDefectRequest,
        __Marshaller_UpdateDefectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteDefectRequest, global::RequestManagement.Server.Controllers.DeleteDefectResponse> __Method_DeleteDefect = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteDefectRequest, global::RequestManagement.Server.Controllers.DeleteDefectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDefect",
        __Marshaller_DeleteDefectRequest,
        __Marshaller_DeleteDefectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllWarehousesRequest, global::RequestManagement.Server.Controllers.GetAllWarehousesResponse> __Method_GetAllWarehouses = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllWarehousesRequest, global::RequestManagement.Server.Controllers.GetAllWarehousesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllWarehouses",
        __Marshaller_GetAllWarehousesRequest,
        __Marshaller_GetAllWarehousesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateWarehouseRequest, global::RequestManagement.Server.Controllers.CreateWarehouseResponse> __Method_CreateWarehouse = new grpc::Method<global::RequestManagement.Server.Controllers.CreateWarehouseRequest, global::RequestManagement.Server.Controllers.CreateWarehouseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWarehouse",
        __Marshaller_CreateWarehouseRequest,
        __Marshaller_CreateWarehouseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateWarehouseRequest, global::RequestManagement.Server.Controllers.UpdateWarehouseResponse> __Method_UpdateWarehouse = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateWarehouseRequest, global::RequestManagement.Server.Controllers.UpdateWarehouseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWarehouse",
        __Marshaller_UpdateWarehouseRequest,
        __Marshaller_UpdateWarehouseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteWarehouseRequest, global::RequestManagement.Server.Controllers.DeleteWarehouseResponse> __Method_DeleteWarehouse = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteWarehouseRequest, global::RequestManagement.Server.Controllers.DeleteWarehouseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWarehouse",
        __Marshaller_DeleteWarehouseRequest,
        __Marshaller_DeleteWarehouseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest, global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse> __Method_GetAllNomenclatures = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest, global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllNomenclatures",
        __Marshaller_GetAllNomenclaturesRequest,
        __Marshaller_GetAllNomenclaturesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateNomenclatureRequest, global::RequestManagement.Server.Controllers.CreateNomenclatureResponse> __Method_CreateNomenclature = new grpc::Method<global::RequestManagement.Server.Controllers.CreateNomenclatureRequest, global::RequestManagement.Server.Controllers.CreateNomenclatureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNomenclature",
        __Marshaller_CreateNomenclatureRequest,
        __Marshaller_CreateNomenclatureResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest, global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse> __Method_UpdateNomenclature = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest, global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNomenclature",
        __Marshaller_UpdateNomenclatureRequest,
        __Marshaller_UpdateNomenclatureResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest, global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse> __Method_DeleteNomenclature = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest, global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNomenclature",
        __Marshaller_DeleteNomenclatureRequest,
        __Marshaller_DeleteNomenclatureResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RequestManagement.Server.Controllers.RequestReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for RequestService</summary>
    public partial class RequestServiceClient : grpc::ClientBase<RequestServiceClient>
    {
      /// <summary>Creates a new client for RequestService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RequestServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RequestService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RequestServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RequestServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RequestServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllEquipmentResponse GetAllEquipment(global::RequestManagement.Server.Controllers.GetAllEquipmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEquipment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllEquipmentResponse GetAllEquipment(global::RequestManagement.Server.Controllers.GetAllEquipmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllEquipment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllEquipmentResponse> GetAllEquipmentAsync(global::RequestManagement.Server.Controllers.GetAllEquipmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEquipmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllEquipmentResponse> GetAllEquipmentAsync(global::RequestManagement.Server.Controllers.GetAllEquipmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllEquipment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateEquipmentResponse CreateEquipment(global::RequestManagement.Server.Controllers.CreateEquipmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEquipment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateEquipmentResponse CreateEquipment(global::RequestManagement.Server.Controllers.CreateEquipmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEquipment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateEquipmentResponse> CreateEquipmentAsync(global::RequestManagement.Server.Controllers.CreateEquipmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEquipmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateEquipmentResponse> CreateEquipmentAsync(global::RequestManagement.Server.Controllers.CreateEquipmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEquipment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateEquipmentResponse UpdateEquipment(global::RequestManagement.Server.Controllers.UpdateEquipmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEquipment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateEquipmentResponse UpdateEquipment(global::RequestManagement.Server.Controllers.UpdateEquipmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEquipment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateEquipmentResponse> UpdateEquipmentAsync(global::RequestManagement.Server.Controllers.UpdateEquipmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEquipmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateEquipmentResponse> UpdateEquipmentAsync(global::RequestManagement.Server.Controllers.UpdateEquipmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEquipment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteEquipmentResponse DeleteEquipment(global::RequestManagement.Server.Controllers.DeleteEquipmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEquipment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteEquipmentResponse DeleteEquipment(global::RequestManagement.Server.Controllers.DeleteEquipmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEquipment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteEquipmentResponse> DeleteEquipmentAsync(global::RequestManagement.Server.Controllers.DeleteEquipmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEquipmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteEquipmentResponse> DeleteEquipmentAsync(global::RequestManagement.Server.Controllers.DeleteEquipmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEquipment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllDriversResponse GetAllDrivers(global::RequestManagement.Server.Controllers.GetAllDriversRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDrivers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllDriversResponse GetAllDrivers(global::RequestManagement.Server.Controllers.GetAllDriversRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllDrivers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllDriversResponse> GetAllDriversAsync(global::RequestManagement.Server.Controllers.GetAllDriversRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDriversAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllDriversResponse> GetAllDriversAsync(global::RequestManagement.Server.Controllers.GetAllDriversRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllDrivers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateDriverResponse CreateDriver(global::RequestManagement.Server.Controllers.CreateDriverRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDriver(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateDriverResponse CreateDriver(global::RequestManagement.Server.Controllers.CreateDriverRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDriver, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateDriverResponse> CreateDriverAsync(global::RequestManagement.Server.Controllers.CreateDriverRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDriverAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateDriverResponse> CreateDriverAsync(global::RequestManagement.Server.Controllers.CreateDriverRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDriver, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateDriverResponse UpdateDriver(global::RequestManagement.Server.Controllers.UpdateDriverRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDriver(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateDriverResponse UpdateDriver(global::RequestManagement.Server.Controllers.UpdateDriverRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDriver, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateDriverResponse> UpdateDriverAsync(global::RequestManagement.Server.Controllers.UpdateDriverRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDriverAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateDriverResponse> UpdateDriverAsync(global::RequestManagement.Server.Controllers.UpdateDriverRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDriver, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteDriverResponse DeleteDriver(global::RequestManagement.Server.Controllers.DeleteDriverRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDriver(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteDriverResponse DeleteDriver(global::RequestManagement.Server.Controllers.DeleteDriverRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDriver, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteDriverResponse> DeleteDriverAsync(global::RequestManagement.Server.Controllers.DeleteDriverRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDriverAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteDriverResponse> DeleteDriverAsync(global::RequestManagement.Server.Controllers.DeleteDriverRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDriver, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse GetAllDefectGroups(global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDefectGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse GetAllDefectGroups(global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllDefectGroups, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse> GetAllDefectGroupsAsync(global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDefectGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllDefectGroupsResponse> GetAllDefectGroupsAsync(global::RequestManagement.Server.Controllers.GetAllDefectGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllDefectGroups, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateDefectGroupResponse CreateDefectGroup(global::RequestManagement.Server.Controllers.CreateDefectGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDefectGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateDefectGroupResponse CreateDefectGroup(global::RequestManagement.Server.Controllers.CreateDefectGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDefectGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateDefectGroupResponse> CreateDefectGroupAsync(global::RequestManagement.Server.Controllers.CreateDefectGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDefectGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateDefectGroupResponse> CreateDefectGroupAsync(global::RequestManagement.Server.Controllers.CreateDefectGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDefectGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse UpdateDefectGroup(global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDefectGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse UpdateDefectGroup(global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDefectGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse> UpdateDefectGroupAsync(global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDefectGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateDefectGroupResponse> UpdateDefectGroupAsync(global::RequestManagement.Server.Controllers.UpdateDefectGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDefectGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse DeleteDefectGroup(global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDefectGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse DeleteDefectGroup(global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDefectGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse> DeleteDefectGroupAsync(global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDefectGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteDefectGroupResponse> DeleteDefectGroupAsync(global::RequestManagement.Server.Controllers.DeleteDefectGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDefectGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllDefectsResponse GetAllDefects(global::RequestManagement.Server.Controllers.GetAllDefectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDefects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllDefectsResponse GetAllDefects(global::RequestManagement.Server.Controllers.GetAllDefectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllDefects, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllDefectsResponse> GetAllDefectsAsync(global::RequestManagement.Server.Controllers.GetAllDefectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDefectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllDefectsResponse> GetAllDefectsAsync(global::RequestManagement.Server.Controllers.GetAllDefectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllDefects, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateDefectResponse CreateDefect(global::RequestManagement.Server.Controllers.CreateDefectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDefect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateDefectResponse CreateDefect(global::RequestManagement.Server.Controllers.CreateDefectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDefect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateDefectResponse> CreateDefectAsync(global::RequestManagement.Server.Controllers.CreateDefectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDefectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateDefectResponse> CreateDefectAsync(global::RequestManagement.Server.Controllers.CreateDefectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDefect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateDefectResponse UpdateDefect(global::RequestManagement.Server.Controllers.UpdateDefectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDefect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateDefectResponse UpdateDefect(global::RequestManagement.Server.Controllers.UpdateDefectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDefect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateDefectResponse> UpdateDefectAsync(global::RequestManagement.Server.Controllers.UpdateDefectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDefectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateDefectResponse> UpdateDefectAsync(global::RequestManagement.Server.Controllers.UpdateDefectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDefect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteDefectResponse DeleteDefect(global::RequestManagement.Server.Controllers.DeleteDefectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDefect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteDefectResponse DeleteDefect(global::RequestManagement.Server.Controllers.DeleteDefectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDefect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteDefectResponse> DeleteDefectAsync(global::RequestManagement.Server.Controllers.DeleteDefectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDefectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteDefectResponse> DeleteDefectAsync(global::RequestManagement.Server.Controllers.DeleteDefectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDefect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllWarehousesResponse GetAllWarehouses(global::RequestManagement.Server.Controllers.GetAllWarehousesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllWarehouses(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllWarehousesResponse GetAllWarehouses(global::RequestManagement.Server.Controllers.GetAllWarehousesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllWarehouses, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllWarehousesResponse> GetAllWarehousesAsync(global::RequestManagement.Server.Controllers.GetAllWarehousesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllWarehousesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllWarehousesResponse> GetAllWarehousesAsync(global::RequestManagement.Server.Controllers.GetAllWarehousesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllWarehouses, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateWarehouseResponse CreateWarehouse(global::RequestManagement.Server.Controllers.CreateWarehouseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWarehouse(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateWarehouseResponse CreateWarehouse(global::RequestManagement.Server.Controllers.CreateWarehouseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWarehouse, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateWarehouseResponse> CreateWarehouseAsync(global::RequestManagement.Server.Controllers.CreateWarehouseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWarehouseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateWarehouseResponse> CreateWarehouseAsync(global::RequestManagement.Server.Controllers.CreateWarehouseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWarehouse, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateWarehouseResponse UpdateWarehouse(global::RequestManagement.Server.Controllers.UpdateWarehouseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWarehouse(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateWarehouseResponse UpdateWarehouse(global::RequestManagement.Server.Controllers.UpdateWarehouseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWarehouse, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateWarehouseResponse> UpdateWarehouseAsync(global::RequestManagement.Server.Controllers.UpdateWarehouseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWarehouseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateWarehouseResponse> UpdateWarehouseAsync(global::RequestManagement.Server.Controllers.UpdateWarehouseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWarehouse, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteWarehouseResponse DeleteWarehouse(global::RequestManagement.Server.Controllers.DeleteWarehouseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWarehouse(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteWarehouseResponse DeleteWarehouse(global::RequestManagement.Server.Controllers.DeleteWarehouseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWarehouse, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteWarehouseResponse> DeleteWarehouseAsync(global::RequestManagement.Server.Controllers.DeleteWarehouseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWarehouseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteWarehouseResponse> DeleteWarehouseAsync(global::RequestManagement.Server.Controllers.DeleteWarehouseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWarehouse, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse GetAllNomenclatures(global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllNomenclatures(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse GetAllNomenclatures(global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllNomenclatures, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse> GetAllNomenclaturesAsync(global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllNomenclaturesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllNomenclaturesResponse> GetAllNomenclaturesAsync(global::RequestManagement.Server.Controllers.GetAllNomenclaturesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllNomenclatures, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateNomenclatureResponse CreateNomenclature(global::RequestManagement.Server.Controllers.CreateNomenclatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNomenclature(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateNomenclatureResponse CreateNomenclature(global::RequestManagement.Server.Controllers.CreateNomenclatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNomenclature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateNomenclatureResponse> CreateNomenclatureAsync(global::RequestManagement.Server.Controllers.CreateNomenclatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNomenclatureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateNomenclatureResponse> CreateNomenclatureAsync(global::RequestManagement.Server.Controllers.CreateNomenclatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNomenclature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse UpdateNomenclature(global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNomenclature(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse UpdateNomenclature(global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNomenclature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse> UpdateNomenclatureAsync(global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNomenclatureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateNomenclatureResponse> UpdateNomenclatureAsync(global::RequestManagement.Server.Controllers.UpdateNomenclatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNomenclature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse DeleteNomenclature(global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNomenclature(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse DeleteNomenclature(global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNomenclature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse> DeleteNomenclatureAsync(global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNomenclatureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteNomenclatureResponse> DeleteNomenclatureAsync(global::RequestManagement.Server.Controllers.DeleteNomenclatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNomenclature, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override RequestServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RequestServiceClient(configuration);
      }
    }

  }
}
#endregion


//Stock.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: stock.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RequestManagement.Server.Controllers {

  /// <summary>Holder for reflection information generated from stock.proto</summary>
  public static partial class StockReflection {

    #region Descriptor
    /// <summary>File descriptor for stock.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StockReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtzdG9jay5wcm90byKqAgoTR2V0QWxsU3RvY2tzUmVxdWVzdBITCgt3YXJl",
            "aG91c2VJZBgBIAEoBRIOCgZmaWx0ZXIYAiABKAkSIQoZaW5pdGlhbFF1YW50",
            "aXR5RmlsdGVyVHlwZRgDIAEoBRIXCg9pbml0aWFsUXVhbnRpdHkYBCABKAES",
            "IgoacmVjZWl2ZWRRdWFudGl0eUZpbHRlclR5cGUYBSABKAUSGAoQcmVjZWl2",
            "ZWRRdWFudGl0eRgGIAEoARIiChpjb25zdW1lZFF1YW50aXR5RmlsdGVyVHlw",
            "ZRgHIAEoBRIYChBjb25zdW1lZFF1YW50aXR5GAggASgBEh8KF2ZpbmFsUXVh",
            "bnRpdHlGaWx0ZXJUeXBlGAkgASgFEhUKDWZpbmFsUXVhbnRpdHkYCiABKAEi",
            "LgoUR2V0QWxsU3RvY2tzUmVzcG9uc2USFgoGc3RvY2tzGAEgAygLMgYuU3Rv",
            "Y2siXQoSQ3JlYXRlU3RvY2tSZXF1ZXN0EhQKDHdhcmVob3VzZV9pZBgBIAEo",
            "BRIXCg9ub21lbmNsYXR1cmVfaWQYAiABKAUSGAoQaW5pdGlhbF9xdWFudGl0",
            "eRgDIAEoASIhChNDcmVhdGVTdG9ja1Jlc3BvbnNlEgoKAmlkGAEgASgFIlMK",
            "ElVwZGF0ZVN0b2NrUmVxdWVzdBIKCgJpZBgBIAEoBRIXCg9ub21lbmNsYXR1",
            "cmVfaWQYAyABKAUSGAoQaW5pdGlhbF9xdWFudGl0eRgEIAEoASImChNVcGRh",
            "dGVTdG9ja1Jlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiIAoSRGVsZXRlU3Rv",
            "Y2tSZXF1ZXN0EgoKAmlkGAEgASgFIiYKE0RlbGV0ZVN0b2NrUmVzcG9uc2US",
            "DwoHc3VjY2VzcxgBIAEoCCK8AQoFU3RvY2sSCgoCaWQYASABKAUSFAoMd2Fy",
            "ZWhvdXNlX2lkGAIgASgFEhcKD25vbWVuY2xhdHVyZV9pZBgDIAEoBRIYChBp",
            "bml0aWFsX3F1YW50aXR5GAQgASgBEhkKEXJlY2VpdmVkX3F1YW50aXR5GAUg",
            "ASgBEhkKEWNvbnN1bWVkX3F1YW50aXR5GAYgASgBEigKDG5vbWVuY2xhdHVy",
            "ZRgHIAEoCzISLlN0b2NrTm9tZW5jbGF0dXJlIlcKEVN0b2NrTm9tZW5jbGF0",
            "dXJlEgwKBGNvZGUYAiABKAkSDAoEbmFtZRgDIAEoCRIPCgdhcnRpY2xlGAQg",
            "ASgJEhUKDXVuaXRPZk1lYXN1cmUYBSABKAky+AEKDFN0b2NrU2VydmljZRI6",
            "CgtHZXRBbGxTdG9jaxIULkdldEFsbFN0b2Nrc1JlcXVlc3QaFS5HZXRBbGxT",
            "dG9ja3NSZXNwb25zZRI4CgtDcmVhdGVTdG9jaxITLkNyZWF0ZVN0b2NrUmVx",
            "dWVzdBoULkNyZWF0ZVN0b2NrUmVzcG9uc2USOAoLVXBkYXRlU3RvY2sSEy5V",
            "cGRhdGVTdG9ja1JlcXVlc3QaFC5VcGRhdGVTdG9ja1Jlc3BvbnNlEjgKC0Rl",
            "bGV0ZVN0b2NrEhMuRGVsZXRlU3RvY2tSZXF1ZXN0GhQuRGVsZXRlU3RvY2tS",
            "ZXNwb25zZUInqgIkUmVxdWVzdE1hbmFnZW1lbnQuU2VydmVyLkNvbnRyb2xs",
            "ZXJzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllStocksRequest), global::RequestManagement.Server.Controllers.GetAllStocksRequest.Parser, new[]{ "WarehouseId", "Filter", "InitialQuantityFilterType", "InitialQuantity", "ReceivedQuantityFilterType", "ReceivedQuantity", "ConsumedQuantityFilterType", "ConsumedQuantity", "FinalQuantityFilterType", "FinalQuantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.GetAllStocksResponse), global::RequestManagement.Server.Controllers.GetAllStocksResponse.Parser, new[]{ "Stocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateStockRequest), global::RequestManagement.Server.Controllers.CreateStockRequest.Parser, new[]{ "WarehouseId", "NomenclatureId", "InitialQuantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.CreateStockResponse), global::RequestManagement.Server.Controllers.CreateStockResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateStockRequest), global::RequestManagement.Server.Controllers.UpdateStockRequest.Parser, new[]{ "Id", "NomenclatureId", "InitialQuantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.UpdateStockResponse), global::RequestManagement.Server.Controllers.UpdateStockResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteStockRequest), global::RequestManagement.Server.Controllers.DeleteStockRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.DeleteStockResponse), global::RequestManagement.Server.Controllers.DeleteStockResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.Stock), global::RequestManagement.Server.Controllers.Stock.Parser, new[]{ "Id", "WarehouseId", "NomenclatureId", "InitialQuantity", "ReceivedQuantity", "ConsumedQuantity", "Nomenclature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RequestManagement.Server.Controllers.StockNomenclature), global::RequestManagement.Server.Controllers.StockNomenclature.Parser, new[]{ "Code", "Name", "Article", "UnitOfMeasure" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllStocksRequest : pb::IMessage<GetAllStocksRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllStocksRequest> _parser = new pb::MessageParser<GetAllStocksRequest>(() => new GetAllStocksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllStocksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksRequest(GetAllStocksRequest other) : this() {
      warehouseId_ = other.warehouseId_;
      filter_ = other.filter_;
      initialQuantityFilterType_ = other.initialQuantityFilterType_;
      initialQuantity_ = other.initialQuantity_;
      receivedQuantityFilterType_ = other.receivedQuantityFilterType_;
      receivedQuantity_ = other.receivedQuantity_;
      consumedQuantityFilterType_ = other.consumedQuantityFilterType_;
      consumedQuantity_ = other.consumedQuantity_;
      finalQuantityFilterType_ = other.finalQuantityFilterType_;
      finalQuantity_ = other.finalQuantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksRequest Clone() {
      return new GetAllStocksRequest(this);
    }

    /// <summary>Field number for the "warehouseId" field.</summary>
    public const int WarehouseIdFieldNumber = 1;
    private int warehouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WarehouseId {
      get { return warehouseId_; }
      set {
        warehouseId_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initialQuantityFilterType" field.</summary>
    public const int InitialQuantityFilterTypeFieldNumber = 3;
    private int initialQuantityFilterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InitialQuantityFilterType {
      get { return initialQuantityFilterType_; }
      set {
        initialQuantityFilterType_ = value;
      }
    }

    /// <summary>Field number for the "initialQuantity" field.</summary>
    public const int InitialQuantityFieldNumber = 4;
    private double initialQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialQuantity {
      get { return initialQuantity_; }
      set {
        initialQuantity_ = value;
      }
    }

    /// <summary>Field number for the "receivedQuantityFilterType" field.</summary>
    public const int ReceivedQuantityFilterTypeFieldNumber = 5;
    private int receivedQuantityFilterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReceivedQuantityFilterType {
      get { return receivedQuantityFilterType_; }
      set {
        receivedQuantityFilterType_ = value;
      }
    }

    /// <summary>Field number for the "receivedQuantity" field.</summary>
    public const int ReceivedQuantityFieldNumber = 6;
    private double receivedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ReceivedQuantity {
      get { return receivedQuantity_; }
      set {
        receivedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "consumedQuantityFilterType" field.</summary>
    public const int ConsumedQuantityFilterTypeFieldNumber = 7;
    private int consumedQuantityFilterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConsumedQuantityFilterType {
      get { return consumedQuantityFilterType_; }
      set {
        consumedQuantityFilterType_ = value;
      }
    }

    /// <summary>Field number for the "consumedQuantity" field.</summary>
    public const int ConsumedQuantityFieldNumber = 8;
    private double consumedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ConsumedQuantity {
      get { return consumedQuantity_; }
      set {
        consumedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "finalQuantityFilterType" field.</summary>
    public const int FinalQuantityFilterTypeFieldNumber = 9;
    private int finalQuantityFilterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FinalQuantityFilterType {
      get { return finalQuantityFilterType_; }
      set {
        finalQuantityFilterType_ = value;
      }
    }

    /// <summary>Field number for the "finalQuantity" field.</summary>
    public const int FinalQuantityFieldNumber = 10;
    private double finalQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FinalQuantity {
      get { return finalQuantity_; }
      set {
        finalQuantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllStocksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllStocksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WarehouseId != other.WarehouseId) return false;
      if (Filter != other.Filter) return false;
      if (InitialQuantityFilterType != other.InitialQuantityFilterType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialQuantity, other.InitialQuantity)) return false;
      if (ReceivedQuantityFilterType != other.ReceivedQuantityFilterType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReceivedQuantity, other.ReceivedQuantity)) return false;
      if (ConsumedQuantityFilterType != other.ConsumedQuantityFilterType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ConsumedQuantity, other.ConsumedQuantity)) return false;
      if (FinalQuantityFilterType != other.FinalQuantityFilterType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FinalQuantity, other.FinalQuantity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WarehouseId != 0) hash ^= WarehouseId.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (InitialQuantityFilterType != 0) hash ^= InitialQuantityFilterType.GetHashCode();
      if (InitialQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialQuantity);
      if (ReceivedQuantityFilterType != 0) hash ^= ReceivedQuantityFilterType.GetHashCode();
      if (ReceivedQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReceivedQuantity);
      if (ConsumedQuantityFilterType != 0) hash ^= ConsumedQuantityFilterType.GetHashCode();
      if (ConsumedQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ConsumedQuantity);
      if (FinalQuantityFilterType != 0) hash ^= FinalQuantityFilterType.GetHashCode();
      if (FinalQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FinalQuantity);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WarehouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WarehouseId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (InitialQuantityFilterType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialQuantityFilterType);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (ReceivedQuantityFilterType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ReceivedQuantityFilterType);
      }
      if (ReceivedQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ReceivedQuantity);
      }
      if (ConsumedQuantityFilterType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ConsumedQuantityFilterType);
      }
      if (ConsumedQuantity != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(ConsumedQuantity);
      }
      if (FinalQuantityFilterType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FinalQuantityFilterType);
      }
      if (FinalQuantity != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(FinalQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WarehouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WarehouseId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (InitialQuantityFilterType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialQuantityFilterType);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (ReceivedQuantityFilterType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ReceivedQuantityFilterType);
      }
      if (ReceivedQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ReceivedQuantity);
      }
      if (ConsumedQuantityFilterType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ConsumedQuantityFilterType);
      }
      if (ConsumedQuantity != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(ConsumedQuantity);
      }
      if (FinalQuantityFilterType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FinalQuantityFilterType);
      }
      if (FinalQuantity != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(FinalQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WarehouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WarehouseId);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (InitialQuantityFilterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialQuantityFilterType);
      }
      if (InitialQuantity != 0D) {
        size += 1 + 8;
      }
      if (ReceivedQuantityFilterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceivedQuantityFilterType);
      }
      if (ReceivedQuantity != 0D) {
        size += 1 + 8;
      }
      if (ConsumedQuantityFilterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConsumedQuantityFilterType);
      }
      if (ConsumedQuantity != 0D) {
        size += 1 + 8;
      }
      if (FinalQuantityFilterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinalQuantityFilterType);
      }
      if (FinalQuantity != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllStocksRequest other) {
      if (other == null) {
        return;
      }
      if (other.WarehouseId != 0) {
        WarehouseId = other.WarehouseId;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.InitialQuantityFilterType != 0) {
        InitialQuantityFilterType = other.InitialQuantityFilterType;
      }
      if (other.InitialQuantity != 0D) {
        InitialQuantity = other.InitialQuantity;
      }
      if (other.ReceivedQuantityFilterType != 0) {
        ReceivedQuantityFilterType = other.ReceivedQuantityFilterType;
      }
      if (other.ReceivedQuantity != 0D) {
        ReceivedQuantity = other.ReceivedQuantity;
      }
      if (other.ConsumedQuantityFilterType != 0) {
        ConsumedQuantityFilterType = other.ConsumedQuantityFilterType;
      }
      if (other.ConsumedQuantity != 0D) {
        ConsumedQuantity = other.ConsumedQuantity;
      }
      if (other.FinalQuantityFilterType != 0) {
        FinalQuantityFilterType = other.FinalQuantityFilterType;
      }
      if (other.FinalQuantity != 0D) {
        FinalQuantity = other.FinalQuantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            InitialQuantityFilterType = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
          case 40: {
            ReceivedQuantityFilterType = input.ReadInt32();
            break;
          }
          case 49: {
            ReceivedQuantity = input.ReadDouble();
            break;
          }
          case 56: {
            ConsumedQuantityFilterType = input.ReadInt32();
            break;
          }
          case 65: {
            ConsumedQuantity = input.ReadDouble();
            break;
          }
          case 72: {
            FinalQuantityFilterType = input.ReadInt32();
            break;
          }
          case 81: {
            FinalQuantity = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            InitialQuantityFilterType = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
          case 40: {
            ReceivedQuantityFilterType = input.ReadInt32();
            break;
          }
          case 49: {
            ReceivedQuantity = input.ReadDouble();
            break;
          }
          case 56: {
            ConsumedQuantityFilterType = input.ReadInt32();
            break;
          }
          case 65: {
            ConsumedQuantity = input.ReadDouble();
            break;
          }
          case 72: {
            FinalQuantityFilterType = input.ReadInt32();
            break;
          }
          case 81: {
            FinalQuantity = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetAllStocksResponse : pb::IMessage<GetAllStocksResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllStocksResponse> _parser = new pb::MessageParser<GetAllStocksResponse>(() => new GetAllStocksResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAllStocksResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksResponse(GetAllStocksResponse other) : this() {
      stocks_ = other.stocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAllStocksResponse Clone() {
      return new GetAllStocksResponse(this);
    }

    /// <summary>Field number for the "stocks" field.</summary>
    public const int StocksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RequestManagement.Server.Controllers.Stock> _repeated_stocks_codec
        = pb::FieldCodec.ForMessage(10, global::RequestManagement.Server.Controllers.Stock.Parser);
    private readonly pbc::RepeatedField<global::RequestManagement.Server.Controllers.Stock> stocks_ = new pbc::RepeatedField<global::RequestManagement.Server.Controllers.Stock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RequestManagement.Server.Controllers.Stock> Stocks {
      get { return stocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAllStocksResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAllStocksResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stocks_.Equals(other.stocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stocks_.WriteTo(output, _repeated_stocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stocks_.WriteTo(ref output, _repeated_stocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += stocks_.CalculateSize(_repeated_stocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAllStocksResponse other) {
      if (other == null) {
        return;
      }
      stocks_.Add(other.stocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stocks_.AddEntriesFrom(input, _repeated_stocks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stocks_.AddEntriesFrom(ref input, _repeated_stocks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateStockRequest : pb::IMessage<CreateStockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateStockRequest> _parser = new pb::MessageParser<CreateStockRequest>(() => new CreateStockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateStockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockRequest(CreateStockRequest other) : this() {
      warehouseId_ = other.warehouseId_;
      nomenclatureId_ = other.nomenclatureId_;
      initialQuantity_ = other.initialQuantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockRequest Clone() {
      return new CreateStockRequest(this);
    }

    /// <summary>Field number for the "warehouse_id" field.</summary>
    public const int WarehouseIdFieldNumber = 1;
    private int warehouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WarehouseId {
      get { return warehouseId_; }
      set {
        warehouseId_ = value;
      }
    }

    /// <summary>Field number for the "nomenclature_id" field.</summary>
    public const int NomenclatureIdFieldNumber = 2;
    private int nomenclatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NomenclatureId {
      get { return nomenclatureId_; }
      set {
        nomenclatureId_ = value;
      }
    }

    /// <summary>Field number for the "initial_quantity" field.</summary>
    public const int InitialQuantityFieldNumber = 3;
    private double initialQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialQuantity {
      get { return initialQuantity_; }
      set {
        initialQuantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateStockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateStockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WarehouseId != other.WarehouseId) return false;
      if (NomenclatureId != other.NomenclatureId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialQuantity, other.InitialQuantity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WarehouseId != 0) hash ^= WarehouseId.GetHashCode();
      if (NomenclatureId != 0) hash ^= NomenclatureId.GetHashCode();
      if (InitialQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialQuantity);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WarehouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WarehouseId);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InitialQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WarehouseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WarehouseId);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InitialQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WarehouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WarehouseId);
      }
      if (NomenclatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateStockRequest other) {
      if (other == null) {
        return;
      }
      if (other.WarehouseId != 0) {
        WarehouseId = other.WarehouseId;
      }
      if (other.NomenclatureId != 0) {
        NomenclatureId = other.NomenclatureId;
      }
      if (other.InitialQuantity != 0D) {
        InitialQuantity = other.InitialQuantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 16: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 25: {
            InitialQuantity = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 16: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 25: {
            InitialQuantity = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateStockResponse : pb::IMessage<CreateStockResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateStockResponse> _parser = new pb::MessageParser<CreateStockResponse>(() => new CreateStockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateStockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockResponse(CreateStockResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateStockResponse Clone() {
      return new CreateStockResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateStockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateStockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateStockResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateStockRequest : pb::IMessage<UpdateStockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateStockRequest> _parser = new pb::MessageParser<UpdateStockRequest>(() => new UpdateStockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateStockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockRequest(UpdateStockRequest other) : this() {
      id_ = other.id_;
      nomenclatureId_ = other.nomenclatureId_;
      initialQuantity_ = other.initialQuantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockRequest Clone() {
      return new UpdateStockRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "nomenclature_id" field.</summary>
    public const int NomenclatureIdFieldNumber = 3;
    private int nomenclatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NomenclatureId {
      get { return nomenclatureId_; }
      set {
        nomenclatureId_ = value;
      }
    }

    /// <summary>Field number for the "initial_quantity" field.</summary>
    public const int InitialQuantityFieldNumber = 4;
    private double initialQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialQuantity {
      get { return initialQuantity_; }
      set {
        initialQuantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateStockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateStockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NomenclatureId != other.NomenclatureId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialQuantity, other.InitialQuantity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (NomenclatureId != 0) hash ^= NomenclatureId.GetHashCode();
      if (InitialQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialQuantity);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (NomenclatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateStockRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.NomenclatureId != 0) {
        NomenclatureId = other.NomenclatureId;
      }
      if (other.InitialQuantity != 0D) {
        InitialQuantity = other.InitialQuantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateStockResponse : pb::IMessage<UpdateStockResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateStockResponse> _parser = new pb::MessageParser<UpdateStockResponse>(() => new UpdateStockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateStockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockResponse(UpdateStockResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStockResponse Clone() {
      return new UpdateStockResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateStockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateStockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateStockResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteStockRequest : pb::IMessage<DeleteStockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteStockRequest> _parser = new pb::MessageParser<DeleteStockRequest>(() => new DeleteStockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteStockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockRequest(DeleteStockRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockRequest Clone() {
      return new DeleteStockRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteStockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteStockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteStockRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteStockResponse : pb::IMessage<DeleteStockResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteStockResponse> _parser = new pb::MessageParser<DeleteStockResponse>(() => new DeleteStockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteStockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockResponse(DeleteStockResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteStockResponse Clone() {
      return new DeleteStockResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteStockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteStockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteStockResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Stock : pb::IMessage<Stock>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stock> _parser = new pb::MessageParser<Stock>(() => new Stock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Stock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stock(Stock other) : this() {
      id_ = other.id_;
      warehouseId_ = other.warehouseId_;
      nomenclatureId_ = other.nomenclatureId_;
      initialQuantity_ = other.initialQuantity_;
      receivedQuantity_ = other.receivedQuantity_;
      consumedQuantity_ = other.consumedQuantity_;
      nomenclature_ = other.nomenclature_ != null ? other.nomenclature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stock Clone() {
      return new Stock(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "warehouse_id" field.</summary>
    public const int WarehouseIdFieldNumber = 2;
    private int warehouseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WarehouseId {
      get { return warehouseId_; }
      set {
        warehouseId_ = value;
      }
    }

    /// <summary>Field number for the "nomenclature_id" field.</summary>
    public const int NomenclatureIdFieldNumber = 3;
    private int nomenclatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NomenclatureId {
      get { return nomenclatureId_; }
      set {
        nomenclatureId_ = value;
      }
    }

    /// <summary>Field number for the "initial_quantity" field.</summary>
    public const int InitialQuantityFieldNumber = 4;
    private double initialQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialQuantity {
      get { return initialQuantity_; }
      set {
        initialQuantity_ = value;
      }
    }

    /// <summary>Field number for the "received_quantity" field.</summary>
    public const int ReceivedQuantityFieldNumber = 5;
    private double receivedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ReceivedQuantity {
      get { return receivedQuantity_; }
      set {
        receivedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "consumed_quantity" field.</summary>
    public const int ConsumedQuantityFieldNumber = 6;
    private double consumedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ConsumedQuantity {
      get { return consumedQuantity_; }
      set {
        consumedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "nomenclature" field.</summary>
    public const int NomenclatureFieldNumber = 7;
    private global::RequestManagement.Server.Controllers.StockNomenclature nomenclature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RequestManagement.Server.Controllers.StockNomenclature Nomenclature {
      get { return nomenclature_; }
      set {
        nomenclature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Stock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Stock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (WarehouseId != other.WarehouseId) return false;
      if (NomenclatureId != other.NomenclatureId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialQuantity, other.InitialQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ReceivedQuantity, other.ReceivedQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ConsumedQuantity, other.ConsumedQuantity)) return false;
      if (!object.Equals(Nomenclature, other.Nomenclature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (WarehouseId != 0) hash ^= WarehouseId.GetHashCode();
      if (NomenclatureId != 0) hash ^= NomenclatureId.GetHashCode();
      if (InitialQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialQuantity);
      if (ReceivedQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ReceivedQuantity);
      if (ConsumedQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ConsumedQuantity);
      if (nomenclature_ != null) hash ^= Nomenclature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (WarehouseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WarehouseId);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (ReceivedQuantity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ReceivedQuantity);
      }
      if (ConsumedQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ConsumedQuantity);
      }
      if (nomenclature_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (WarehouseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WarehouseId);
      }
      if (NomenclatureId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(InitialQuantity);
      }
      if (ReceivedQuantity != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ReceivedQuantity);
      }
      if (ConsumedQuantity != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(ConsumedQuantity);
      }
      if (nomenclature_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Nomenclature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (WarehouseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WarehouseId);
      }
      if (NomenclatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NomenclatureId);
      }
      if (InitialQuantity != 0D) {
        size += 1 + 8;
      }
      if (ReceivedQuantity != 0D) {
        size += 1 + 8;
      }
      if (ConsumedQuantity != 0D) {
        size += 1 + 8;
      }
      if (nomenclature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nomenclature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Stock other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.WarehouseId != 0) {
        WarehouseId = other.WarehouseId;
      }
      if (other.NomenclatureId != 0) {
        NomenclatureId = other.NomenclatureId;
      }
      if (other.InitialQuantity != 0D) {
        InitialQuantity = other.InitialQuantity;
      }
      if (other.ReceivedQuantity != 0D) {
        ReceivedQuantity = other.ReceivedQuantity;
      }
      if (other.ConsumedQuantity != 0D) {
        ConsumedQuantity = other.ConsumedQuantity;
      }
      if (other.nomenclature_ != null) {
        if (nomenclature_ == null) {
          Nomenclature = new global::RequestManagement.Server.Controllers.StockNomenclature();
        }
        Nomenclature.MergeFrom(other.Nomenclature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 24: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
          case 41: {
            ReceivedQuantity = input.ReadDouble();
            break;
          }
          case 49: {
            ConsumedQuantity = input.ReadDouble();
            break;
          }
          case 58: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.StockNomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            WarehouseId = input.ReadInt32();
            break;
          }
          case 24: {
            NomenclatureId = input.ReadInt32();
            break;
          }
          case 33: {
            InitialQuantity = input.ReadDouble();
            break;
          }
          case 41: {
            ReceivedQuantity = input.ReadDouble();
            break;
          }
          case 49: {
            ConsumedQuantity = input.ReadDouble();
            break;
          }
          case 58: {
            if (nomenclature_ == null) {
              Nomenclature = new global::RequestManagement.Server.Controllers.StockNomenclature();
            }
            input.ReadMessage(Nomenclature);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StockNomenclature : pb::IMessage<StockNomenclature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StockNomenclature> _parser = new pb::MessageParser<StockNomenclature>(() => new StockNomenclature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StockNomenclature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockNomenclature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockNomenclature(StockNomenclature other) : this() {
      code_ = other.code_;
      name_ = other.name_;
      article_ = other.article_;
      unitOfMeasure_ = other.unitOfMeasure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StockNomenclature Clone() {
      return new StockNomenclature(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "article" field.</summary>
    public const int ArticleFieldNumber = 4;
    private string article_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Article {
      get { return article_; }
      set {
        article_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unitOfMeasure" field.</summary>
    public const int UnitOfMeasureFieldNumber = 5;
    private string unitOfMeasure_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnitOfMeasure {
      get { return unitOfMeasure_; }
      set {
        unitOfMeasure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StockNomenclature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StockNomenclature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Name != other.Name) return false;
      if (Article != other.Article) return false;
      if (UnitOfMeasure != other.UnitOfMeasure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Article.Length != 0) hash ^= Article.GetHashCode();
      if (UnitOfMeasure.Length != 0) hash ^= UnitOfMeasure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Article.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Article.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Article.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Article);
      }
      if (UnitOfMeasure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitOfMeasure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StockNomenclature other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Article.Length != 0) {
        Article = other.Article;
      }
      if (other.UnitOfMeasure.Length != 0) {
        UnitOfMeasure = other.UnitOfMeasure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Article = input.ReadString();
            break;
          }
          case 42: {
            UnitOfMeasure = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Article = input.ReadString();
            break;
          }
          case 42: {
            UnitOfMeasure = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code


//StockGrpc.cs
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: stock.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RequestManagement.Server.Controllers {
  public static partial class StockService
  {
    static readonly string __ServiceName = "StockService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllStocksRequest> __Marshaller_GetAllStocksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllStocksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.GetAllStocksResponse> __Marshaller_GetAllStocksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.GetAllStocksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateStockRequest> __Marshaller_CreateStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.CreateStockResponse> __Marshaller_CreateStockResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.CreateStockResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateStockRequest> __Marshaller_UpdateStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.UpdateStockResponse> __Marshaller_UpdateStockResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.UpdateStockResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteStockRequest> __Marshaller_DeleteStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RequestManagement.Server.Controllers.DeleteStockResponse> __Marshaller_DeleteStockResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RequestManagement.Server.Controllers.DeleteStockResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.GetAllStocksRequest, global::RequestManagement.Server.Controllers.GetAllStocksResponse> __Method_GetAllStock = new grpc::Method<global::RequestManagement.Server.Controllers.GetAllStocksRequest, global::RequestManagement.Server.Controllers.GetAllStocksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllStock",
        __Marshaller_GetAllStocksRequest,
        __Marshaller_GetAllStocksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.CreateStockRequest, global::RequestManagement.Server.Controllers.CreateStockResponse> __Method_CreateStock = new grpc::Method<global::RequestManagement.Server.Controllers.CreateStockRequest, global::RequestManagement.Server.Controllers.CreateStockResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateStock",
        __Marshaller_CreateStockRequest,
        __Marshaller_CreateStockResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.UpdateStockRequest, global::RequestManagement.Server.Controllers.UpdateStockResponse> __Method_UpdateStock = new grpc::Method<global::RequestManagement.Server.Controllers.UpdateStockRequest, global::RequestManagement.Server.Controllers.UpdateStockResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateStock",
        __Marshaller_UpdateStockRequest,
        __Marshaller_UpdateStockResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RequestManagement.Server.Controllers.DeleteStockRequest, global::RequestManagement.Server.Controllers.DeleteStockResponse> __Method_DeleteStock = new grpc::Method<global::RequestManagement.Server.Controllers.DeleteStockRequest, global::RequestManagement.Server.Controllers.DeleteStockResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteStock",
        __Marshaller_DeleteStockRequest,
        __Marshaller_DeleteStockResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RequestManagement.Server.Controllers.StockReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for StockService</summary>
    public partial class StockServiceClient : grpc::ClientBase<StockServiceClient>
    {
      /// <summary>Creates a new client for StockService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public StockServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for StockService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public StockServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected StockServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected StockServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllStocksResponse GetAllStock(global::RequestManagement.Server.Controllers.GetAllStocksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllStock(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.GetAllStocksResponse GetAllStock(global::RequestManagement.Server.Controllers.GetAllStocksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllStock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllStocksResponse> GetAllStockAsync(global::RequestManagement.Server.Controllers.GetAllStocksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllStockAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.GetAllStocksResponse> GetAllStockAsync(global::RequestManagement.Server.Controllers.GetAllStocksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllStock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateStockResponse CreateStock(global::RequestManagement.Server.Controllers.CreateStockRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateStock(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.CreateStockResponse CreateStock(global::RequestManagement.Server.Controllers.CreateStockRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateStock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateStockResponse> CreateStockAsync(global::RequestManagement.Server.Controllers.CreateStockRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateStockAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.CreateStockResponse> CreateStockAsync(global::RequestManagement.Server.Controllers.CreateStockRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateStock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateStockResponse UpdateStock(global::RequestManagement.Server.Controllers.UpdateStockRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateStock(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.UpdateStockResponse UpdateStock(global::RequestManagement.Server.Controllers.UpdateStockRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateStock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateStockResponse> UpdateStockAsync(global::RequestManagement.Server.Controllers.UpdateStockRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateStockAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.UpdateStockResponse> UpdateStockAsync(global::RequestManagement.Server.Controllers.UpdateStockRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateStock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteStockResponse DeleteStock(global::RequestManagement.Server.Controllers.DeleteStockRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteStock(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RequestManagement.Server.Controllers.DeleteStockResponse DeleteStock(global::RequestManagement.Server.Controllers.DeleteStockRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteStock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteStockResponse> DeleteStockAsync(global::RequestManagement.Server.Controllers.DeleteStockRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteStockAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RequestManagement.Server.Controllers.DeleteStockResponse> DeleteStockAsync(global::RequestManagement.Server.Controllers.DeleteStockRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteStock, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override StockServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StockServiceClient(configuration);
      }
    }

  }
}
#endregion


//WpfClient.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient.designer.deps.json
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "BCrypt.Net-Next/4.0.3": {
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "assemblyVersion": "4.0.3.0",
            "fileVersion": "4.0.3.0"
          }
        }
      },
      "CommunityToolkit.Mvvm/8.4.0": {
        "runtime": {
          "lib/net8.0/CommunityToolkit.Mvvm.dll": {
            "assemblyVersion": "8.4.0.0",
            "fileVersion": "8.4.0.1"
          }
        }
      },
      "Google.Protobuf/3.30.2": {
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "assemblyVersion": "3.30.2.0",
            "fileVersion": "3.30.2.0"
          }
        }
      },
      "Grpc.AspNetCore/2.70.0": {
        "dependencies": {
          "Google.Protobuf": "3.30.2",
          "Grpc.AspNetCore.Server.ClientFactory": "2.70.0",
          "Grpc.Tools": "2.71.0"
        }
      },
      "Grpc.AspNetCore.Server/2.70.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
        "dependencies": {
          "Grpc.AspNetCore.Server": "2.70.0",
          "Grpc.Net.ClientFactory": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.AspNetCore.Server.ClientFactory.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Core.Api/2.70.0": {
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.Client/2.70.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.70.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.ClientFactory/2.70.0": {
        "dependencies": {
          "Grpc.Net.Client": "2.70.0",
          "Microsoft.Extensions.Http": "6.0.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.ClientFactory.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Net.Common/2.70.0": {
        "dependencies": {
          "Grpc.Core.Api": "2.70.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.70.0.0"
          }
        }
      },
      "Grpc.Tools/2.71.0": {},
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "assemblyVersion": "8.0.14.0",
            "fileVersion": "8.0.1425.11221"
          }
        }
      },
      "Microsoft.AspNetCore.Http.Abstractions/2.3.0": {
        "dependencies": {
          "Microsoft.AspNetCore.Http.Features": "2.3.0",
          "System.Text.Encodings.Web": "8.0.0"
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.AspNetCore.Http.Abstractions.dll": {
            "assemblyVersion": "2.3.0.0",
            "fileVersion": "2.3.0.25014"
          }
        }
      },
      "Microsoft.AspNetCore.Http.Features/2.3.0": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.AspNetCore.Http.Features.dll": {
            "assemblyVersion": "2.3.0.0",
            "fileVersion": "2.3.0.25014"
          }
        }
      },
      "Microsoft.Bcl.Memory/9.0.0": {
        "runtime": {
          "lib/net8.0/Microsoft.Bcl.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.24.52809"
          }
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.3": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.3",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.325.11202"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {},
      "Microsoft.EntityFrameworkCore.Relational/9.0.1": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.Extensions.Caching.Memory": "9.0.3",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.1",
          "Microsoft.Extensions.Logging": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "assemblyVersion": "9.0.1.0",
            "fileVersion": "9.0.124.61002"
          }
        }
      },
      "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.3",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.124.61010"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Http/6.0.0": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Logging": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.Extensions.Http.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "Microsoft.Extensions.Logging/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.3",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.Extensions.Options": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "System.Diagnostics.DiagnosticSource": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Options/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.3",
          "Microsoft.Extensions.Primitives": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.Extensions.Primitives/9.0.3": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.7.0": {
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.7.0": {
        "dependencies": {
          "Microsoft.Bcl.Memory": "9.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3",
          "Microsoft.IdentityModel.Logging": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "Npgsql/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.3.0"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.3",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.1",
          "Npgsql": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "assemblyVersion": "9.0.4.0",
            "fileVersion": "9.0.4.0"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.3": {
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.325.11113"
          }
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.7.0": {
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.7.0",
          "Microsoft.IdentityModel.Tokens": "8.7.0"
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "assemblyVersion": "8.7.0.0",
            "fileVersion": "8.7.0.60321"
          }
        }
      },
      "System.Text.Encodings.Web/8.0.0": {
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.23.53103"
          }
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "rid": "browser",
            "assetType": "runtime",
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.23.53103"
          }
        }
      }
    }
  },
  "libraries": {
    "BCrypt.Net-Next/4.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "path": "bcrypt.net-next/4.0.3",
      "hashPath": "bcrypt.net-next.4.0.3.nupkg.sha512"
    },
    "CommunityToolkit.Mvvm/8.4.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tqVU8yc/ADO9oiTRyTnwhFN68hCwvkliMierptWOudIAvWY1mWCh5VFh+guwHJmpMwfg0J0rY+yyd5Oy7ty9Uw==",
      "path": "communitytoolkit.mvvm/8.4.0",
      "hashPath": "communitytoolkit.mvvm.8.4.0.nupkg.sha512"
    },
    "Google.Protobuf/3.30.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Y2aOVLIt75yeeEWigg9V9YnjsEm53sADtLGq0gLhwaXpk3iu8tYSoauolyhenagA2sWno2TQ2WujI0HQd6s1Vw==",
      "path": "google.protobuf/3.30.2",
      "hashPath": "google.protobuf.3.30.2.nupkg.sha512"
    },
    "Grpc.AspNetCore/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-s29ST5F2/PZLzOnfqfeDn0emAZajBtYnV9G7hkbK8Eu9+XphoL3KfiEsg2eBsx7P9YYQXcksDbE+CbHApMZeJA==",
      "path": "grpc.aspnetcore/2.70.0",
      "hashPath": "grpc.aspnetcore.2.70.0.nupkg.sha512"
    },
    "Grpc.AspNetCore.Server/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9d6JuMLSxwOX4zERV7HBwq1XL8DD48a6FSoxD5dDXrCz/o0HqMXE2+lRcXHckOlz1JCesznW8XMMJdsU1FfY7w==",
      "path": "grpc.aspnetcore.server/2.70.0",
      "hashPath": "grpc.aspnetcore.server.2.70.0.nupkg.sha512"
    },
    "Grpc.AspNetCore.Server.ClientFactory/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-k4GrvUAgVWm7DyhnV55MHdX4bQSpZVEQmlZO3bdSmGZ+z6Hx+CwDlhqiReczCm6qbzSUbS1YW0t7z7UEObTwKA==",
      "path": "grpc.aspnetcore.server.clientfactory/2.70.0",
      "hashPath": "grpc.aspnetcore.server.clientfactory.2.70.0.nupkg.sha512"
    },
    "Grpc.Core.Api/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-66UotvWcSIq41oiQhLWcQACyKPM4umxXNiht5DQTLZJfNwEswWOcS7Z0xIEHyNIBE7ZpjotH22bEjTkvhPxmVw==",
      "path": "grpc.core.api/2.70.0",
      "hashPath": "grpc.core.api.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.Client/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xNv0FFCVJa5S1beUtye82WFCxKThuE1jbN8DO1x1Rj8VSIWXLBUmfSID5a1fGzsU2R/EMfwPoWclJ2RMfQuGXw==",
      "path": "grpc.net.client/2.70.0",
      "hashPath": "grpc.net.client.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.ClientFactory/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Qg+93oj/8RdEw3PnLZNNYWnWCWyJYC/ZYZcjeln/pLaxLaPvdXES1peiqSJUI4wLFZ1JwGlbWt8+nM1i2E7ihg==",
      "path": "grpc.net.clientfactory/2.70.0",
      "hashPath": "grpc.net.clientfactory.2.70.0.nupkg.sha512"
    },
    "Grpc.Net.Common/2.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-rBdEUMyCwa+iB8mqC6JKyPbj3SBHHkReJj/yy/XKJI63GcG6w9DJMMGTVcYHqq4Ci2W4m0HT4jt2pFfFscar8g==",
      "path": "grpc.net.common/2.70.0",
      "hashPath": "grpc.net.common.2.70.0.nupkg.sha512"
    },
    "Grpc.Tools/2.71.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-r8zHZm7kHdMrtujnkcuQ0BNDH2969at/8Va1ZzQgVblaQzR7tm8JlA3G+5Z5IFbvvf9PcAr1/VcoSR+g7j4Nyw==",
      "path": "grpc.tools/2.71.0",
      "hashPath": "grpc.tools.2.71.0.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.14": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-e19jmWJAQucbPYk3/fihJMDCYfv6CO+Qwp34pOehUSCbaHROw6FZ551SN1D0s9Btl0U/QHfuwFq6Z8Oa2ktE6g==",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.14",
      "hashPath": "microsoft.aspnetcore.authentication.jwtbearer.8.0.14.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Http.Abstractions/2.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-39r9PPrjA6s0blyFv5qarckjNkaHRA5B+3b53ybuGGNTXEj1/DStQJ4NWjFL6QTRQpL9zt7nDyKxZdJOlcnq+Q==",
      "path": "microsoft.aspnetcore.http.abstractions/2.3.0",
      "hashPath": "microsoft.aspnetcore.http.abstractions.2.3.0.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Http.Features/2.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-f10WUgcsKqrkmnz6gt8HeZ7kyKjYN30PO7cSic1lPtH7paPtnQqXPOveul/SIPI43PhRD4trttg4ywnrEmmJpA==",
      "path": "microsoft.aspnetcore.http.features/2.3.0",
      "hashPath": "microsoft.aspnetcore.http.features.2.3.0.nupkg.sha512"
    },
    "Microsoft.Bcl.Memory/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bTUtGfpGyJnohQzjdXbtc7MqNzkv7CWUSRz54+ucNm0i32rZiIU0VdVPHDBShOl1qhVKRjW8mnEBz3d2vH93tQ==",
      "path": "microsoft.bcl.memory/9.0.0",
      "hashPath": "microsoft.bcl.memory.9.0.0.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ji6fWE8bFWTvqaMue49RSCcAeqlec13hAbitTBZyz/RmYsQDhqM9VkWUoXS1x1mjcsyWjc5EQr2XyuAkwp0eNQ==",
      "path": "microsoft.entityframeworkcore/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HQH7HgwTl6IyasW7t6F2+ihuHLDmf9+8XaS41v8VHN5Z7x5ZMQIiHCbwxme4P5ICAjBG6VsWcjMCoh4fHbEwJg==",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-M+iOxejD3HqPV8/KE148wIehHA3cmMF+FgnpiN8CFB7DLokVSKQPPrwtHjcrNYJ/BDEssviEPNok/jtQWxj7xA==",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.3",
      "hashPath": "microsoft.entityframeworkcore.analyzers.9.0.3.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-7Iu0h4oevRvH4IwPzmxuIJGYRt55TapoREGlluk75KCO7lenN0+QnzCl6cQDY48uDoxAUpJbpK2xW7o8Ix69dw==",
      "path": "microsoft.entityframeworkcore.relational/9.0.1",
      "hashPath": "microsoft.entityframeworkcore.relational.9.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-t8b0R6wtqC4o0hJ+oQkLPydw2MMLEoLEpQXCWbzXAm9NBMOngkDZNcvwF6DxbYdL5SlfZJXbYmiOxKZmwHNgNg==",
      "path": "microsoft.extensions.caching.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.caching.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Memory/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TXggBGDDd6r+J7FV09plXpzGmWcknVyoDsHlY2qcCbcAhmb0eH7Q9IkfIZl54/zEedVTa9jPgiPFTxH9WuCGMQ==",
      "path": "microsoft.extensions.caching.memory/9.0.3",
      "hashPath": "microsoft.extensions.caching.memory.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+4hfFIY1UjBCXFTTOd+ojlDPq6mep3h5Vq5SYE3Pjucr7dNXmq4S/6P/LoVnZFz2e/5gWp/om4svUFgznfULcA==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.1",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lDbxJpkl6X8KZGpkAxgrrthQ42YeiR0xjPp7KPx+sCPc3ZbpaIbjzd0QQ+9kDdK2RU2DOl3pc6tQyAgEZY3V0A==",
      "path": "microsoft.extensions.dependencyinjection/9.0.3",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TfaHPSe39NyL2wxkisRxXK7xvHGZYBZ+dy3r+mqGvnxKgAPdHkMu3QMQZI4pquP6W5FIQBqs8FJpWV8ffCgDqQ==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Http/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-15+pa2G0bAMHbHewaQIdr/y6ag2H3yh4rd9hTXavtWDzQBkvpe2RMqFg8BxDpcQWssmjmBApGPcw93QRz6YcMg==",
      "path": "microsoft.extensions.http/6.0.0",
      "hashPath": "microsoft.extensions.http.6.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-utIi2R1nm+PCWkvWBf1Ou6LWqg9iLfHU23r8yyU9VCvda4dEs7xbTZSwGa5KuwbpzpgCbHCIuKaFHB3zyFmnGw==",
      "path": "microsoft.extensions.logging/9.0.3",
      "hashPath": "microsoft.extensions.logging.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-H/MBMLt9A/69Ux4OrV7oCKt3DcMT04o5SCqDolulzQA66TLFEpYYb4qedMs/uwrLtyHXGuDGWKZse/oa8W9AZw==",
      "path": "microsoft.extensions.logging.abstractions/9.0.3",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xE7MpY70lkw1oiid5y6FbL9dVw8oLfkx8RhSNGN8sSzBlCqGn0SyT3Fqc8tZnDaPIq7Z8R9RTKlS564DS+MV3g==",
      "path": "microsoft.extensions.options/9.0.3",
      "hashPath": "microsoft.extensions.options.9.0.3.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yCCJHvBcRyqapMSNzP+kTc57Eaavq2cr5Tmuil6/XVnipQf5xmskxakSQ1enU6S4+fNg3sJ27WcInV64q24JsA==",
      "path": "microsoft.extensions.primitives/9.0.3",
      "hashPath": "microsoft.extensions.primitives.9.0.3.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Abstractions/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OQd5aVepYvh5evOmBMeAYjMIpEcTf1ZCBZaU7Nh/RlhhdXefjFDJeP1L2F2zeNT1unFr+wUu/h3Ac2Xb4BXU6w==",
      "path": "microsoft.identitymodel.abstractions/8.7.0",
      "hashPath": "microsoft.identitymodel.abstractions.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-uzsSAWhNhbrkWbQKBTE8QhzviU6sr3bJ1Bkv7gERlhswfSKOp7HsxTRLTPBpx/whQ/GRRHEwMg8leRIPbMrOgw==",
      "path": "microsoft.identitymodel.jsonwebtokens/8.7.0",
      "hashPath": "microsoft.identitymodel.jsonwebtokens.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Logging/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Bs0TznPAu+nxa9rAVHJ+j3CYECHJkT3tG8AyBfhFYlT5ldsDhoxFT7J+PKxJHLf+ayqWfvDZHHc4639W2FQCxA==",
      "path": "microsoft.identitymodel.logging/8.7.0",
      "hashPath": "microsoft.identitymodel.logging.8.7.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Tokens/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5Z6voXjRXAnGklhmZd1mKz89UhcF5ZQQZaZc2iKrOuL4Li1UihG2vlJx8IbiFAOIxy/xdbsAm0A+WZEaH5fxng==",
      "path": "microsoft.identitymodel.tokens/8.7.0",
      "hashPath": "microsoft.identitymodel.tokens.8.7.0.nupkg.sha512"
    },
    "Npgsql/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "path": "npgsql/9.0.3",
      "hashPath": "npgsql.9.0.3.nupkg.sha512"
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "hashPath": "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-cBA+28xDW33tSiGht/H8xvr8lnaCrgJ7EdO348AfSGsX4PPJUOULKxny/cc9DVNGExaCrtqagsnm5M2mkWIZ+g==",
      "path": "system.diagnostics.diagnosticsource/9.0.3",
      "hashPath": "system.diagnostics.diagnosticsource.9.0.3.nupkg.sha512"
    },
    "System.IdentityModel.Tokens.Jwt/8.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-8dKL3A9pVqYCJIXHd4H2epQqLxSvKeNxGonR0e5g89yMchyvsM/NLuB06otx29BicUd6+LUJZgNZmvYjjPsPGg==",
      "path": "system.identitymodel.tokens.jwt/8.7.0",
      "hashPath": "system.identitymodel.tokens.jwt.8.7.0.nupkg.sha512"
    },
    "System.Text.Encodings.Web/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yev/k9GHAEGx2Rg3/tU6MQh4HGBXJs70y7j1LaM1i/ER9po+6nnQ6RRqTJn1E7Xu0fbIFK80Nh5EoODxrbxwBQ==",
      "path": "system.text.encodings.web/8.0.0",
      "hashPath": "system.text.encodings.web.8.0.0.nupkg.sha512"
    }
  }
}

//WpfClient.designer.runtimeconfig.json
{
  "runtimeOptions": {
    "tfm": "net8.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.WindowsDesktop.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.AspNetCore.App",
        "version": "8.0.0"
      }
    ],
    "additionalProbingPaths": [
      "C:\\Users\\Thron\\.dotnet\\store\\|arch|\\|tfm|",
      "C:\\Users\\Thron\\.nuget\\packages",
      "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages",
      "C:\\Program Files (x86)\\Microsoft\\Xamarin\\NuGet"
    ],
    "configProperties": {
      "MVVMTOOLKIT_ENABLE_INOTIFYPROPERTYCHANGING_SUPPORT": true,
      "System.Reflection.NullabilityInfoContext.IsSupported": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": true,
      "Microsoft.NETCore.DotNetHostPolicy.SetAppPaths": true
    }
  }
}

//WpfClient.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_0shic1jt_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_0shic1jt_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_0shic1jt_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_0ujqamti_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_0ujqamti_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_0ujqamti_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_11m3sm4p_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_11m3sm4p_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_11m3sm4p_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_1g23fqfd_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_1g23fqfd_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_1g23fqfd_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_1uekeroh_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_1uekeroh_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_1uekeroh_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_25ho1jba_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_25ho1jba_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_25ho1jba_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_2bt205vp_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_2bt205vp_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_2bt205vp_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_350ftcdw_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_350ftcdw_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_350ftcdw_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_4gl2zvl4_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_4gl2zvl4_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_4gl2zvl4_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_5lmzices_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_5lmzices_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_5lmzices_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_5mp05z1l_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_5mp05z1l_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_5mp05z1l_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_5w01cpee_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_5w01cpee_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_5w01cpee_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_a5wf13ky_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_a5wf13ky_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_a5wf13ky_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_aedr5f14_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_aedr5f14_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_aedr5f14_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_amoirhcn_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_amoirhcn_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_amoirhcn_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_araah443_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_araah443_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_araah443_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_ctenejb2_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_ctenejb2_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_ctenejb2_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_dfuy1zv5_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_dfuy1zv5_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_dfuy1zv5_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_dtnrde2p_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_dtnrde2p_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_dtnrde2p_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_eudodon5_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_eudodon5_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_eudodon5_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_fgswqazf_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_fgswqazf_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_fgswqazf_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_fohidno2_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_fohidno2_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_fohidno2_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_h340wmmz_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_h340wmmz_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_h340wmmz_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_hbobynzv_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_hbobynzv_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_hbobynzv_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_hjahpfvs_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_hjahpfvs_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_hjahpfvs_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_hoozlwzx_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_hoozlwzx_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_hoozlwzx_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_kcu1ho2n_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_kcu1ho2n_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_kcu1ho2n_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_l4gowteb_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_l4gowteb_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_l4gowteb_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_l5y0ynte_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_l5y0ynte_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_l5y0ynte_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_lijzcctm_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_lijzcctm_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_lijzcctm_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_lqiov5vx_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_lqiov5vx_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_lqiov5vx_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_lqzllrta_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_lqzllrta_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_lqzllrta_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_mivyezcz_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_mivyezcz_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_mivyezcz_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_p4xqltvx_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_p4xqltvx_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_p4xqltvx_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_peae3pmd_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_peae3pmd_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_peae3pmd_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_qruvdcns_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_qruvdcns_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_qruvdcns_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_r335y0wo_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_r335y0wo_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_r335y0wo_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_r4nhyw0c_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_r4nhyw0c_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_r4nhyw0c_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_rcuvthhv_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_rcuvthhv_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_rcuvthhv_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_rtupmx0q_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_rtupmx0q_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_rtupmx0q_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_rygbribr_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_rygbribr_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_rygbribr_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_s4yba5ee_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_s4yba5ee_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_s4yba5ee_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_s5rlvof2_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_s5rlvof2_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_s5rlvof2_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_udhgaazq_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_udhgaazq_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_udhgaazq_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_udlb1oej_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_udlb1oej_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_udlb1oej_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_ug31zqkb_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_ug31zqkb_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_ug31zqkb_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_vkpcfxah_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+53a4c7b2dbf7651554d2bf8ee19466804fed1791")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_vkpcfxah_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_vkpcfxah_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/53a4c7b2dbf7651554d2bf8ee19466804fed1791/*"}}

//WpfClient_wg0iioax_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_wg0iioax_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_wg0iioax_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_wkxhzwzi_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_wkxhzwzi_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_wkxhzwzi_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_wsdexz1o_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_wsdexz1o_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_wsdexz1o_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_xc0pc034_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_xc0pc034_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_xc0pc034_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_xsrxcoqd_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_xsrxcoqd_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_xsrxcoqd_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//WpfClient_zhl0ii3h_wpftmp.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+51fb1dbe237ad9b050ed5e26a432dc1a3b90c212")]
[assembly: System.Reflection.AssemblyProductAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyTitleAttribute("WpfClient")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Создано классом WriteCodeFragment MSBuild.



//WpfClient_zhl0ii3h_wpftmp.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;


//WpfClient_zhl0ii3h_wpftmp.sourcelink.json
{"documents":{"C:\\Users\\Thron\\source\\repos\\RequestManagementSystem\\*":"https://raw.githubusercontent.com/Thron41k/RequestManagementSystem/51fb1dbe237ad9b050ed5e26a432dc1a3b90c212/*"}}

//CreateRequestView.g.cs
#pragma checksum "..\..\..\..\Views\CreateRequestView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "55E8C993FAC963C3971F9DE0E523A882BD107A75"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// CreateRequestView
    /// </summary>
    public partial class CreateRequestView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/createrequestview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\CreateRequestView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//CreateRequestView.g.i.cs
#pragma checksum "..\..\..\..\Views\CreateRequestView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "55E8C993FAC963C3971F9DE0E523A882BD107A75"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// CreateRequestView
    /// </summary>
    public partial class CreateRequestView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/createrequestview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\CreateRequestView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//DefectGroupView.g.cs
#pragma checksum "..\..\..\..\Views\DefectGroupView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "BC69619E4030141D3EBB12E615E15DC81993315E"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// DefectGroupView
    /// </summary>
    public partial class DefectGroupView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/defectgroupview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\DefectGroupView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//DefectGroupView.g.i.cs
#pragma checksum "..\..\..\..\Views\DefectGroupView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "BC69619E4030141D3EBB12E615E15DC81993315E"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// DefectGroupView
    /// </summary>
    public partial class DefectGroupView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/defectgroupview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\DefectGroupView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//DefectView.g.cs
#pragma checksum "..\..\..\..\Views\DefectView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "C97B451D6620DD015FEA505260D5350E9C59A4E5"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// DefectView
    /// </summary>
    public partial class DefectView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/defectview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\DefectView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//DefectView.g.i.cs
#pragma checksum "..\..\..\..\Views\DefectView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "C97B451D6620DD015FEA505260D5350E9C59A4E5"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// DefectView
    /// </summary>
    public partial class DefectView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/defectview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\DefectView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//DriverView.g.cs
#pragma checksum "..\..\..\..\Views\DriverView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "581DF6EF2FF9BDD56C9A905E30801D4626EF4AE2"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// DriverView
    /// </summary>
    public partial class DriverView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/driverview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\DriverView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//DriverView.g.i.cs
#pragma checksum "..\..\..\..\Views\DriverView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "581DF6EF2FF9BDD56C9A905E30801D4626EF4AE2"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// DriverView
    /// </summary>
    public partial class DriverView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/driverview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\DriverView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//EquipmentView.g.cs
#pragma checksum "..\..\..\..\Views\EquipmentView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "E6D229C0583477F60BDDB9ABE37B219846203BCF"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// EquipmentView
    /// </summary>
    public partial class EquipmentView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/equipmentview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\EquipmentView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//EquipmentView.g.i.cs
#pragma checksum "..\..\..\..\Views\EquipmentView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "E6D229C0583477F60BDDB9ABE37B219846203BCF"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// EquipmentView
    /// </summary>
    public partial class EquipmentView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/equipmentview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\EquipmentView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//MainMenu.g.cs
#pragma checksum "..\..\..\..\Views\MainMenu.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "468AA96CDB078795F8EAD02DDEC8C1ABEED4DD7C"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;
using WpfClient.Views;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// MainMenu
    /// </summary>
    public partial class MainMenu : System.Windows.Window, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/mainmenu.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\MainMenu.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//MainMenu.g.i.cs
#pragma checksum "..\..\..\..\Views\MainMenu.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "468AA96CDB078795F8EAD02DDEC8C1ABEED4DD7C"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;
using WpfClient.Views;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// MainMenu
    /// </summary>
    public partial class MainMenu : System.Windows.Window, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/mainmenu.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\MainMenu.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//MainWindow.g.cs
#pragma checksum "..\..\..\..\Views\MainWindow.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1C035828153662E08F5EFAE354125DD5AEE806FE"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// MainWindow
    /// </summary>
    public partial class MainWindow : System.Windows.Window, System.Windows.Markup.IComponentConnector {
        
        
        #line 20 "..\..\..\..\Views\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.PasswordBox passwordBox;
        
        #line default
        #line hidden
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/mainwindow.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\MainWindow.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            switch (connectionId)
            {
            case 1:
            this.passwordBox = ((System.Windows.Controls.PasswordBox)(target));
            return;
            }
            this._contentLoaded = true;
        }
    }
}



//MainWindow.g.i.cs
#pragma checksum "..\..\..\..\Views\MainWindow.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1C035828153662E08F5EFAE354125DD5AEE806FE"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// MainWindow
    /// </summary>
    public partial class MainWindow : System.Windows.Window, System.Windows.Markup.IComponentConnector {
        
        
        #line 20 "..\..\..\..\Views\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.PasswordBox passwordBox;
        
        #line default
        #line hidden
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/mainwindow.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\MainWindow.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            switch (connectionId)
            {
            case 1:
            this.passwordBox = ((System.Windows.Controls.PasswordBox)(target));
            return;
            }
            this._contentLoaded = true;
        }
    }
}



//NomenclatureView - Копировать.g.cs
#pragma checksum "..\..\..\..\Views\NomenclatureView - Копировать.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5903854B961CA783B4393563BE7D776902B672DD"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// NomenclatureView
    /// </summary>
    public partial class NomenclatureView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/nomenclatureview%20-%20%d0%9a%d0%be%d0%bf%d0%b8%d1%80%" +
                    "d0%be%d0%b2%d0%b0%d1%82%d1%8c.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\NomenclatureView - Копировать.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//NomenclatureView - Копировать.g.i.cs
#pragma checksum "..\..\..\..\Views\NomenclatureView - Копировать.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5903854B961CA783B4393563BE7D776902B672DD"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// NomenclatureView
    /// </summary>
    public partial class NomenclatureView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;V1.0.0.0;component/views/nomenclatureview%20-%20%d0%9a%d0%be%d0%bf%d0%" +
                    "b8%d1%80%d0%be%d0%b2%d0%b0%d1%82%d1%8c.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\NomenclatureView - Копировать.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//NomenclatureView.g.cs
#pragma checksum "..\..\..\..\Views\NomenclatureView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5903854B961CA783B4393563BE7D776902B672DD"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// NomenclatureView
    /// </summary>
    public partial class NomenclatureView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/nomenclatureview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\NomenclatureView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//NomenclatureView.g.i.cs
#pragma checksum "..\..\..\..\Views\NomenclatureView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5903854B961CA783B4393563BE7D776902B672DD"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// NomenclatureView
    /// </summary>
    public partial class NomenclatureView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/nomenclatureview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\NomenclatureView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//RequestsView.g.cs
#pragma checksum "..\..\..\..\Views\RequestsView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1EF5000F6CDB6744DCDF0A5571BDD2CD56EBE036"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// RequestsView
    /// </summary>
    public partial class RequestsView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/requestsview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\RequestsView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//RequestsView.g.i.cs
#pragma checksum "..\..\..\..\Views\RequestsView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1EF5000F6CDB6744DCDF0A5571BDD2CD56EBE036"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// RequestsView
    /// </summary>
    public partial class RequestsView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/requestsview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\RequestsView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//StockView.g.cs
#pragma checksum "..\..\..\..\Views\StockView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "DB890A3B64759494FFEB3D11BE6F1AE12A031CCF"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;
using WpfClient.ViewModels;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// StockView
    /// </summary>
    public partial class StockView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/stockview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\StockView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//StockView.g.i.cs
#pragma checksum "..\..\..\..\Views\StockView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "DB890A3B64759494FFEB3D11BE6F1AE12A031CCF"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;
using WpfClient.ViewModels;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// StockView
    /// </summary>
    public partial class StockView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/stockview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\StockView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//WarehouseView - Копировать.g.cs
#pragma checksum "..\..\..\..\Views\WarehouseView - Копировать.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "FF2CC6BDF6EE1A79E541D07F8B8BE725D69BFA5A"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// WarehouseView
    /// </summary>
    public partial class WarehouseView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/warehouseview%20-%20%d0%9a%d0%be%d0%bf%d0%b8%d1%80%d0%" +
                    "be%d0%b2%d0%b0%d1%82%d1%8c.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\WarehouseView - Копировать.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//WarehouseView - Копировать.g.i.cs
#pragma checksum "..\..\..\..\Views\WarehouseView - Копировать.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "FF2CC6BDF6EE1A79E541D07F8B8BE725D69BFA5A"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// WarehouseView
    /// </summary>
    public partial class WarehouseView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/warehouseview%20-%20%d0%9a%d0%be%d0%bf%d0%b8%d1%80%d0%" +
                    "be%d0%b2%d0%b0%d1%82%d1%8c.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\WarehouseView - Копировать.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//WarehouseView.g.cs
#pragma checksum "..\..\..\..\Views\WarehouseView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "FF2CC6BDF6EE1A79E541D07F8B8BE725D69BFA5A"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// WarehouseView
    /// </summary>
    public partial class WarehouseView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/warehouseview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\WarehouseView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



//WarehouseView.g.i.cs
#pragma checksum "..\..\..\..\Views\WarehouseView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "FF2CC6BDF6EE1A79E541D07F8B8BE725D69BFA5A"
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace WpfClient.Views {
    
    
    /// <summary>
    /// WarehouseView
    /// </summary>
    public partial class WarehouseView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/WpfClient;component/views/warehouseview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\WarehouseView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "8.0.10.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}



